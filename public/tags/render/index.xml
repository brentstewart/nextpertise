<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Render on </title>
    <link>https://www.nextpertise.net/tags/render/</link>
    <description>Recent content in Render on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Jan 2021 11:45:16 -0500</lastBuildDate>
    
        <atom:link href="https://www.nextpertise.net/tags/render/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Writing a Blog - Reflections after a half year</title>
      <link>https://www.nextpertise.net/posts/210102_hugoafter6/</link>
      <pubDate>Sat, 02 Jan 2021 11:45:16 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210102_hugoafter6/</guid>
      <description>&lt;p&gt;I started writing this blog back in July of 2020.  There was a lot going on at that point, and yet a lot of nothing.  My employer was acquired in May and management was cut, so I was surprised to be out of job.  We were quarantining, which added a degree of difficulty to the job search, and summer is a slow time to find work anyway.  Against all this uncertainty, I wanted to do &lt;em&gt;something&lt;/em&gt; and decided to start writing.  I hoped that the blog might provide a way to establish my &lt;em&gt;bona fides&lt;/em&gt;, and if nothing else it gave me a chance to share what I was working on (since I no longer had co-workers to share with).&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s now January of 2021.  I&amp;rsquo;m employed and the blog has been going for six months.  I thought I&amp;rsquo;d take a look back at the experience of starting a blog.  Has it accomplished what I hoped?  How hard was it and what things would I change?&lt;/p&gt;
&lt;p&gt;Most posts here are technical and this article is intended to address technical things I&amp;rsquo;ve learned.  At the same time, writing is a personal expression and accomplishes personal goals, so I also want to share how this experience has worked for me.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll skip to the conclusion . . . I&amp;rsquo;ve found it valuable, technically approachable, and I think it&amp;rsquo;s something most people should consider.  With that conclusion in mind, one of the biggest challenges is trying to figure out how to get started.  There&amp;rsquo;s some good information online and the Hugo community is very supportive, but it&amp;rsquo;s mostly organized into how to accomplish small discrete tasks and not around helping communicate the big picture.  Hopefully this will encourage you to give it a try and help you avoid some of the problems that might derail you.&lt;/p&gt;
&lt;h2 id=&#34;what-i-did-well&#34;&gt;What I did well&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/c38c7334cc3f23585738e40334284fddcaf03d5e/2e17c/images/hugo-logo-wide.svg#floatsmallright&#34; alt=&#34;Hugo&#34;&gt;
&lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; is a winner.  I write articles in Markdown, which is lightly formatted plain text.  Hugo then automatically applies formatting and plugs it into the navigational structure.  Hugo takes my raw files and generates a set of set of finished static HTML files.  Because of the way Hugo works, I haven&amp;rsquo;t had to think about server infrastructure or spend a lot of time &amp;ldquo;coding&amp;rdquo;, I&amp;rsquo;ve been able to take the time I have and focus on writing.&lt;/p&gt;
&lt;p&gt;I write articles in &lt;a href=&#34;https://vscodium.com/&#34;&gt;VSCodium&lt;/a&gt;.  Microsoft&amp;rsquo;s Visual Studio is open-source and VSCodium has stripped out the telemetry.  The two products are almost perfectly equivalent, so take your pick.  VSCodium is very easy to use, once you get the hang of it.  I open my local copy of the Nextpertise repo in the left pane and a terminal below.  I typically write with &lt;strong&gt;hugo server -D&lt;/strong&gt; running so I can check output on the fly.  I used to use different products for note taking, but I&amp;rsquo;ve switched over to VSCode for that, and I could really imagine writing a longer book using VSCode and then outputting via &lt;a href=&#34;https://www.nextpertise.net/200919_Pandoc_Improved&#34;&gt;pandoc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/images/home-git.svg#floatsmallright&#34; alt=&#34;Visual Studio Code&#34;&gt;
Blog files are kept in a local copy of a Git repository.  After I finish updating, I sync up to GitHub which backs up my files and starts the process of moving them &amp;ldquo;live&amp;rdquo;.  Like VSCodium, Git has become a central tool for me in a variety of settings.  I use it for this blog, for code that I write, for artifacts that I contribute to GNS3, and even for keeping notes (you can have a private Repo).  I&amp;rsquo;ve learned about Git, started contributing to more projects, published my first &amp;ldquo;app&amp;rdquo;, and even expirimented with CI/CD.  One of the benefits of writing the blog is that I&amp;rsquo;ve grown technically and picked up these cool tools.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dka575ofm4ao0.cloudfront.net/pages-transactional_logos/retina/89884/render-logo-dark3.png#floatsmallleft&#34; alt=&#34;Render&#34;&gt;
&lt;a href=&#34;https://render.com&#34;&gt;Render&lt;/a&gt; hosts the site, and that has been a big win.  Render hosts static sites for free, so my only cost has been the domain.  Render integrates with GitHub via a CI process, so when I sync my repository it automatically generates web content with Hugo and posts it to the Render CDN network.  I&amp;rsquo;ve had friends in different parts of the world confirm that performance is uniformly great.  Like other decisions I made early on, this has worked out to allow me to focus my time on content.&lt;/p&gt;
&lt;p&gt;So those are the big wins: Hugo, VSCodium, GitHub, and Render.  How did I decide on that workflow and set of vendors?  The truth is that I saw &lt;a href=&#34;https://www.mikedane.com/&#34;&gt;Mike Dane&amp;rsquo;s Giraffe Academy&lt;/a&gt; Hugo videos on Youtube and thought &amp;ldquo;I can do that&amp;rdquo;.  I was also starting to learn Python and had been fooling around with Visual Studio.  GitHub was something I&amp;rsquo;d been using for a while, especially to work with the GNS3 project, but I&amp;rsquo;d been using it more at work as well.  It really just all came together.  One of the things that I think I did right was I didn&amp;rsquo;t over-analyze things.  I expirimented enough to make sure that I had a good plan and then I just went for it.&lt;/p&gt;
&lt;p&gt;Would I revisit any of these decisions?  There are several static site generator alternatives (the other one I hear most about is Jekyll), but so far I&amp;rsquo;ve been able to do everything I want with Hugo.  I expirimented with hosting in &lt;a href=&#34;https://www.nextpertise.net/200728_S3Review.md&#34;&gt;AWS S3&lt;/a&gt; and AWS offers this free in the first year.  &lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt; is similar to Render in that it too focuses on the JAMStack space.  Netlify has a lot of good technical documentation and videos of lectures, and they sponsor and participate in the community.  I think all three would have been good options, but for me at this point: it&amp;rsquo;s not broke.  I think that is really the magic of Render: the technical and financial barrier to doing this was significantly lowered, and that encouraged me to start and has allowed me to focus on the part I enjoy since.&lt;/p&gt;
&lt;p&gt;Another of my early decisions that has really born fruit - making my own CSS and theme.  Hugo allows you to clone a theme from GitHub.  As I mentioned earlier, the Hugo community is very supportive and there are a lot of themes shared via their &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;gallery&lt;/a&gt;.  I initially started with someone else&amp;rsquo;s theme, but I quickly realized that it was going to take a lot of work to understand how it all fit together.  This was particularly true because I don&amp;rsquo;t have a lot of background in web design.  The Giraffe Academy videos are really good and Mike gets into the early stages of developing a theme there.  I used some of the Giraffe Academy ideas as a basic theme and built up from there.  I&amp;rsquo;ve been able to leverage the blog to learn HTML and CSS.  The theme generally get&amp;rsquo;s more complicated because I want to solve a new problem, so &amp;ldquo;rolling my own&amp;rdquo; has allowed me to grow with the site.&lt;/p&gt;
&lt;h2 id=&#34;what-i-would-change&#34;&gt;What I would change&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png#floatsmallright&#34; alt=&#34;Google&#34;&gt;
My biggest issue has been building readership.  I still don&amp;rsquo;t think I&amp;rsquo;ve got a great handle on how to do that.  Google and Bing make it easy to register your page with them so it shows up in search results.  Google also has free online classes in using their Analytics and Search portals.  I recommend you do those things, but I&amp;rsquo;m still seeing slow and steady growth in readership and not a big growth.  Because the site isn&amp;rsquo;t widely read, it really didn&amp;rsquo;t get my name out when I was job hunting.  I recommend spending some time understanding how to publicize your site.  If anyone has great ideas and could leave them in the comments, I would appreciate your thoughts!&lt;/p&gt;
&lt;p&gt;Another mistake has been setting &lt;strong&gt;draft=false&lt;/strong&gt; in the Archtype.  Turning off the &amp;ldquo;drafts&amp;rdquo; feature in Hugo has resulted in publishing pages that weren&amp;rsquo;t finished.  Yes, you will be annoyed that you forget to &amp;ldquo;publish&amp;rdquo; by setting &lt;strong&gt;draft=false&lt;/strong&gt;, but it was a dumb idea to just turn it off.&lt;/p&gt;
&lt;p&gt;Finally, when I started I didn&amp;rsquo;t really design the site for growth.  I put all the files in the &amp;ldquo;content&amp;rdquo; directory and let them pile up, making them hard to organize.  Over New Year&amp;rsquo;s, I went back and prepended dates to file names and moved everything under a &amp;ldquo;posts&amp;rdquo; subdirectory.  This also allowed me to create the &amp;ldquo;Archives&amp;rdquo; link and made curation easier.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.outsideonline.com/sites/default/files/styles/img_600x600/public/2019/04/10/thegunks-climber-climbing_s.jpg?itok=-a7IJPpA#floatsmallleft&#34; alt=&#34;Climbing&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;I started the blog with two goals: sharing some cool things I&amp;rsquo;ve learned and marketing myself during a period of unemployment.  The blog  didn&amp;rsquo;t really help get a job, but it kept me busy and focused on moving forward during a potentially depressing period.  However, I&amp;rsquo;ve found it cathartic to write and I hope that people have read and found value in this work.&lt;/p&gt;
&lt;p&gt;Creating this site has also given me a &amp;ldquo;real world&amp;rdquo; case to learn about HTML and CSS, cloud hosting, and online analytics.  It&amp;rsquo;s also pushed me to get more involved in various online communities and to learn at a deeper level so I can share my conclusions here.&lt;/p&gt;
&lt;p&gt;George Carlin used to have a bit about the difference in the quality of experience betweeen &lt;em&gt;riding&lt;/em&gt; and &lt;em&gt;driving&lt;/em&gt;.  It was a funny routine, but it stuck with me (like several of his thoughts) because it was true.  Learning through necessity pushes you to go deeper and wider.  Although my day job is management, continuous detailed learning is an important part of the IT industry.&lt;/p&gt;
&lt;p&gt;This has been easy enough that I&amp;rsquo;ve thought about creating sites for my church or the Trail Life group I lead.  If you have an expertise and an interest in sharing it, I would encourage you!  Let me know how I can help!  For those of you already on the path, I&amp;rsquo;m going to continue this conversation in a second column to detail some of the cool things I&amp;rsquo;ve learned how to do!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Render</title>
      <link>https://www.nextpertise.net/posts/200724_render/</link>
      <pubDate>Fri, 24 Jul 2020 08:21:27 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/200724_render/</guid>
      <description>&lt;h3 id=&#34;tldr-you-should-take-a-look-at-rendercom&#34;&gt;TLDR: you should take a look at Render.com&lt;/h3&gt;
&lt;p&gt;I wrote in a previous post that I decided to build my site using Hugo, a decision I&amp;rsquo;m still really tickled with.  My initial draw to a Static Site Generator was to host my site in S3.  There&amp;rsquo;s a lot of attraction there - creating a public S3 bucket is easy, it&amp;rsquo;s low-cost, there&amp;rsquo;s no server to maintain, and the data is replicated within region between Availability Zones.  From a security perspective, S3 is easy to secure and the bucket is isolated.&lt;/p&gt;
&lt;p&gt;I have experience with the major cloud providers and my high-level opinion is that AWS is the most mature, has the most complete set of products, and is the easiest to deal with.  Plus, I&amp;rsquo;m working my way through the AWS certs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/render.png#floatright&#34; alt=&#34;Render Logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;In coming up to speed on Hugo, I heard about a site called Render.  The salient points were that Render offered free static-site hosting and would pull your site from Git.  The Git integration was attractive - I had already decided to put the theme there and now I could just put the entire site there.  I decided to try Render.&lt;/p&gt;
&lt;p&gt;At the time of this writing, I&amp;rsquo;ve had a Render account for two days.  Signup was easy and didn&amp;rsquo;t require a credit card.  They support federation with Github, so I used that option and that may have made things easier later.&lt;/p&gt;
&lt;p&gt;Forcing me to give a card when I signup for something free always makes me feel like I&amp;rsquo;m being suckered into something.  In fact, I had an experience with Azure where I signed up for a &amp;ldquo;free&amp;rdquo; tier and ended up getting a big bill a couple months later so I have empirical reasons to be wary.&lt;/p&gt;
&lt;p&gt;I was super-impressed with the Git integration.  I went to Github and created a new &amp;ldquo;Nextpertise&amp;rdquo; project, then went to my Hugo directory and made it a repository and sync&amp;rsquo;d it to Github.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git init  
    $ git add .  
    $ git commit -m &amp;quot;Initial commit&amp;quot;  
    $ git remote add origin https://github.com/brentstewart/nextpertise.git  
    $ git push -f origin master  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hugo takes your markdown content and compiles it against templates to generate a public directory of html files that can be copied to a web server.  When you are ready to deploy, just run &amp;ldquo;hugo&amp;rdquo; with no options.  The caveat here is that Hugo doesn&amp;rsquo;t clear out old content first, and will just copy the new build on top of the old.  Best practice then is to delete the public directory before regenerating.  So before setting up Render, I generated the public directory and sync&amp;rsquo;d my repo to Github.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/Render_setup.png#floatsmallright&#34; alt=&#34;Render Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;From Render, I selected New &amp;ldquo;Web Service&amp;rdquo; and selected the repository I wanted to use.  Render asked for the web content directory (the &amp;ldquo;Publish directory&amp;rdquo;)  and the build command - here&amp;rsquo;s where I realized I messed up.  I went back and removed my &lt;strong&gt;public&lt;/strong&gt; directory and resync&amp;rsquo;d to Github, then used  &lt;strong&gt;hugo&lt;/strong&gt; as my build command.&lt;/p&gt;
&lt;p&gt;By default, Render published my site to &lt;strong&gt;nextpertise.onrender.com&lt;/strong&gt;, but adding a custom domain is super-easy.  The setup screen provides instructions on setting up your DNS and tests to confirm that this step is complete.  The Nextpertise DNS is at Network Solutions, so it was easy enough to add the required records and the changes replicated overnight and were working this morning.  Render automatically assigns certs and makes the site available via https (I literally did nothing to enable this feature, it &lt;em&gt;just worked&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Render can redirect traffic to unknown pages.  I setup a rule to redirect this traffic to 404.html.  In Hugo, I created a 404.html file under &lt;em&gt;theme/layouts&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;When I finish this update, I&amp;rsquo;ll commit my local changes and push to Github.  Then I need to go to Render and click Manual Deploy.  Render will pull the changes, build the site using Hugo, and the new site will be online!  Render supports a build api hook, so I may look into using Githubs CI to trigger a Render deploy.  For now, I&amp;rsquo;m focused on getting enough content onto the site to make it interesting and cleaning up the look.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a screenshot of the pull and build.
&lt;img src=&#34;https://www.nextpertise.net/Render_deploy.png#floatright&#34; alt=&#34;Render build&#34;&gt;&lt;/p&gt;
&lt;p&gt;Render deployed my site to Oregon - I wasn&amp;rsquo;t given an option, but that seems reasonable for a free service.  They mention that &amp;ldquo;lightning-fast CDN&amp;rdquo; is included and accessing the site from the eastern US does seem reasonably quick.  &lt;em&gt;If one of my friends in India reads this, could you provide some feedback on what it&amp;rsquo;s like for you?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m really impressed with Render and - based on two days of playing - definitely recommend you take a look.  I still intend to deploy to S3, for comparison and to get some experience with S3, so I&amp;rsquo;ll write about that in the future.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
