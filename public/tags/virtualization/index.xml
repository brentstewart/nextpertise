<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Virtualization on </title>
    <link>https://www.nextpertise.net/tags/virtualization/</link>
    <description>Recent content in Virtualization on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Feb 2022 15:37:06 -0500</lastBuildDate>
    
        <atom:link href="https://www.nextpertise.net/tags/virtualization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Problems with Proxmox VE</title>
      <link>https://www.nextpertise.net/posts/220219_proxmox/</link>
      <pubDate>Sat, 19 Feb 2022 15:37:06 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/220219_proxmox/</guid>
      <description>&lt;p&gt;Look, I know you&amp;rsquo;re reading this, but sometimes I write these posts for myself.  To remind myself of how I built or repaired something.  This is one of those posts.&lt;/p&gt;
&lt;p&gt;My home server ran VMWare ESXi for a long time.  I had trouble upgrading it from 6.5 and I was intrigued by Proxmox VE and putting my home network more firmly in the open source camp.  I&amp;rsquo;ve been running Proxmox VE 7.1 for a while now.&lt;/p&gt;
&lt;h2 id=&#34;quick-review-of-pve&#34;&gt;Quick review of PVE&lt;/h2&gt;
&lt;p&gt;My experience with PVE has been mixed.  VMWare hid a lot of it&amp;rsquo;s Linux base, where PVE is like an opinionated distro aimed at virtualization.  With PVE, you are definitely administering a debian derivitive box.  PVE will host VMs and also does OS-level containers, which is an interesting take and seems to conserve processor.  I implemented my internal servers this way and it&amp;rsquo;s indistinguishable from a full VM in terms of use    .&lt;/p&gt;
&lt;p&gt;Probably the biggest &amp;ldquo;issue&amp;rdquo; is that I use VMWare Workstation to have a Windows VM on my Linux machine.  Workstation was a pretty good front-end for ESXi and you could migrate loads between the two.  Obviously, that use case is out the window now.&lt;/p&gt;
&lt;p&gt;Generally, PVE runs as good as or better than ESXi.  However, on the occassion that something goes sideways you are combing through blog posts and support forums (assuming you don&amp;rsquo;t have a subscription, which I don&amp;rsquo;t for home).  I like that the things I learn in PVE are transferable to Linux and vice versa, but I wouldn&amp;rsquo;t make PVE your first experience with Linux.&lt;/p&gt;
&lt;h2 id=&#34;back-to-the-show&#34;&gt;Back to the show&lt;/h2&gt;
&lt;p&gt;Power went out at the house the other night and the VMs (actually OS-level containers, but that&amp;rsquo;s arduous to say and if I abbreviate it OSLC no one will know what I&amp;rsquo;m nattering on about) storage had an issue.  When PVE tried to load those volumes it gave an error &lt;em&gt;&amp;ldquo;activating LV &amp;lsquo;pve/data&amp;rsquo; failed: Activation of logical volume pve/data is prohibited while logical volume pve/data_tmeta is active. (500)&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I tried several approaches to resolve this.  You can see the error from the PVE command line via &lt;strong&gt;lsblk&lt;/strong&gt;.  What actually worked was to make the interfering volumes inactive. Seems obvious, but I needed the command &lt;strong&gt;vgchange&lt;/strong&gt;.  As a note, after I deactivated &lt;em&gt;tmeta&lt;/em&gt; I got an error because &lt;em&gt;tdata&lt;/em&gt; was active so I had to deactivate that as well.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#deactivate the offending volume
lvchange -an pve/data_tmeta
##activate the expected volumes
vgchange -ay
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So this post is a note to myself for the next time.  Hopefully it&amp;rsquo;s helpful to you as well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deploying a WIM Image to VMWare</title>
      <link>https://www.nextpertise.net/posts/220122_deploying_wim/</link>
      <pubDate>Sat, 22 Jan 2022 12:54:46 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/220122_deploying_wim/</guid>
      <description>&lt;p&gt;Work uses Windows, but I need a Linux workstation with that set of tools.  I find WSL2 incomplete . . . partly because my personal workflow is Linux based.  I spoke with the Windows expert and we agreed to use VMWare Workstation to deploy my Windows environment alongside my Linux system.  Deploying the standard Windows image to a remote VMWare environment wasn&amp;rsquo;t something we had setup already.  Since I&amp;rsquo;m trying to be a special case, he sent me the WIM file to figure out how to deploy.&lt;/p&gt;
&lt;h1 id=&#34;what-the-heck-is-a-wim&#34;&gt;What the heck is a WIM?&lt;/h1&gt;
&lt;p&gt;A WIM is a file-based Windows Image that is made to be easy to test and deploy.   It&amp;rsquo;s kind of like a ZIP, to my understanding, in that it captures all the files and the directory structure of a partition in a file.  Being file-based makes it easy to modify (more on this later).  Because it&amp;rsquo;s not a sector-by-sector image you can deploy it to different sized drives.&lt;/p&gt;
&lt;h2 id=&#34;how-dont-you-deploy-it&#34;&gt;How don&amp;rsquo;t you deploy it?&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/fogserver.png#floatsmallleft&#34; alt=&#34;Fog Project&#34;&gt;
I tried several approaches to using the WIM file.  I&amp;rsquo;ll mention them briefly here so that you can learn from my experience.&lt;/p&gt;
&lt;p&gt;The first thing I tried was making a Windows VM using the Windows 10 downloadable &lt;a href=&#34;https://www.microsoft.com/en-us/software-download/windows10ISO&#34;&gt;disk image&lt;/a&gt; from Microsoft. Once booted, I added a drive and expanded the WIM to the new drive.  I deleted my drive with generic Windows and rebooted.  I think this didn&amp;rsquo;t work because the new disk wasn&amp;rsquo;t set as a primary partition.  This approach may be doable, but I moved on pretty quickly.&lt;/p&gt;
&lt;p&gt;The next thing I tried was to deploy it via netboot using a &lt;a href=&#34;https://github.com/FOGProject/fogproject&#34;&gt;Fog Server&lt;/a&gt;.  That project is pretty stinking cool!  I was able to get a VM to reference the server for boot information.  The problem here was that I didn&amp;rsquo;t know what it was looking for (first time with PXE).  When I decided it wanted an ISO, I thought &amp;ldquo;if I knew how to convert to the WIM to an ISO, I could just boot that directly in the VM!&amp;rdquo; and abandoned the Fog Server approach.  I may come back to this to learn more about PXE booting.&lt;/p&gt;
&lt;h1 id=&#34;how-do-you-deploy-wim&#34;&gt;How do you deploy WIM?&lt;/h1&gt;
&lt;p&gt;Microsoft has a series of articles that you&amp;rsquo;ll need to read to understand how to do this.  I&amp;rsquo;ve referenced them, but be warned that they reference each other circlically and there&amp;rsquo;s not a good starting point.  To help you, I&amp;rsquo;m going to attempt to draw a straight line through how &lt;em&gt;I&lt;/em&gt; accomplished this.&lt;/p&gt;
&lt;h2 id=&#34;1---build-a-winpe-dvd-image&#34;&gt;1 - build a WinPE DVD Image&lt;/h2&gt;
&lt;p&gt;You need to boot into a &lt;a href=&#34;https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/winpe-intro?view=windows-11&#34;&gt;WinPE&lt;/a&gt; environment to deploy the WIM image.   Windows PE is a small OS made to facilitate installation, used by Windows as a &amp;ldquo;pre-boot&amp;rdquo; environment.  To build your WinPE boot disk, download the &lt;a href=&#34;https://docs.microsoft.com/en-us/windows-hardware/get-started/adk-install&#34;&gt;Windows Assessment and Deployment Kit&lt;/a&gt; on a Windows PC and install the ADK executable.&lt;/p&gt;
&lt;p&gt;Start the &lt;strong&gt;Deployment and Imaging Tools Environment&lt;/strong&gt; as an administrator and create a working set of files using the &lt;strong&gt;copype&lt;/strong&gt; command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;copype amd64 C:\WinPE_amd64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The documentation says you can build an ISO now.  &lt;strong&gt;Don&amp;rsquo;t!&lt;/strong&gt;  There are some batch files that will make this easier - download a zip from &lt;a href=&#34;https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/oem-deployment-of-windows-desktop-editions-sample-scripts?preserve-view=true&amp;amp;view=windows-10#apply-image&#34;&gt;here&lt;/a&gt; and pull the scripts out and place them in the root of your WinPE directory.  Also, grab the WIM file that you&amp;rsquo;re trying to deploy and stick that in the WinPE directory as well.  Now you can build the ISO using the &lt;strong&gt;MakeWinMedia&lt;/strong&gt; command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MakeWinPEMedia /ISO C:\WinPE_amd64 C:\WinPE_amd64\Acme_Installer.iso
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That should create an ISO that&amp;rsquo;s about a half-gig larger than the WIM file.
&lt;img src=&#34;https://www.nextpertise.net/tpm.png#floatsmallright&#34; alt=&#34;TPM&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2---build-a-blank-vm-and-enable-secure-boot&#34;&gt;2 - Build a blank VM and enable Secure Boot&lt;/h2&gt;
&lt;p&gt;I created an empty VM with an empty hard drive.  The critical piece here is that my image expects to be deployed to a TPM environment.  TPM requires UEFI and that the VM be encrypted.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/vmsetup.png#floatsmallright&#34; alt=&#34;VM Configuration&#34;&gt;
In VMWare Workstation, enable UEFI under Virtual Machine Settings: go to the Options tab, select Advanced, and set the Firmware type to UEFI and Enable Secure Boot.  This is shown in the picture to the right.  While at the Options tab, select Access Control, click the button to encrypt the virtual machine, and choose a password.&lt;/p&gt;
&lt;p&gt;Next add the Trusted Platform Module.   Add it under the Hardware tab by clicking the Add button at the left-bottom of the window.&lt;/p&gt;
&lt;p&gt;Finally, we need the new VM to boot from the ISO we created earlier.  Add the new WinPE ISO to the CD drive and make sure it&amp;rsquo;s marked connected.&lt;/p&gt;
&lt;h2 id=&#34;3---boot-winpe-and-deploy-the-image&#34;&gt;3 - Boot WinPE and deploy the image&lt;/h2&gt;
&lt;p&gt;Now we&amp;rsquo;re ready to install the WIM image!  Boot the new VM using the WinPE boot disk.  It will boot to a prompt.  The procedure here is laid out by &lt;a href=&#34;https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/capture-and-apply-windows-using-a-single-wim?view=windows-11&#34;&gt;Microsoft&lt;/a&gt;.  Use the scripts that you added to the boot disk to first help partition the drive and then to apply the image.  &lt;em&gt;CreatePartition-UEFI.txt&lt;/em&gt; and &lt;em&gt;ApplyImage.bat&lt;/em&gt; were included in those scripts.  Obviously image names will change.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;diskpart /s CreatePartitions-UEFI.txt
D:\ApplyImage.bat D:\Images\ACME-Standard.wim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The ApplyImage batch file will ask a few questions you need to be prepared for.  You can safely answer &amp;ldquo;no&amp;rdquo; to all of them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You will be asked if you want to create a recovery partition.  Recovery Partitions are a great tool, but I want to keep this VM as small as possible and I&amp;rsquo;ll setup recovery mechanisms at the VM level, so I answered no.&lt;/li&gt;
&lt;li&gt;Do you want a compact OS install?  This runs the OS from compressed files, saving a lot of disk space.  Of course, everything has to be uncompressed to be run, so it will slow things down and might take more memory.  Even though I want a small VM, I chose to not install it as a compressed OS because I want to have good performance.&lt;/li&gt;
&lt;li&gt;Does the WIM file have extended attributes? I&amp;rsquo;m not a Windows guy, but I chose &amp;ldquo;no&amp;rdquo; and everything was fine.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From this point, the VM will go through a preliminary setup, doing things like setting the keyboard type.  It will reboot, ask you to login, and then continue the higher level (Cortana led) part of setup.  From here, everything should install as you would expect!&lt;/p&gt;
&lt;p&gt;As an interesting side-note, the WinPE boot disk includes an FTP client.  That might be useful script out some additional file copies to the new machine.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GNS3 Attached to ESXi</title>
      <link>https://www.nextpertise.net/posts/210421_gns3_attached_to_esxi/</link>
      <pubDate>Wed, 21 Apr 2021 20:11:14 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210421_gns3_attached_to_esxi/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/210421_GNS3-30.png#floatsmallleft&#34; alt=&#34;VLAN Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;I got a little distracted.  I have been coming up to speed on Ansible, which got me started on Vagrant.  Vagrant got me building VMs in VMWare Workstation , which got me thinking how neat it would be to place those &lt;em&gt;automagically&lt;/em&gt; into my GNS3VM environment hosted on ESXi.  Didn&amp;rsquo;t get that far - yet  - but the progress I made is pretty cool in it&amp;rsquo;s own right.&lt;/p&gt;
&lt;p&gt;Most GNS3 users are using a GNS3 VM to host their topologies.  Mine sits on an ESXi server.  I discussed a few days ago how to connect GNS3 into a network (see &lt;a href=&#34;https://www.nextpertise.net/posts/210417_Connecting_GNS3&#34;&gt;Connecting GNS3&lt;/a&gt;). Here I want to do something more complex - I&amp;rsquo;d like to connect ESXi instances into arbitrary points in a GNS3 network.  The topology will still have a connection &amp;ldquo;out&amp;rdquo; to the home network and Internet, but I want to add an ESXi VM &amp;ldquo;inside&amp;rdquo; the network as well.&lt;/p&gt;
&lt;p&gt;The approach I used was to attach the VMs into an ESXi VSwitch VLAN and then use additional cloud appliances to attach those VLAN into the GNS3 topology.  &lt;em&gt;This seems obvious in retrospect&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;setup-on-esxi&#34;&gt;Setup on ESXi&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/210422_GNS3Shell.png#floatsmallright&#34; alt=&#34;Alt&#34;&gt;
The first step is to go onto the VMWare ESXi server and create a new VLAN on the vSwitch.  From the ESXi management interface, select the networking tab and &amp;ldquo;add port group&amp;rdquo;.  I created VLAN 30 and called it &amp;ldquo;GNS3-30&amp;rdquo; and assigned it to my default virtual switch (vSwitch0).&lt;/p&gt;
&lt;h2 id=&#34;setup-the-gns3vm&#34;&gt;Setup the GNS3VM&lt;/h2&gt;
&lt;p&gt;Next I went to the GNS3vm VMWare properties and added an interface.  The interface will attach to the VM &amp;ldquo;live&amp;rdquo;, but you&amp;rsquo;ll need to go into the GNS3vm to configure it before it can be used.&lt;/p&gt;
&lt;p&gt;To setup the interface, login and choose &amp;ldquo;Shell&amp;rdquo; from the main menu.  The interface needs to be added to &lt;strong&gt;netplan&lt;/strong&gt;.  I ended up adding two interfaces (more fun!) and also took the chance to set a static IP for my server.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cd /etc/netplan  
ls  
sudo nano 90_gns3vm_static_netcfg.yaml  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here&amp;rsquo;s the edited YAML file I&amp;rsquo;m using.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;network&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  
  &lt;span style=&#34;color:#f92672&#34;&gt;renderer&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;networkd  &lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;ethernets&lt;/span&gt;:  
    &lt;span style=&#34;color:#f92672&#34;&gt;eth0&lt;/span&gt;:  
      &lt;span style=&#34;color:#f92672&#34;&gt;dhcp4&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;  
      &lt;span style=&#34;color:#f92672&#34;&gt;addresses&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.25.52&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;/24]  &lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;gateway4&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.25.1&lt;/span&gt;  
      &lt;span style=&#34;color:#f92672&#34;&gt;nameservers&lt;/span&gt;:  
        &lt;span style=&#34;color:#f92672&#34;&gt;addresses&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;8.8.8.8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8.8.4.4&lt;/span&gt;]  
    &lt;span style=&#34;color:#f92672&#34;&gt;eth1&lt;/span&gt;:  
      &lt;span style=&#34;color:#f92672&#34;&gt;dhcp4&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;  
    &lt;span style=&#34;color:#f92672&#34;&gt;eth2&lt;/span&gt;:  
      &lt;span style=&#34;color:#f92672&#34;&gt;dhcp4&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When I did this step, it replaced the existing eth0 on the GNS3VM and made my old interface eth1.  This disconnected the VM because the IP information was associated with eth0.  I diagnosed this by using the VMWare interface and the &lt;em&gt;ifconfig&lt;/em&gt; command on the GNS3VM to identify and associate names and MAC addresses, but it took a little time to understand what happened.  I&amp;rsquo;m still not sure why, but be alert for this issue if you add an interface.  My Internet GNS3 cloud appliance had to be disconnected (you cannot add interfaces to a cloud with existing connections), eth1 added, and reconnected to get it to work.&lt;/p&gt;
&lt;h2 id=&#34;adding-to-gns3-topology&#34;&gt;Adding to GNS3 Topology&lt;/h2&gt;
&lt;p&gt;Recall from &lt;a href=&#34;https://www.nextpertise.net/posts/210417_connecting_gns3/&#34;&gt;Connecting GNS3&lt;/a&gt; that I&amp;rsquo;ve setup my home network to expect a GNS3 border router at 192.168.25.82 and it will be the route to 192.168.28.0/22.  In this simplest case, I&amp;rsquo;m attaching another interface on that same router to a different vSwitch VLAN and routing between them.  I &lt;em&gt;could&lt;/em&gt; have put the new VLAN deep in the GNS3 topology.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/posts/210422_AddingACloud.png#center&#34; alt=&#34;Setup in GNS3&#34;&gt;&lt;/p&gt;
&lt;p&gt;So pause before this next paragraph.  Recall that there are three contexts, one physical, one in terms of the ESXi vSwitch, and one inside GNS3.&lt;/p&gt;
&lt;p&gt;Attaching a new cloud (in GNS3) that uses the GNS3VM interface (in the vSwitch context) attached to the new VLAN (in my case, eth0 -&amp;gt; VLAN30) will bring that new network into the virtual lab.&lt;/p&gt;
&lt;p&gt;At this point I attached a Windows VM to the new VLAN and set it&amp;rsquo;s interface to DHCP.  I connected the cloud to the virtual router (in GNS3), setup the interface, and added DHCP server capability.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;int g0/2  
  ip add 192.168.30.1 255.255.255.224  
ip dhcp pool GNS3  
  network 192.168.30.0 /27  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I can verify that this works inside the Windows VM, and by verifying that an IP has been assigned from the router.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;Router1# __sh ip dhcp bindings__  
Bindings from all pools not associated with VRF:  
IP address   Client-ID/        Lease expiration    Type
             Hardware address/  
             User name  
192.168.30.2 0100.0c29.e965.fd Apr 30 2021 12:05 AM  Automatic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;whats-next&#34;&gt;What&amp;rsquo;s next?&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;d really like to be able to &lt;strong&gt;Vagrant up&lt;/strong&gt; straight into GNS3.  I&amp;rsquo;m not even sure why, except that it would be cool.  Right now I can build a VM on Workstation, transfer it to ESXi and place it in the VLAN and thus in the GNS3 topology.&lt;/p&gt;
&lt;p&gt;I can easily extend the vSwitch VLAN to my home network, but for this to really work I&amp;rsquo;ll need to implement a trunk to my desktop and be able to place Workstation VMs into the VLAN.&lt;/p&gt;
&lt;p&gt;One of the things I love about GNS3 is that it pushes me to understand things and learn new techniques.  I&amp;rsquo;ll work on that as I have time in the days ahead.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VMWare 3D Acceleration</title>
      <link>https://www.nextpertise.net/posts/200728_vmware_3d_acceleration/</link>
      <pubDate>Tue, 28 Jul 2020 15:44:02 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/200728_vmware_3d_acceleration/</guid>
      <description>&lt;p&gt;I tried to load Chrome OS in VMWare Workstation the other day and got the message &amp;ldquo;No 3D Support is available&amp;rdquo;.  Apparently this is required for Chrome OS to boot.  I&amp;rsquo;ve gotten the message on other VMs, but never needed to worry about it.&lt;/p&gt;
&lt;p&gt;I assumed this was an issue with Chrome OS at first and tried several versions including &amp;ldquo;CloudReady&amp;rdquo;.  I was using the build put together by FydeOS and had a chance to talk with him on Telegram about the issue.  He recommended I look through a question on AskUbuntu.&lt;/p&gt;
&lt;p&gt;I edited &lt;strong&gt;.vmware/preferences&lt;/strong&gt; and added the following line.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mks.gl.allowBlacklistedDrivers = &amp;quot;TRUE&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Chrome OS booted without a problem!  I had VMs on ESXi that I was accessing via Workstation, and this also resolved the issue for them.  If you are interested in running a ChromeOS VM, I suggest checking out FydeOS.  My testing has been smooth and they have a Telegram channel that is super helpful.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
