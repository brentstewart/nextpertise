<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on </title>
    <link>https://www.nextpertise.net/tags/linux/</link>
    <description>Recent content in Linux on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Feb 2022 17:37:37 -0500</lastBuildDate>
    
        <atom:link href="https://www.nextpertise.net/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Webapps</title>
      <link>https://www.nextpertise.net/posts/220223_webapps/</link>
      <pubDate>Wed, 23 Feb 2022 17:37:37 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/220223_webapps/</guid>
      <description>&lt;h1 id=&#34;using-web-applications&#34;&gt;Using Web Applications&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;ve found that the quality and capability of applications delivered over the web has been on-par with what is expected in a native application.  In my experience, Lucidchart was an early example of what was possible and today I actually prefer it to Visio.  I&amp;rsquo;ve also been very impressed by O365.  On Linux, I can use O365 to open an office file from OneDrive, edit and save it and get many (most?) of the features I expect in the office applications.  From a work compatibility mode, this really simplifies using a Linux machine.&lt;/p&gt;
&lt;p&gt;These applications run in a tab in the browser.  Generally, I find this to be a good use of screen real estate.  However, this approach still ties up space on the browser button bar and status bar and adds a little cognitive load in starting the app and finding it on the screen.  Two applications that address these last issues are &amp;ldquo;Web App Manager&amp;rdquo; from the Linux Mint project and Nativefier.  Both wrap the application in a browser to make it look like a native program.&lt;/p&gt;
&lt;h2 id=&#34;web-app-manager&#34;&gt;Web App Manager&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/Web_App_Manager.png#floatsmallright&#34; alt=&#34;Web&#34;&gt;&lt;/p&gt;
&lt;p&gt;I really like Linux Mint.  I think there&amp;rsquo;s a real clarity of vision to the project around making the power of Linux and open source accessible.  They develop utilities as part of that vision and Web App Manager is a great example.&lt;/p&gt;
&lt;p&gt;Web App Manager makes it easy to manage and use Web Apps.  It can be &lt;a href=&#34;http://packages.linuxmint.com/pool/main/w/webapp-manager/&#34;&gt;downloaded as a DEB&lt;/a&gt; or installed from the Mint repository.  If you are running an Ubuntu flavor or derivative (I use Pop!) then this is shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install ./Downloads/linuxmint-keyring*.deb
sudo sh -c &#39;echo &amp;quot;deb https://packages.linuxmint.com ulyssa main&amp;quot; &amp;gt;&amp;gt; /etc/apt/sources.list.d/mint.list&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/Web_Apps_New.png#floatsmallleft&#34; alt=&#34;New Web App&#34;&gt;
Creating a new application is as as easy as entering in a name and address.  The program will let you select an icon or find one for you.  You can choose to retain the browser navigation bar - this ends up being just a new Firefox window, so why bother? - or to start in Private mode.  Web App Manaager will then create the entry in the desktop menu.&lt;/p&gt;
&lt;p&gt;This ends up creating an application window, just as billed, that behaves like an application.  You can even register it as the default email client.  The big issue I have is that the resulting window doesn&amp;rsquo;t have close, minimize, or maximize buttons.  This is a very solid option.&lt;/p&gt;
&lt;p&gt;Setting up an Outlook application was as easy as specifying &lt;a href=&#34;https://outlook.office365.com&#34;&gt;https://outlook.office365.com&lt;/a&gt;, selecting the icon, and putting it in a category for Gnome.  Web App Manager allows you to select the browser it runs in, but my system has Firefox, Ungoogled Chrome, and LibreWolf installed and it only offered Firefox.  My guess is it only looks for the major browsers.&lt;/p&gt;
&lt;h2 id=&#34;nodejs-nativefier&#34;&gt;nodejs-nativefier&lt;/h2&gt;
&lt;p&gt;Setting up Nativifier is a little more complicated.  Nativifier uses  NPM to create an Electron app and this is the first issue with considering it.  This application requires a lot of  dependencies be downloaded for NPM and my security friends cast a sceptical eye toward nodejs.  That&amp;rsquo;s not to say it&amp;rsquo;s a no-go, just an item to consider.  Electron is something that folks like or don&amp;rsquo;t.  It can produce an app using web technologies that can be easily versioned for different operating systems, but it doesn&amp;rsquo;t carry a native look or feel.  Not a big deal for me, but your mileage may vary.&lt;/p&gt;
&lt;p&gt;Installing npm and then nativifier on Ubuntu derivitives looks like this.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install npm
sudo apt install nativefier -g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Creating the web app is done from the command line.  The example below builds the same Outlook web app.  The options here specify the OS and  architecture, as well as setting the resulting electron to minimize to the system tray.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nativefier -p linux -a x64 https://outlook.office365.com  --tray
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When I ran this it produced a directory called SignIntoOutlook containing an executable of the same name.  I renamed the directory and executable to &lt;em&gt;Outlook&lt;/em&gt; and gave the application execution permission.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chmod +x Outlook
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The resulting application is a window that has the web application inside - that part is the same in both apps or even in a browser.  A minor quibble is that it seems to start a little slower (Web App Manager is probably just faster because I already have a Firefox window open). However, this brings us to the next set of big issues for nativefier.&lt;/p&gt;
&lt;p&gt;Nativefier builds an electron app but doesn&amp;rsquo;t add it to the menu.  This is easily done in Cinnamon, which has menu editing built in.  You can download Menu Editor for Gnome to add it.  Since I run Pop-OS!, I created an &lt;em&gt;Outlook.desktop&lt;/em&gt; file in ~/.local/share/applications similar to the one shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Desktop Entry]
Version=1.1
Type=Application
Name=Outlook
Comment=Outlook Web Electron app
Icon=mail-send-receive
Exec=/home/brent/Outlook/Outlook
Actions=
Categories=Office;  
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;closing-thoughts&#34;&gt;Closing thoughts&lt;/h2&gt;
&lt;p&gt;Both Web App Manager and Nativefier produce a working executable that to a good extent feels like a part of the desktop environment.  Since the actual functionality comes from the underlying software as a service, they both function in largely similar ways.&lt;/p&gt;
&lt;p&gt;Web App Manager is definitely the choice if you have less experience.  It&amp;rsquo;s easier to tweak, it automatically adds things to the menu, and it&amp;rsquo;s only dependency is the browser. The only negative I have is that the app window doesn&amp;rsquo;t have a close button, which sounds silly but is annoying in practice.  Alt-F4 or selecting it in the application dock allow you to close, FYI.&lt;/p&gt;
&lt;p&gt;Nativefier actually puts an Electron wrap around, gives window controls, and has the option to minimize to the tray.  However, it required NPM, the only way to tweak the app is to rebuild it from the command line, and it didn&amp;rsquo;t integrate with the application menu.  None of those are big deals if you are comfortable with the command line.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Oh My Posh</title>
      <link>https://www.nextpertise.net/posts/220124_oh_my_posh/</link>
      <pubDate>Tue, 25 Jan 2022 19:05:41 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/220124_oh_my_posh/</guid>
      <description>&lt;p&gt;I really like the powerline-style prompts that jazz up the command line and I&amp;rsquo;d like to be able to carry that experience through from Linux to Windows.  It seems like everytime I install a new systema and think about this, I find another slightly different way to do something similar.  Recently I found &lt;em&gt;Oh My Posh&lt;/em&gt;, which is designed to support Windows, Linux, and MacOS.  The attraction here is that this gives me the prompt style I like from a consolidated source and with a defined way to set it up.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an example of OMP installed in Linux running inside Tilix.  You can see that it&amp;rsquo;s providing me collapsed directory information, git info, and the time of the last command.  OMP can be customized and the details of that are described extensively in the online docs.
&lt;img src=&#34;https://www.nextpertise.net/omp_tilix.png#center&#34; alt=&#34;Oh My Posh in Tilix on Linux&#34;&gt;
This has some marginal productivity - the Agnoster theme condenses directory structure in a very visible way and helps me understand the state of Git.  Regardless, it looks cool and a little terminal rice establishes some credibility.  If it looks cool to you too, I&amp;rsquo;ve put together some notes on how it&amp;rsquo;s done.  Follow along!&lt;/p&gt;
&lt;h2 id=&#34;linux&#34;&gt;Linux&lt;/h2&gt;
&lt;p&gt;Installation on Linux involves grabbing the file from Github and making it executable.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64 -O /usr/local/bin/oh-my-posh
sudo chmod +x /usr/local/bin/oh-my-posh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, grab the themes JSON collection, uncompress them, and set the permissions appropriately.  With the themes locally stored, you can easily switch as the mode strikes.  Agnoster fits my needs, so that&amp;rsquo;s what is used in the examples, but you can substitute anywhere you see it mentioned.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir ~/.poshthemes
wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/themes.zip -O ~/.poshthemes/themes.zip
unzip ~/.poshthemes/themes.zip -d ~/.poshthemes
chmod u+rw ~/.poshthemes/*.json
rm ~/.poshthemes/themes.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, edit ~/.bashrc to run Oh My Posh as part of the shell.  Notice in the code below that I&amp;rsquo;ve specified the &amp;ldquo;agnosterplus&amp;rdquo; layout.  Substitute whichever theme you are interested in there.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;eval &amp;quot;$(oh-my-posh --init --shell bash --config ~/poshthemes/agnosterplus.omp.json)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You&amp;rsquo;ll need to specify the terminal font in your terminal application.  A lot of the styling is done through extra ligatures included in &lt;a href=&#34;https://www.nerdfonts.com/&#34;&gt;nerd fonts&lt;/a&gt; - font files that are re-compiled to include additional symbols.  Grab a font you like (I&amp;rsquo;m using Meslo in this example, but I&amp;rsquo;m also partial to JetBrains NF) and set it as the default in the terminal profile.&lt;/p&gt;
&lt;p&gt;This setup is used by bash, regardless of the terminal application.  I have Tabby, Tilix, and the included Terminal from Pop! and all three &amp;ldquo;just work&amp;rdquo;.  As mentioned, the only cavaet is getting a good font setup in the terminal profile.&lt;/p&gt;
&lt;h2 id=&#34;windows-powershell&#34;&gt;Windows PowerShell&lt;/h2&gt;
&lt;p&gt;As mentioned, Oh My Posh works swimmingly with PowerShell on Windows.  I have it working in the Powershell terminal and in the Windows Terminal (but recommend the later).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/omp_windows.png&#34; alt=&#34;Om My Posh in Windows Terminal&#34;&gt;&lt;/p&gt;
&lt;p&gt;OMP can be installed on Windows using PowerShell, &lt;a href=&#34;https://www.nextpertise.net/posts/220118_choco/&#34;&gt;Chocolatey&lt;/a&gt;, &lt;a href=&#34;https://www.nextpertise.net/posts/211228_winget/&#34;&gt;Winget&lt;/a&gt;, or scoop.  I prefer Choco, so that&amp;rsquo;s what is used in the examples below.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;choco install oh-my-posh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then edit the profile.  You may get an error because there&amp;rsquo;s not an existing profile.  If so, just create one.  Type &lt;strong&gt;$profile&lt;/strong&gt; in PowerShell to see what the filename and location should be.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;notepad $profile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;add the following into the profile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Import-Module oh-my-posh
oh-my-posh --init --shell pwsh --config ~/agnosterplus.omp.json | Invoke-Expression
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Again, you&amp;rsquo;ll need to use the &lt;a href=&#34;https://www.nerdfonts.com/&#34;&gt;nerd font&lt;/a&gt; of your choice.  Set this up in the PowerShell Terminal or Microsoft Terminal.  Both apps use the same $profile, so you just need to change the font in the terminal.&lt;/p&gt;
&lt;h2 id=&#34;windows-cmd&#34;&gt;Windows CMD&lt;/h2&gt;
&lt;p&gt;OMP is even available for the traditional command line.  For cmd, install &lt;a href=&#34;https://chrisant996.github.io/clink/&#34;&gt;clink&lt;/a&gt;.  Clink adds some of the editing features of Bash to the traditional CMD.  Download clink and run the installer.  You can verify the installer by running &lt;strong&gt;clink info&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;clink info
version  : 1.3.2.222baa
session  : 8504
binaries : C:\Program Files (x86)\clink\1.3.2.222baa
state    : C:\Users\Brent\AppData\Local\clink
    &amp;lt; output trimmed&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next create a file called oh-my-posh.lua in your clink directory.  Note that this directory is given from &lt;strong&gt;clink info&lt;/strong&gt;.  The load string below starts OMP - note the theme is specified as well.  This section of text can be replaced if you disagree with me on the theme to be used.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;notepad AppData\Local\clink\oh-my-posh.lua
    &amp;lt;add this text&amp;gt;
load(io.popen(&#39;oh-my-posh --config=&amp;quot;C:/Users/Brent/.oh-my-posh/themes/agnosterplus.omp.json&amp;quot; --init --shell cmd&#39;):read(&amp;quot;*a&amp;quot;))()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Setting up a Basic FTP server on Linux</title>
      <link>https://www.nextpertise.net/posts/220117_linux_ftp/</link>
      <pubDate>Mon, 17 Jan 2022 15:49:07 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/220117_linux_ftp/</guid>
      <description>&lt;h1 id=&#34;brother-printers-work-well-with-linux&#34;&gt;Brother Printers work well with Linux&lt;/h1&gt;
&lt;p&gt;My last two printers have been Brother multi-function copiers (MFCs).  These printers work really well with everything in the house - Windows, Linux, even the school Chromebooks.  They have a Linux driver available on their website for all their printers, the print quality is excellent, and they&amp;rsquo;ve been very durable.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re looking for a printer that plays well with others, take a look.&lt;/p&gt;
&lt;p&gt;My Brother MFC-L3770CDW printer can scan to SMB, FTP, or a flash drive you plug in.  I wanted to set it up to FTP scans into the personal directories of family members.&lt;/p&gt;
&lt;h1 id=&#34;basic-ftp-with-linux&#34;&gt;Basic FTP with Linux&lt;/h1&gt;
&lt;p&gt;FTP is a very old file transfer protocol.  VSFTP (&amp;ldquo;Very Secure&amp;rdquo;) is the default FTP server for Linux.  Regardless of the name, plain vanilla FTP transmits usernames and passwords in clear text and setting it up to be &amp;ldquo;Very Secure&amp;rdquo; takes a little extra effort.  I&amp;rsquo;m also using it because it&amp;rsquo;s compatible with my printer, but securing it might interfere with that connection.  So this setup isn&amp;rsquo;t security optimized and is really only appropriate for a home network.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;As a note, if secure file transfer is interesting to you, check out the articles on &lt;a href=&#34;https://www.nextpertise.net/posts/200813_Using_SSH3&#34;&gt;SSHFS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;On Ubuntu, installation can be done through apt.  Configuration is done by editing the &lt;em&gt;/etc/vsftpd.conf&lt;/em&gt; file.  After editing, you&amp;rsquo;ll need to restart the service.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install vsftpd
sudo nano /etc/vsftpd.conf
sudo systemctl restart vsftpd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The configuration file is mostly comments, with each setting preceded by documentation.  Remove the hash to &amp;ldquo;uncomment&amp;rdquo; a line.  Here&amp;rsquo;s the relevant settings that I used in this case.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;listen=YES
listen_ipv6=NO
anonymous_enable=NO
local_enable=YES
write_enable=YES
allow_writeable_chroot=YES
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This configuration turns off IPv6 since I&amp;rsquo;m not using it.  It limits access to valid users on the server, allows those users to write files, and limits each user to their personal folder.  VSFTP will throw an error if a chroot&amp;rsquo;d user has both SSH and FTP write priviledges, which makes sense under more secure circumstances.  In this case, I turned off the security check.  Be very careful when setting this up, sentences like that last are usually followed by tragedy!  It&amp;rsquo;s only appropriate because I&amp;rsquo;m limiting access to the server and it&amp;rsquo;s not &amp;ldquo;mission critical&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Testing is easy with Filezilla or from the command line.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brent@server:~$ ftp 192.168.1.2
Connected to 192.168.1.2.
220 (vsFTPd 3.0.3)
Name (192.168.1.2:brent): brent
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once complete, this worked like a champ.  I created &lt;em&gt;~/scan&lt;/em&gt; directories under each user and setup a quick-connect button from the Brother printer.  Voila - scans directly to each users home directory!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Czkawka</title>
      <link>https://www.nextpertise.net/posts/210926_czkawka/</link>
      <pubDate>Sun, 26 Sep 2021 15:07:20 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210926_czkawka/</guid>
      <description>&lt;p&gt;Czkawka is a &amp;ldquo;simple, fast, and free app to remove unnecessary files&amp;rdquo;.  I heard it mentioned on one of the Jupiter Broadcasting shows and decided to look into it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/210924_Czkawka.png#floatsmallleft&#34; alt=&#34;Czkawka logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;I have a server that I map folders to using NFS or SFTP that has a lot of accumulated junk.  I&amp;rsquo;ve got twenty plus years of kids pictures, and as the computer expert in the family I&amp;rsquo;m expected to protect these like crown jewels.  However, backing up pictures all the time leads to a lot of duplicates.  I also keep all my the family files there - school, work, personal, hobbies - and there ends up being a lot of duplication there as well.  Not only are duplicate files a problem for local storage, but I pay to back (not much) it all up to Backblaze B2.  Czkawka would be a big help if it helped me sort all those files and conserve space.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Czkawka is available as an AppImage file from Github.  I&amp;rsquo;m using version 3.2 to test.&lt;/p&gt;
&lt;p&gt;AppImages are a way of distributing Linux applications can run on any distro - they include all the dependencies so it&amp;rsquo;s as easy as download and run.  They are similar to snaps or flatpaks.  They can run from anywhere, so I tend to try them out in my Download directory and then organize them in an &amp;ldquo;~/Apps&amp;rdquo; directory if I decide to keep them.&lt;/p&gt;
&lt;p&gt;After downloading, you may need to make the file executable.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chmod +x linux_czkawka_gui.AppImage
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;Once the program starts, there are four buttons across the top to focus a Czkawka search.  They are &amp;ldquo;included&amp;rdquo; and &amp;ldquo;excluded&amp;rdquo; directories, &amp;ldquo;excluded items&amp;rdquo;, and &amp;ldquo;allowed extensions&amp;rdquo;.  The first three are obvious, the last is used to limit searches by type (ZIP files, for instance).  Once a set of directories and files is described, the &amp;ldquo;search&amp;rdquo; button in the lower left starts the process.&lt;/p&gt;
&lt;p&gt;I started by adding the ~/Downloads directory and searching for duplicates.  This turned up a few examples of duplicates which it helpfully grouped.  Using the program was a bit non-intuitive - you can&amp;rsquo;t just click on a file and delete it.  Instead, you use the &lt;strong&gt;select&lt;/strong&gt; button at the bottom of the window and have a variety of options to select the oldest, newest, or custom.  Czkawka doesn&amp;rsquo;t really let you interact at the file level but at the summary level and the idea is that you&amp;rsquo;d select all the dups to be deleted in a big set based on some criteria like age.  Custom let&amp;rsquo;s you select duplicates by file path or a pattern in the name.  Once you&amp;rsquo;ve selected a set you can choose the Delete button to remove them.
&lt;img src=&#34;https://www.nextpertise.net/210924_Czkawka_example.png#floatsmallleft&#34; alt=&#34;Czkawka logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;Since I&amp;rsquo;m not sure about deleting a whole bunch of files, I used &amp;ldquo;select one oldest&amp;rdquo; to pick individual files for deletion.  This was tedious, but at least the process was under my control.  It would have been nice to use the check box on the side to pick the ones I wanted to delete, but the interface isn&amp;rsquo;t oriented that way.  Czkawka &lt;em&gt;does&lt;/em&gt; organize the list by size, so you can start at the top to maximize the time spent on freeing up space.&lt;/p&gt;
&lt;h2 id=&#34;more-than-just-duplicates&#34;&gt;More than just duplicates&lt;/h2&gt;
&lt;p&gt;Czkawka does more than just find duplicate files.  It will also search for a variety of errors.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Empty directories&lt;/em&gt; is pretty obvious, but I was surprised how many orphaned folder&amp;rsquo;s I&amp;rsquo;d left moving things around.  This process was simple, I selected all, and it remove them.  It will also search for &lt;em&gt;Empty Files&lt;/em&gt; (zero bytes), which again surprised me by finding examples.  &lt;em&gt;Zeroed Files&lt;/em&gt; (those filled with zeros) didn&amp;rsquo;t turn up anything in my test set.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Invalid Symlink&lt;/em&gt; will catch things where the referenced file isn&amp;rsquo;t present.  Because I mount remote file systems, I decided not to pursue this for fear it was giving false positives (maybe the mapping was just down).  &lt;em&gt;Broken files&lt;/em&gt; are those that show corruption.  This found a number of files in my Download directory.  This could be flagging corruption or an unsupported format.  Because of the number of hits and the nature of what was being called out, I decided to defer removing these to look into further.&lt;/p&gt;
&lt;p&gt;It will look for big files.  My current use case didn&amp;rsquo;t include this, but I verified it worked.  This could be very useful in some administrative situations where a database or a log file has eaten available free space.  I might run this occasionally just to identify any runaway inflation (or the things that are causing it).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Temporary Files&lt;/em&gt; looks for a variety of extensions including: #, thumbs.db, *.bak, *.temp, *.ds_store, *.crdownload, *.download, *.part, *.cache, *.dmp, and *.partial.&lt;/p&gt;
&lt;p&gt;The most fascinating option was to look for &lt;em&gt;similar images&lt;/em&gt;.  This option uses a perceptual hash to look for images that may differ in resolution or cropping.  This worked really well.  I found cases where we had saved cropped images and was able to delete the extra versions.  &lt;em&gt;Music Duplicates&lt;/em&gt; uses tags to perform a similar analysis.  Here I would have appreciated details, such as the different encoding used.&lt;/p&gt;
&lt;h2 id=&#34;speed&#34;&gt;Speed&lt;/h2&gt;
&lt;p&gt;Czkawka is billed as fast.  My testing mostly backed this up.  On a local disk, searches ran seconds.  It took longer to process a directory over SFTP, for instance, although this would be expected.&lt;/p&gt;
&lt;p&gt;I developed a couple ideas about how to best handle these situations.  First, I suggest installing the application on the file server and running it locally.  My file server is headless, but Czkawka has a command line version for just such situations.  Second, try reducing the size of the search field.  Use subdirectory to limit it, for instance.  Third, I suggest running some of the quicker scans (like &amp;ldquo;empty files&amp;rdquo;) first to reduce the size of the dataset.&lt;/p&gt;
&lt;p&gt;At one point I was searching through a hundred thousand remote files.  As you might expect, the search took a few minutes.&lt;/p&gt;
&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;I liked it and plan to keep using it.&lt;/p&gt;
&lt;p&gt;Any time I look at a Linux program, I remember that it is being developed and freely offered to the community.  The people behind these projects need to be celebrated and appreciated.  That said, not everything on GitHub is &amp;ldquo;fully baked&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m pleased to report that Czkawka is a well thought out and reasonably fast program that does what I expected - it helps me &amp;ldquo;weed the garden&amp;rdquo; on my file server and remove the detritus.  I&amp;rsquo;m not crazy about the file selection process and I recommend that you bring up a file manager to compare with the Czkawka searches to make sure you understand what it is finding.  &lt;em&gt;Anytime&lt;/em&gt; you are dealing with a mass deletion program you want to be extra careful!  But the results made sense to me.  I didn&amp;rsquo;t delete everything it nominated, but I was able to save a lot of space in the end.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Distro Hopping in Style</title>
      <link>https://www.nextpertise.net/posts/210911_distrohoppingwventoy/</link>
      <pubDate>Sat, 11 Sep 2021 09:14:40 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210911_distrohoppingwventoy/</guid>
      <description>&lt;p&gt;One of the many things I love about Linux is all the competing ideas about how computing should be done and how desktop environments should be organized.  I&amp;rsquo;ve pretty much settled in with Debian-derived systems.  This isn&amp;rsquo;t a religious decision, but I&amp;rsquo;ve found that most of the things that I want to do are easily supported and I&amp;rsquo;ve grown comfortable with the commands and structure.&lt;/p&gt;
&lt;p&gt;Desktop Environments (DEs) are another matter.  Not only have I &lt;em&gt;not&lt;/em&gt; picked a favorite, I love to switch back and forth and try out the latest.  My current (9/11/21) thoughts are that tiled interfaces work best for the large 4K displays I like to use.  I liked &lt;a href=&#34;https://regolith-linux.org/&#34;&gt;Regolith&lt;/a&gt;, which is an i3 on Ubuntu distro but I&amp;rsquo;m not committed to throwing away my mouse.  I&amp;rsquo;m currently split between &lt;a href=&#34;https://pop.system76.com/&#34;&gt;Pop! OS&lt;/a&gt; (which is a customized Gnome) and &lt;a href=&#34;https://kubuntu.org/&#34;&gt;Kubuntu&lt;/a&gt; with the &lt;a href=&#34;https://github.com/kwin-scripts/kwin-tiling&#34;&gt;Tiling Extension&lt;/a&gt; (KDE on Ubuntu).  On HD screens and smaller, I really like &lt;a href=&#34;https://linuxmint.com/&#34;&gt;Cinnamon&lt;/a&gt; although I&amp;rsquo;m a sucker for the eye-candy in &lt;a href=&#34;https://ubuntudde.com/&#34;&gt;Deepin&lt;/a&gt;.  I&amp;rsquo;ve even recently started playing with &lt;a href=&#34;https://cutefish-ubuntu.github.io/&#34;&gt;Cutefish&lt;/a&gt; which is a Mac-like DE.&lt;/p&gt;
&lt;p&gt;All this is &lt;em&gt;besides&lt;/em&gt; my fascination with alternative operating systems like &lt;a href=&#34;https://www.haiku-os.org/&#34;&gt;Haiku&lt;/a&gt;, &lt;a href=&#34;https://reactos.org/&#34;&gt;ReactOS&lt;/a&gt;, and &lt;a href=&#34;https://en.wikipedia.org/wiki/AROS_Research_Operating_System&#34;&gt;AROS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I think my dream would be the Pop!OS Tiling Extension on Cinnamon.  Sigh.&lt;/p&gt;
&lt;p&gt;To try out all these operating systems, one has to download ISOs and write them to USBs.  That&amp;rsquo;s not awful, but USB drives aren&amp;rsquo;t easy to label or write but they are easy to lose. That&amp;rsquo;s why I was stoked to discover Ventoy.&lt;/p&gt;
&lt;h2 id=&#34;ventoy&#34;&gt;Ventoy&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ventoy.net/static/img/screen/screen_bios2.png#floatsmallleft&#34; alt=&#34;Ventoy Menu&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ventoy is an open source project that allows you to copy your ISOs onto a single drive and presents a menu that let&amp;rsquo;s you choose which to boot.  Ventoy can even be used to boot a virtual disk (vhd or vdi).&lt;/p&gt;
&lt;p&gt;Ventoy is easy to setup.  Download from the site and there is an included executable called &lt;strong&gt;Ventoy2Disk&lt;/strong&gt; that will setup your drive.  I recently wanted to upgrade ESXi and had trouble getting my aging server to boot from USB.  I put the ESXi image on Ventoy and it came up without a problem.  Then I decided to migrate to ProxMox and that worked too!
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/31rtVwnH1GS._SY90_.jpg#floatright&#34; alt=&#34;UGREEN M.2 Enclosure&#34;&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/41sG6BDAbML._SX90_.jpg#floatright&#34; alt=&#34;Silicon Power M.2&#34;&gt;&lt;/p&gt;
&lt;p&gt;I initially put Ventoy on a large flash drive, but decided I wanted something more robust and speedy.  I bought a UGREEN M.2 Drive enclosure and a Silicon Power 128GB M.2 drive to put inside it.  With this setup, I put all the operating systems I use and all the ones I play with onto the drive and can easily boot into a live environment or install.&lt;/p&gt;
&lt;p&gt;The UGREEN enclosure has a type A connection on one end and a type C on the other.  It&amp;rsquo;s long and a little heavy, so it puts some torque on the connector if you plug it up directly.  I use an extension cable so that the drive can be out of the way and not damage the port.&lt;/p&gt;
&lt;p&gt;Every once in a while, I get a wild hair and install a different OS on my main computer or more often on a play laptop I keep on my desk.  I can also plug in my Ventoy disk and use it to setup a VM.  I&amp;rsquo;m in this industry because it&amp;rsquo;s fun and this is a way that I stay in touch with the magic, even when real IT work starts to look like a parade of spreadsheets.  Ventoy helps make it quick and easy to play!&lt;/p&gt;
&lt;p&gt;If you really want to change out your main PC OS, I recommend keeping data off the PC (using &lt;a href=&#34;https://www.nextpertise.net/posts/201017_sshfs_automount/&#34;&gt;ssh&lt;/a&gt; or &lt;a href=&#34;https://www.nextpertise.net/posts/200813_using_ssh3/&#34;&gt;nfs&lt;/a&gt;) and having a setup file to quickly install critical components.&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using WebDAV on Apache</title>
      <link>https://www.nextpertise.net/posts/210906_apachedav/</link>
      <pubDate>Mon, 06 Sep 2021 13:00:30 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210906_apachedav/</guid>
      <description>&lt;p&gt;In recent articles, I walked through how to setup a home &lt;a href=&#34;https://www.nextpertise.net/posts/210830_apache&#34;&gt;webserver&lt;/a&gt; with &lt;a href=&#34;https://httpd.apache.org&#34;&gt;Apache&lt;/a&gt; on Linux and how to configure home &lt;a href=&#34;https://www.nextpertise.net/posts/210831_dnsonubuntu&#34;&gt;DNS server&lt;/a&gt; using &lt;a href=&#34;https://www.isc.org/bind/&#34;&gt;bind&lt;/a&gt; on Linux, complete with custom in-home domain for local name resolution.  This article revisits the webserver and creates a second virtual host to handle WebDav.&lt;/p&gt;
&lt;p&gt;WebDAV is a file sharing protocol built on top of HTTP.  Many operating systems can attach to WebDAV folders to upload and download files, including Linux, Windows, Mac, IOS, and Android.  I have a password database that I want to keep sync&amp;rsquo;d between different computers and phones and I&amp;rsquo;m not comfortable hosting that &amp;ldquo;in the cloud&amp;rdquo;, so this allows me to self-host.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m using Ubuntu Server 21.04 for this exercise.&lt;/p&gt;
&lt;h2 id=&#34;setting-up-dns&#34;&gt;Setting Up DNS&lt;/h2&gt;
&lt;p&gt;My forward lookup zone file includes an A record for the server and a CNAME for the dav share, similar to the output below.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;www IN  A   192.168.26.53
dav IN  CNAME   www.stewart.lan
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the zone file is updated and &lt;strong&gt;named&lt;/strong&gt; restarted, this can be tested by pinging &amp;ldquo;&lt;a href=&#34;http://www.stewart.lan&#34;&gt;www.stewart.lan&lt;/a&gt;&amp;rdquo; and &amp;ldquo;dav.stewart.lan&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;setting-up-apache&#34;&gt;Setting up Apache&lt;/h2&gt;
&lt;p&gt;If you haven&amp;rsquo;t already done so, the first thing to do is to install apache2.  Next, enable the webdav Apache modules.  Apache using &lt;strong&gt;a2enmod&lt;/strong&gt; and &lt;strong&gt;a2dismod&lt;/strong&gt; for handling modules.  Finally, create a folder to handle the WebDAV files and set the permissions up.  When complete, restart Apache to load the modules.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install apache2
sudo a2enmod dav
sudo a2enmod dav_fs
sudo mkdir /var/www/dav
sudo chown -R wwwroot:wwwroot /var/www/dav
sudo systemctl restart apache2.service
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;setting-up-the-dav-site&#34;&gt;Setting up the DAV site&lt;/h2&gt;
&lt;p&gt;Apache is now ready to host a WebDAV site, but needs a configuration.  For this, create a text file under /etc/apache2/sites-available (I named mine &lt;em&gt;dav.conf&lt;/em&gt;).  The serveralis parameter tells it to respond to requests to dav.stewart.lan and the alias directive tells Apache the root location is the &lt;em&gt;dav&lt;/em&gt; folder.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brent@webnamer:/etc/apache2/sites-available$ cat dav.conf 
DavLockDB /var/www/DavLock                      #database file Apache uses to lock files
&amp;lt;VirtualHost *:80&amp;gt;
    ServerName stewart.lan
    ServerAlias dav.stewart.lan
    alias / /var/www/dav
        ServerAdmin brent@stewart.tc
        DocumentRoot /var/www/dav/
        &amp;lt;Directory /var/www/dav/&amp;gt;
                Options Indexes MultiViews
                AllowOverride None
                Order allow,deny
                allow from all
    &amp;lt;/Directory&amp;gt;
    &amp;lt;Location /dav&amp;gt;
        DAV On
        AuthType Basic
        AuthName &amp;quot;webdav&amp;quot;
        AuthUserFile /var/www/passwd.dav
        Require valid-user
    &amp;lt;/Location&amp;gt;
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Enable the site and reload Apache&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a2ensite dav.conf
sudo systemctl restart apache2.service
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;add-authentication&#34;&gt;Add Authentication&lt;/h2&gt;
&lt;p&gt;Go to the directory referenced by DavLockDB and create an empty file named &lt;em&gt;users.password&lt;/em&gt;.  Set the file ownership to www-data.  Finally, add users to this file using htdigest (you&amp;rsquo;ll be prompted for passwords).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo touch /var/www/users.password
sudo chown www-data:www-data /var/www/passwd.dav
sudo htdigest /var/www/passwd.dav webdav newuser
Adding user newuser in realm webdav
New password:
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;confirming-the-setup&#34;&gt;Confirming the setup&lt;/h2&gt;
&lt;p&gt;There are a &lt;em&gt;lot&lt;/em&gt; of ways to test.  You can browse to that URL, use an application, or attach to it from your file manager using the url webdav://dav.myserver.  Confirm that you are prompted for a password as expected!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DNS on Ubuntu</title>
      <link>https://www.nextpertise.net/posts/210831_dnsonubuntu/</link>
      <pubDate>Tue, 31 Aug 2021 19:08:11 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210831_dnsonubuntu/</guid>
      <description>&lt;p&gt;Continuing from my &lt;a href=&#34;https://www.nextpertise.net/posts/210830_apache/&#34;&gt;previous post&lt;/a&gt;, I have recently rebuilt my server infrastructure at home, migrating from VMWare to Proxmox VE.  I&amp;rsquo;m still getting the hang of Proxmox, although I&amp;rsquo;m feeling favorable towards it so far.  In the meantime, I wanted to document some of the little pieces to setting up a home network.  This time I&amp;rsquo;ll provide a walk through of a simple local DNS server.  My goal at home is to create a &amp;ldquo;stewart.lan&amp;rdquo; network that I can use to reference local resources.&lt;/p&gt;
&lt;p&gt;Like the Apache server I built last time, this server is running Ubuntu 21.04 Server and my instructions are written from that perspective.  Some commands may change as you move to non-Debian distributions or with different versions.  Installation of DNS services is done with &lt;strong&gt;bind9&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt install bind9
sudo ufw allow 53
sudo ufw allow 53/udp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the service is installed, &lt;strong&gt;bind&lt;/strong&gt; configuration files are found in &lt;em&gt;/etc/bind&lt;/em&gt;.  In my configuration there are five files that I modified or created: the service configuration file &lt;em&gt;named.conf&lt;/em&gt; which loads in &lt;em&gt;named.conf.local&lt;/em&gt; and &lt;em&gt;named.conf.options&lt;/em&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@webnamer:/etc/bind# cat named.conf
include &amp;quot;/etc/bind/named.conf.options&amp;quot;;
include &amp;quot;/etc/bind/named.conf.local&amp;quot;;

###

root@webnamer:/etc/bind# cat named.conf.local
//
// Do any local configuration here
//
zone &amp;quot;stewart.lan&amp;quot; {
    type master;
    file &amp;quot;/etc/bind/forward.stewart.lan&amp;quot;;
    allow-query { any; };
};

###

root@webnamer:/etc/bind# cat named.conf.options 
acl internal-network {
    192.168.24.0/22;
    localhost;
    localnets;
};
options {
    directory &amp;quot;/var/cache/bind&amp;quot;;
    forwarders {
	    192.168.26.53;  //this server
	    208.67.222.222; //OpenDNS1
	    208.67.220.220; //OpenDNS2
	    8.8.8.8;        //Google DNS1
	    8.8.4.4;        //Google DNS2
    };
    allow-query { internal-network; };
    allow-query-cache { internal-network; };
    allow-recursion { internal-network; };
    allow-transfer { none; };
    allow-update { none; };
    dnssec-validation yes;
    auth-nxdomain no;
    recursion yes;
    notify no;
    listen-on { any; };
    listen-on-v6 { none; };
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Anytime DNS config files are changed the system will need to be restarted.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl restart named
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With these files in place recursive lookups (like &lt;em&gt;google.com&lt;/em&gt;) should be working.  This can be tested by changing DNS on a machine, or by using &lt;strong&gt;dig&lt;/strong&gt; or &lt;strong&gt;nslookup&lt;/strong&gt;.  &lt;strong&gt;Dig&lt;/strong&gt; accepts arguments for the DNS server to use, the domain to be queried, and the type of record (by default A) to be returned.  In the example below, the server and the domain to be returned are specified.   &lt;strong&gt;NSLookup&lt;/strong&gt; is a similar command that queries DNS servers.  In the example below, the server command tells it to connect to the new server and then the &amp;ldquo;www&amp;rdquo; is a query for a record (haven&amp;rsquo;t gotten to the local zone setup yet).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@webnamer:/etc/bind# dig 192.168.26.3 stewart.lan

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.16.8-Ubuntu &amp;lt;&amp;lt;&amp;gt;&amp;gt; stewart.lan
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 35138
;; flags: qr aa rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 1232
; COOKIE: 1b490288965657d7010000006131687c06bba43e1f56fdbc (good)
;; QUESTION SECTION:
;stewart.lan.			IN	A

;; AUTHORITY SECTION:
stewart.lan.		604600	IN	SOA	localhost. root.localhost. 6 604820 86600 2419600 604600

;; Query time: 0 msec
;; SERVER: 192.168.26.53#53(192.168.26.53)
;; WHEN: Thu Sep 02 20:12:44 EDT 2021
;; MSG SIZE  rcvd: 118

root@webnamer:/etc/bind# nslookup
&amp;gt; server 192.168.26.53
Default server: 192.168.26.53
Address: 192.168.26.53#53
&amp;gt; www
Server:		192.168.26.53
Address:	192.168.26.53#53

&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If there are problems at this point this point, use &lt;strong&gt;named-checkconf&lt;/strong&gt; to review the configuration files for errors.  By default, &lt;em&gt;named&lt;/em&gt; logs can be reviewed with &lt;strong&gt;tail /var/log/syslog&lt;/strong&gt; as well.&lt;/p&gt;
&lt;p&gt;A forward lookup zone (which matches names to numbers) needs to be created if we want a local zone.  My house is named &lt;em&gt;stewart.lan&lt;/em&gt;, but any name is fine with the caveat that collisions with valid public name spaces should be avoided.  A forward lookup zone is a text file similar to the one below.  Note that this file was referenced in the &lt;em&gt;named.conf&lt;/em&gt; setup.  A records link names to IPs.  CNAMEs are alias records.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brent@webnamer:/etc/bind$ cat forward.stewart.lan
$TTL    604800
@       IN      SOA     localhost. root.localhost. (
                            6         ; Serial
                        604820         ; Refresh
                        86600         ; Retry
                        2419600         ; Expire
                        604600 )       ; Negative Cache TTL
;
;Name Server Information
@       IN      NS      ns.stewart.lan.

;IP address of Your Domain Name Server(DNS)
ns IN       A      192.168.26.53

;A Record for Host names
gw     IN       A       192.168.26.1
ns	IN	A	192.168.26.53
pop	IN	A	192.168.25.7
print	IN	A	192.168.24.17
oldprint	IN	A	192.168.24.11
server	IN	A	192.168.26.9
proxmox	IN	A	192.168.26.10
library	IN	A	192.168.26.11


;CNAME Record
www	IN	CNAME	ns.stewart.lan.
dav	IN	CNAME	ns.stewart.lan.
newprint	IN	CNAME	print.stewart.lan.
pve	IN	CNAME	proxmox.stewart.lan.
webnamer	IN	CNAME	ns.stewart.lan
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This setup doesn&amp;rsquo;t show the reverse lookup zone (24.168.192.in-addr.arpa), but that can be built easily and added if needed.  Reverse zones link numbers to names and are used for authentication usually.  With DNS setup and the forward zone in place, we should be able to ping by name (link &lt;em&gt;printer.stewart.lan&lt;/em&gt;).  If there are problems, use &lt;strong&gt;named-checkzone&lt;/strong&gt; to confirm that the format of your zone file is correct.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simple Apache Setup on Linux</title>
      <link>https://www.nextpertise.net/posts/210830_apache/</link>
      <pubDate>Mon, 30 Aug 2021 16:38:48 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210830_apache/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been running the free version of ESXi 6.5 for a while, but the vulnerabilities kept piling up and I had issues upgrading it.  I&amp;rsquo;ve been looking at ProxMox VE for a while and last week I decided to give it a chance.  I want to get more experience with the server before I write about it, so I&amp;rsquo;ll start by detailing a simple process to get a local webserver running.  Browsers keep trying to throw distracting junk in front of me for start pages when what I really want is to quickly get to the sites I need.  I put together a simple page that organizes my personal and work links for this purpose.&lt;/p&gt;
&lt;p&gt;I built this server on Ubuntu 21.04 Server and my instructions are written from that perspective.  Notes around the firewall and restarting the service will vary by distribution and version, but I&amp;rsquo;ll leave translation as an exercise to the reader.  Installing a webserver is straightfoward - there are a variety to choose from, but Apache is good for this purpose because it&amp;rsquo;s so well documented.  Once the package is downloaded and the service started, you should be able to browse to http://127.0.0.1 and see the default Apache page.  When I did this at home, Ubuntu 21.04 had the firewall up by default, so I needed to allow the Apache service.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt install apache2
sudo ufw allow &#39;Apache&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You&amp;rsquo;ll need to put your files somewhere for serving.  Apache puts content in &lt;em&gt;/var/www&lt;/em&gt; by default so I created a directory for my site user at &lt;em&gt;/var/www/stewart&lt;/em&gt;.  With that done, the website needs to be defined for Apache.  The Apache config files are found at &lt;em&gt;/etc/apache2&lt;/em&gt;.  To setup a new site I created a &lt;em&gt;stewart.conf&lt;/em&gt; under &lt;em&gt;/etc/apache2/sites-available&lt;/em&gt;.  Below is a simple configuration file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
    ServerAdmin my@email
    ServerName www.stewart.local
    ServerAlias www.stewart.local
    DocumentRoot /var/www/stewart
    &amp;lt;Directory /var/www/stewart&amp;gt;
        Options Indexes FollowSymLinks Multiviews
        AllowOverride All
        Require all granted
        allow from all
    &amp;lt;/Directory&amp;gt;
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The site then needs to be activated.  Enabling the site is done with &lt;strong&gt;a2ensite&lt;/strong&gt; and it can be disabled with &lt;strong&gt;a2dissite&lt;/strong&gt;.  This will create a link into the &lt;em&gt;/etc/apache2/sites-enabled/&lt;/em&gt; directory.  The web service will need to be restarted at that point as well.  When it restarts, it reads the conf files it finds in sites-enabled.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo a2ensite stewart.conf
sudo systemctl reload apache2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With that, you should be able to browse to the local server and see the site!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cockpit</title>
      <link>https://www.nextpertise.net/posts/210501_cockpit/</link>
      <pubDate>Sat, 01 May 2021 14:44:32 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210501_cockpit/</guid>
      <description>&lt;p&gt;If &amp;ldquo;web-based graphical interface for administering Linux&amp;rdquo; makes you think &lt;em&gt;Webmin&lt;/em&gt;,  then you  need to look at &lt;em&gt;Cockpit&lt;/em&gt;.  Cockpit is a modern web-based management tool for all your Linux servers.  It&amp;rsquo;s similar to webmin, but slicker.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/210506_Cockpit_Login.png#floatsmallleft&#34; alt=&#34;Login&#34;&gt;&lt;/p&gt;
&lt;p&gt;Installation in Ubuntu is a breeze.  I installed this on all my linux machines and can manage all of the systems from one dashboard (again, Cockpit has to be installed on them all).  &lt;strong&gt;Cockpit&lt;/strong&gt; is the base install, with other packages to add functionality for storage, networking, pack manager, virtual machines, and containers.  After installation, browse to https://linux_ip:9090 to find the login screen for Cockpit.  Login using the same credentials you use to login to ssh.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install cockpit cockpit-storaged cockpit-networkmanager 
cockpit-packagekit cockpit-machines cockpit-podman
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/210506_Cockpit_Dashboard.png#floatsmallright&#34; alt=&#34;Dashboard&#34;&gt;&lt;/p&gt;
&lt;p&gt;Once logged in, the Dashboard is the information hub.  By default it shows processor, memory, network, and storage graphs.  From this screen you can also add additional servers to this instance of cockpit (the + button).  I have setup several servers on cockpit on my server, and the graph shows all of them.&lt;/p&gt;
&lt;p&gt;Click on the server name at the bottom of the Dashboard (or click the Host button on the side) to zoon in to instance specific information.  From here you can get hardware details or drill down into different areas.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logs makes it easy to look through all the logs on the system.  For instance, I can query all the logs from the current session for &amp;ldquo;Alert and above&amp;rdquo; messages.  I can even match to a text pattern!  This is one of the easiest ways to quickly comb through Linux logs.&lt;/li&gt;
&lt;li&gt;Storage lets you dig into the details of the attached drives, including NFS mounts&lt;/li&gt;
&lt;li&gt;Networking shows utilizaiton graphs and critical parameters, such as IP&lt;/li&gt;
&lt;li&gt;Accounts shows all the accounts on the box.  It also allows you to add, change or delete accounts.  Password reset?  It&amp;rsquo;s a snap through here.&lt;/li&gt;
&lt;li&gt;Services shows all the running services, like Windows task manager.  You can rest stop or start services from here as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is a software updates tab that makes it easy to keep everything up-to-date.  Click the update button and watch the progress bar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/210510_Cockpit_Terminal.png#floatleft&#34; alt=&#34;Terminal&#34;&gt;
Finally, there&amp;rsquo;s built-in access to the console from the web interface.  If you are managing a server and there&amp;rsquo;s something that can&amp;rsquo;t be done from the GUI, just click the terminal tab and do it from the command line.&lt;/p&gt;
&lt;p&gt;If you have a group of devices, this is a great way to administer them from one console.  The log searching in particular is one of the best implementations I&amp;rsquo;ve seen.  More than that, you can quickly access the things you need in a &amp;ldquo;headless&amp;rdquo; environment such as adding accounts, confirming administrative details, or updating software.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll talk about automation in the future but there&amp;rsquo;s a need for an interactive way to manage servers and this compliments ansible nicely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CPUFetch</title>
      <link>https://www.nextpertise.net/posts/210413_cpufetch/</link>
      <pubDate>Tue, 13 Apr 2021 17:50:03 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210413_cpufetch/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/210413_lscpu.png#floatright&#34; alt=&#34;LSCPU Output&#34;&gt;
I don&amp;rsquo;t have to check CPU statistics very often, but occassionally I need to remember details like how many cores I have.  The traditional way to get CPU information in Linux is to use &lt;strong&gt;lscpu&lt;/strong&gt;.  Here&amp;rsquo;s the top of the output on my desktop.  I&amp;rsquo;ve truncated the picture - the output is a full page or two of details about your CPU and it&amp;rsquo;s capabilities.  You can also &lt;strong&gt;cat /proc/cpu&lt;/strong&gt;, which has similar info, or list hardware with &lt;strong&gt;lshw&lt;/strong&gt;.  &lt;strong&gt;lshw&lt;/strong&gt; provides a &lt;em&gt;lot&lt;/em&gt; of output, so you can filter that down with &lt;strong&gt;lshw -class CPU&lt;/strong&gt;.  All of these options work, but they vary from cluttered to hard-to-read.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/210413_cpufetch.png#floatleft&#34; alt=&#34;CPUFetch&#34;&gt;
I came across a fun utility to do the same thing, but prettier.  CPUfetch doesn&amp;rsquo;t display the same level of detail, but it pulls the most interesting pieces.  It&amp;rsquo;s actually a little clearer and easier to read because it doesn&amp;rsquo;t have as much detail.  With the pretty logo to the left I assume the name is a nod to Neofetch, a utility I build in to my &lt;strong&gt;.bashrc&lt;/strong&gt; to show on startup and use all the time.&lt;/p&gt;
&lt;p&gt;This doesn&amp;rsquo;t solve a lot of problems, but it is kinda cool.  If you agree, check it out on Github.  To install, clone the repository and &lt;strong&gt;make&lt;/strong&gt; the executable.  I put all my repos in a single directory to organize them, a practice I suggest.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cd ~/git  
git clone https://github.com/Dr-Noob/cpufetch  
cd cpufetch  
make  
./cpufetch  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It will also compile on Android, Windows and MacOS, if you&amp;rsquo;re into that kinda thing.  The readme at github has some other sample pictures and some ways to modify the output.  Have fun!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Making a Memorial DVD</title>
      <link>https://www.nextpertise.net/posts/210308_kdenlive/</link>
      <pubDate>Mon, 08 Mar 2021 21:59:17 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210308_kdenlive/</guid>
      <description>&lt;p&gt;A good friend lost his father to COVID last week.  It was unexpected - he was only about 60 and in good health.  My friend asked for help putting together a memorial DVD.  Perhaps you&amp;rsquo;ve seen these - at a receiving in the US it&amp;rsquo;s common these days to find a TV that displays a collection of pictures of the deceased, perhaps with some background music.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t have any special expertise in Video and I didn&amp;rsquo;t have long to figure it out.  If you&amp;rsquo;re in a similar situation then 1) leave a note in the comments and I&amp;rsquo;ll pray for your friends family and 2) here are some quick and dirty instructions that will let you be of service.&lt;/p&gt;
&lt;h2 id=&#34;gathering-input&#34;&gt;Gathering input&lt;/h2&gt;
&lt;p&gt;I received a collection of sixty photos, a few digital pictures, as well as some MP3 files that were some of his Dad&amp;rsquo;s favorites.  I scanned all the pictures in as JPG at 300 dpi and put them in a directory with the MP3s.  I used GIMP to crop the photos.  I originally left the white borders around some pictures, but later found this created artifacts on the slideshow and re-edited to crop to just the picture.  I found the obituary online for some of the details I would need for the title page.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install gimp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;creating-the-dvd&#34;&gt;Creating the DVD&lt;/h2&gt;
&lt;p&gt;This section isn&amp;rsquo;t a software recommendation.  I wanted something that I could quickly understand and that wasn&amp;rsquo;t overly complicated to use.  I tried a few video editors and quickly picked kdenlive.  Even though I&amp;rsquo;m using Pop!OS Gnome, kdenlive worked fine.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install kdenlive
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By default, kdenlive shows two video tracks and two audio tracks.  I deleted the extra tracks.  Right clicking in the resources box (below the file menu) allowed me to import the audio files and an &lt;em&gt;image sequence&lt;/em&gt;.  The image sequence importer allowed me to bring in a group of pictures in the same format from a single directory.  The picture files I received were PNG, so I used GIMP to convert them and then imported the entire set of pictures from the working directory.  The image sequence sorts by default to alphabetical order.  I had been given the pictures in rough chronological order and numbered them as they scanned, so they were already in the right order and I didn&amp;rsquo;t have to spend a lot of time.  I was lucky, but I definitely suggest that technique if you need to make this on short notice.&lt;/p&gt;
&lt;p&gt;The image sequence import allows you to specify how long each picture displays as well.  These DVDs are typically played in the background where they provide a distraction to folks in the receiving line and I wanted it to have enough tempo so it wouldn&amp;rsquo;t be boring.  I decided to change photos every 10 seconds and this turned out to be well received.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/210308_kdenlive.png#center&#34; alt=&#34;The Memorial DVD&#34;&gt;&lt;/p&gt;
&lt;p&gt;I created a title by right clicking in the resource box and &amp;ldquo;adding title clip&amp;rdquo;.  This gave me a PowerPoint-like interface where I could add some text.   In this case, I created a simple title with the name, birth date and date of death.  It also let me specify how long it would display.&lt;/p&gt;
&lt;p&gt;Dragging the image sequence or the title onto the video track (&amp;ldquo;V1&amp;rdquo;) blocked off a period of time and labeled it &amp;ldquo;Image Sequence&amp;rdquo;.  Sixty photos displayed for 10 seconds each gives ten minutes of video, so I dragged out a few more copies of the Image Sequence to fill out the DVD.  I left a brief black screen between sequences, then a copy of the title to show the name of the deceased, before restarting the slide show.&lt;/p&gt;
&lt;p&gt;Dragging the audio files onto the audio track (&amp;ldquo;A1&amp;rdquo;) was a similar process.  I simply dragged enough songs to cover the time, leaving brief spaces between.  I was able to watch the video and I paid special attention to the transitions to make sure they were clean and not distracting.  I &lt;em&gt;think&lt;/em&gt; kdenlive will handle fancy image transitions but I elected not to spend too much time on them.  I had a day to put this together and the &amp;ldquo;plain vanilla&amp;rdquo; transitions were respectful and not distracting.&lt;/p&gt;
&lt;p&gt;At this point you can go to &lt;strong&gt;Project &amp;gt; Render&lt;/strong&gt; to compile the ensemble to an ISO file.  Here I hit another problem - I don&amp;rsquo;t have a DVD burner!  I have an old laptop running Linux, so I used SFTP to transfer the file to it and used brasero to burn the DVD.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install brasero
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Last step!  I dug out an old DVD player to verify that the burned DVD would read okay.  It did and the resulting display looked sharp and clean.  I burned a copy for the funeral, and extras for my friend and his siblings.&lt;/p&gt;
&lt;h2 id=&#34;the-reception&#34;&gt;The Reception&lt;/h2&gt;
&lt;p&gt;This was a rush job by an stark amatuer, but the result was appreciated by the family.  I want to the thank the folks at kdenlive - it&amp;rsquo;s a slick program, worked reliably, and was easy to pick up.  The DVD I made probably was more of a credit to their hard work and gift to the community than to my contribution.  That said, this is a doable project.  I could see this idea being a nice feature at an anniversary or birthday party, or even at a company Christmas party.  If you have the opportunity to be of service in this way, I hope this walk through will be a beneficial introduction.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tsukae - A tool for graphing command usage</title>
      <link>https://www.nextpertise.net/posts/210306_tsukae/</link>
      <pubDate>Sat, 06 Mar 2021 22:59:08 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210306_tsukae/</guid>
      <description>&lt;p&gt;Readers may recall that six months ago I wrote about the &lt;a href=&#34;https://www.nextpertise.net/posts/200817_mostcommonlinuxcommand/&#34;&gt;most commonly used Linux commands&lt;/a&gt;.  I had seen a series of articles with that title and decided to see what my most common commands were.  I suggested the following as a way to pull command history and count usage.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;history | awk ‘&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;print $2&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;’ | sort | uniq -c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/irevenko/tsukae&#34;&gt;Tsukae&lt;/a&gt; is a much better way to accomplish this task.  It&amp;rsquo;s much simpler and can produce the output in Bar or Pie chart, or as a list.  Tsukae is written by Ilya Revenko and can be cloned from GitHub.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/tsukae.gif&#34; alt=&#34;Tsukae Demo&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;installing-tsukae&#34;&gt;Installing Tsukae&lt;/h2&gt;
&lt;p&gt;Tsukae needs Go to run (&lt;strong&gt;apt install golang-go&lt;/strong&gt;).  Once cloned, just go into the directory and build the executable.  Tsukae expects a &lt;em&gt;blacklist&lt;/em&gt; file to be present at &lt;em&gt;~/.config/tsukae/blacklist&lt;/em&gt;.  &lt;del&gt;This may be created automatically in future releases, but I got an error when I first ran the program and so created the file myself.&lt;/del&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/irevenko/tsukae.git  
cd tsukae  
go get -d ./...  
go build   
~~mkdir ~/.config/tsukae  
touch blacklist~~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Update!&lt;/strong&gt;  I posted an issue for the above on GitHub and the author published an update today to fix.  I tested it and confirmed it resolved the issue.  This is a great example of the power of GitHub - everyone contributes in whatever way they can, and all contributions are appreciated.  In my case, by suggesting an improvement and helping test.  It&amp;rsquo;s why I continue to recommend that everyone participate in that community.  And thanks again to Ilya!&lt;/p&gt;
&lt;h2 id=&#34;running-tsukae&#34;&gt;Running Tsukae&lt;/h2&gt;
&lt;p&gt;When you run Tsukae you must specify the shell, as well as the number of commands to pull.  In the example below, I&amp;rsquo;ve gotten the top six bash commands.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./tsukae bash &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;  
&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; Most Used bash Commands  
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;255&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; git  
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;148&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; apt  
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;148&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; cd  
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;107&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ls  
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;74&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; hugo  
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;43&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; nano  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Commands list &lt;em&gt;cd&lt;/em&gt; and &lt;em&gt;ls&lt;/em&gt; might be uninteresting.  Adding those to the &lt;em&gt;blacklist&lt;/em&gt; text file will omit them in the future.&lt;/p&gt;
&lt;p&gt;Git is a weird command to run most often, but I tend to run it a lot to sync the blog and upload new content.  I use the hugo command in development mode at the same time.  Tsukae is an interesting insight into how I&amp;rsquo;m using this computer.  It&amp;rsquo;s not a vital command to accomplish work, but the next time you see one of those &amp;ldquo;Top 25 Linux Command&amp;rdquo; articles you can see how closely their list matches yours.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GNS3 Update for February, 2021</title>
      <link>https://www.nextpertise.net/posts/210211_gns3_february21/</link>
      <pubDate>Thu, 11 Feb 2021 07:03:01 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210211_gns3_february21/</guid>
      <description>&lt;p&gt;The GNS3 project continues to see regular updates, even though we haven&amp;rsquo;t see a release since December.  I check in on the project periodically and I&amp;rsquo;m going to make updating the status a regular feature of the blog.&lt;/p&gt;
&lt;h2 id=&#34;state-of-2217&#34;&gt;State of 2.2.17&lt;/h2&gt;
&lt;p&gt;The current release has been stable in my personal testing.  I use if for all kinds of things, including VMs, containers, and networking out to my physical topology.  A review of the issues reported in GitHub shows 15 bugs reported, with several related to Big Sur.  If you have a new M1 Mac, you might want to run the GNS3 VM and use the Web UI.  The M1 is new and I&amp;rsquo;m hearing reports of software being ported every week, so give this a little time.&lt;/p&gt;
&lt;h2 id=&#34;new-and-updated-appliances&#34;&gt;New and updated appliances&lt;/h2&gt;
&lt;p&gt;In the appliance space, we&amp;rsquo;ve seen steady activity.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cisco IOS-V was updated to include 15.8.3&lt;/li&gt;
&lt;li&gt;EXOS was updated to 31.1&lt;/li&gt;
&lt;li&gt;OpenWrt was updated to 19.07.6&lt;/li&gt;
&lt;li&gt;Ubuntu Cloud was updated to 20.04&lt;/li&gt;
&lt;li&gt;Vyos was updated to support 1.3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/fossadusk.jpg#floatsmallright&#34; alt=&#34;Puppy Linux&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;puppy-linux&#34;&gt;Puppy Linux&lt;/h3&gt;
&lt;p&gt;Puppy Linux was added.  Puppy is a little weird - it&amp;rsquo;s not really a distribution, but a collection of installers from other distros that have been customized by the Puppy system (&amp;ldquo;Woof-CE&amp;rdquo;) and that adhere to a philosophical consistency.  The GNS3 installer includes builds around three versions of Ubuntu - the latest version is &amp;ldquo;Focal&amp;rdquo;.  Puppy Linux builds are generally known to be small but have the tools you need built in, and to run well on older hardware.  This makes it a good fit for GNS3 where we want to have VMs in the network to use as clients or servers and where we are sensitive to overhead (especially when topologies get complex).&lt;/p&gt;
&lt;h2 id=&#34;openmediavault&#34;&gt;OpenMediaVault&lt;/h2&gt;
&lt;p&gt;OpenMediaVault is a NAS server that supports SSH, S/FTP, CIFS, and other types of file access.  NAS services are an important part of corporate network environments and this provides a great opportunity to explore those services.  Corporate data centers tend to focus on Exablock, Equallogic, or NetApp (or similar solutions from VMWare or Cisco), but those aren&amp;rsquo;t represented in GNS3.  Build your own NAS has focused on FreeNAS for a long time.  If you are just wanting a stand-in to test with, I&amp;rsquo;d recommend using FreeNAS.  However, OMV is a newer option and it&amp;rsquo;s nice to have a choice. One of the big differences is that FreeNAS is based on FreeBSD and OMV is based on Linux, which may make it more accessible for some users.  The current version of the appliance in GNS3 is 5.5.11.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Won&#39;t you be my Neighbor?</title>
      <link>https://www.nextpertise.net/posts/210209_ipneighbors/</link>
      <pubDate>Tue, 09 Feb 2021 18:33:05 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210209_ipneighbors/</guid>
      <description>&lt;p&gt;Cisco devices have long had the Cisco Discovery Protocol (CDP).  CDP is a data link layer advertisement that is periodically broadcast (every 30 seconds).  Devices can listen and build a list of directly attached &amp;ldquo;neighbors&amp;rdquo; that includes critical information like the name, IP, type of device, and the port attached.  Other vendors developed their own protocols, including Nortel, Foundry, and Microsoft.  This information can be useful, either to familiarize yourself with a network or to communicate network information between systems.&lt;/p&gt;
&lt;h2 id=&#34;arp-for-network-discovery&#34;&gt;ARP for Network Discovery&lt;/h2&gt;
&lt;p&gt;PCs don&amp;rsquo;t typically support CDP, but you can do get some of this information by looking at the ARP table.  All network communication takes place at layer 2. When a device wants to communicate with another local device and only knows it&amp;rsquo;s IP, it uses the Address Resolution Protocol to send a data-link layer broadcast asking &amp;ldquo;Who&amp;rsquo;s using this IP?&amp;rdquo;.  The response is a MAC address.  This is easy to see using Wireshark, especially if you can place your network card in promiscuous mode, so if you&amp;rsquo;re unfamiliar with the process take a look!&lt;/p&gt;
&lt;p&gt;We can inspect the ARP table to see a list of other local systems on our network.  There are three problems with this - first, the arp command is slow. Second, this will only show things that have communicated with your PC recently.  You can use some type of broadcast to try to goose other devices to identify themselves (i.e. &lt;strong&gt;ping 192.168.0.255&lt;/strong&gt;).  Third, the devices only identify their layer 2 and 3 addresses so we don&amp;rsquo;t know much about them.  The command below shows the &lt;strong&gt;arp&lt;/strong&gt; command on Linux, but parallel commands are available in every operating system and network device.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pop &amp;gt; pop-os &amp;gt; ~ &amp;gt; $ &amp;gt;  __arp__  
Address              HWtype    HWaddress    Flags Mask             Iface  
_gateway             ether    0c:8d:db:8f:60:c0   C      enp0s31f6  
192.168.25.50        ether    00:0c:29:19:61:6d     C      enp0s31f6  
vcenter.stewart.tc   ether    0c:ee:99:81:23:03   C      enp0s31f6  
192.168.25.5         ether    00:0c:29:9d:a2:38   C      enp0s31f6  
192.168.25.4         ether    96:ee:a6:5d:30:ec   C      enp0s31f6  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A slightly more useful command for discovering devices on the local network is &lt;strong&gt;ip neigh&lt;/strong&gt;.  This gives the same information but is much more responsive.  It still depends on the target having been in communication recently.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pop &amp;gt; pop-os &amp;gt; ~ &amp;gt; $ &amp;gt; __ip neigh__  
192.168.25.1 dev enp0s31f6 lladdr 0c:8d:db:8f:60:c0 REACHABLE  
192.168.25.50 dev enp0s31f6 lladdr 00:0c:29:19:61:6d STALE  
192.168.25.3 dev enp0s31f6 lladdr 0c:ee:99:80:00:03 REACHABLE  
192.168.25.5 dev enp0s31f6 lladdr 00:0c:29:9d:a2:38 STALE  
192.168.25.4 dev enp0s31f6 lladdr 96:ee:a6:5d:30:ec REACHABLE  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You could achieve something similar with nmap as well.  Running a command like &lt;strong&gt;nmap 192.168.0.0/24&lt;/strong&gt; will identify all the devices that respond locally and which ports are open on each of them, but it&amp;rsquo;s not happening automatically.  NMAP takes a while to run, which makes it less practical, plus it will raise alarms if your network is monitored to any extent.&lt;/p&gt;
&lt;h2 id=&#34;link-layer-discovery-protocol-lldp&#34;&gt;Link Layer Discovery Protocol (LLDP)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/lldp.jpeg#floatright&#34; alt=&#34;LLDP&#34;&gt;
Link Layer Discovery Protocol is a vendor-neutral version of the CDP concept.  Like CDP, LLDP advertises identity and capabilities.  It can be used to communicate Power over Ethernet capabilities or requirements as well as device location.  Information gathered by LLDP is stored in the SNMP device management information Base (MIB) and can be queried using SNMP tools.  Most networking equipment either runs LLDP or allows it to be used.&lt;/p&gt;
&lt;p&gt;LLDP can be enabled for Ubuntu derived Linux servers using the &lt;em&gt;lldpd&lt;/em&gt; package.  It uses snmpd, so install that at the same time.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install lldpd snmpd  
sudo service lldpd status start  
sudo service snmpd status start  
lldpcli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once installed, use the &lt;strong&gt;lldpcli&lt;/strong&gt; command to enter an LLDP command line interface.  From the prompt, type &lt;strong&gt;show neighbors&lt;/strong&gt; to list the discovered devices.  In this example, I can see that I&amp;rsquo;m connected to a Cisco Meraki switch on port 6.  LLDP can also be enabled with the -c flag to produce CDP packets.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;lldpcli&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; $ __show neighbors__  
&lt;span style=&#34;color:#ae81ff&#34;&gt;\-&lt;/span&gt;------------------------------------------------------------------------------  
LLDP neighbors:  
&lt;span style=&#34;color:#ae81ff&#34;&gt;\-&lt;/span&gt;------------------------------------------------------------------------------  
Interface:  enp0s31f6, via: LLDP, RID: 1, Time: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; day, 01:50:10  
Chassis:       
 ChassisID:  mac 0c:8d:db:80:72:3e  
 SysName:    MS220-Switch  
SysDescr:   Meraki MS220-8P Cloud Managed PoE Switch  
MgmtIP:     192.168.26.3  
Capability: Bridge, on  
Port:          
  PortID:      ifalias &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;  
  PortDescr:   Port &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;  
  TTL:         &lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt;  
Unknown TLVs:  
  TLV:         OUI: 00,18,0A, SubType: 1, Len: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 00,F6,40,25  
&lt;span style=&#34;color:#ae81ff&#34;&gt;\-&lt;/span&gt;------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;who-cares&#34;&gt;Who cares?&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Why&amp;rdquo; is always a useful question - I&amp;rsquo;ve always found that people who understand something embrace the opportunity it presents.&lt;/p&gt;
&lt;p&gt;So, why bother with LLDP?  It&amp;rsquo;s really going to be most useful to network support people.  Putting this on my laptop allows me to quickly get my bearings on a network as I relocate.  I can identify the port I&amp;rsquo;m attached to either from the PC or from the switch side.  It may sound mundane, but just understanding the port is a lot easier than tracing cables!  Pentesters can use it for reconoitering.  As always, use your power for good!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux Install Script</title>
      <link>https://www.nextpertise.net/posts/210207_installscript/</link>
      <pubDate>Sun, 07 Feb 2021 10:32:29 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210207_installscript/</guid>
      <description>&lt;p&gt;I install Linux pretty regularly.  Sometimes I&amp;rsquo;m setting up a new server instance, sometimes I&amp;rsquo;m deploying it to new hardware.  Many times I&amp;rsquo;m doing a clean install on a new release.  Very often, I&amp;rsquo;m reinstalling my workstation because I want to try a new flavor.  Whether you are a distro-hopper or just need to handle Disaster Recovery process, installing Linux and customizing it to fit your particular needs can take a half day or more.&lt;/p&gt;
&lt;p&gt;In addition to the time, installing requires you to make sure that you bring critical applications forward, attach to required printers and servers, and put expected security elements in place.  It&amp;rsquo;s easy to forget a step.  If you haven&amp;rsquo;t done it in a while, it&amp;rsquo;s difficult to remember &lt;em&gt;how&lt;/em&gt; to handle a step.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s why years ago I started building an install script.  These days my I keep it in a private Github repository.  When setting up a new instance, I just grab the repo and run script.  For the record, it still takes a while, but I don&amp;rsquo;t have to babysit it.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-private-github-repository&#34;&gt;Creating a private GitHub Repository&lt;/h2&gt;
&lt;p&gt;Login to Github, go to the Repositories tab and click new.  Give your repository a name and select &amp;ldquo;Private&amp;rdquo;.  If you have an existing repository, go to the Settings tab and scroll to the bottom where it says &amp;ldquo;Danger Zone&amp;rdquo;.  There&amp;rsquo;s an option to make the repository private.  Not everyone makes their install script private, but I worry about revealing details of the programs I use, internal resources, or paths.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/210207_GitNew.png#floatcenter&#34; alt=&#34;New Repo&#34;&gt;&lt;/p&gt;
&lt;p&gt;Private repos are also good for personal notes and documentation.  I used to keep notes in Simplenote, but now I use Visual Studio Code and a private repository.  I like having everything I need to reference in my Code workspace.  You could also use a private repository for documentation, with a slick pandoc CI process to build EPUB or PDF versions that you deliver (see my &lt;a href=&#34;https://www.nextpertise.net/200919_Pandoc_Improved&#34;&gt;article&lt;/a&gt;).  I used to use Scrivner for writing, but you can setup a similar workflow using Visual Studio Code and Github.&lt;/p&gt;
&lt;h2 id=&#34;building-an-install-script&#34;&gt;Building an Install Script&lt;/h2&gt;
&lt;p&gt;Nope, I&amp;rsquo;m not going to share my install script.  As I said before, it&amp;rsquo;s &lt;em&gt;private&lt;/em&gt;.  But let&amp;rsquo;s talk about what&amp;rsquo;s in it and how it&amp;rsquo;s built.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;First, it specifies the execution environment.  Not all versions of Linux use bash as the default shell for scripts and that other environment may not support the commands I use, so I want to nail this down.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Install some cool essential tools ============================&amp;#34;&lt;/span&gt;  
apt update  
apt upgrade -y  
apt install traceroute nmap snapd flatpak htop net-tools gconf2 hugo git geary unzip -y  
apt install vlc filezilla pithos pdfshuffler thunderbird wireshark -y  
apt install gigolo gvfs-fuse flameshot network-manager-openvpn network-manager-vpnc -y  
apt install network-manager-openconnect network-manager-pptp network-manager-openvpn-gnome -y  
apt install network-manager-vpnc-gnome network-manager-openconnect-gnome network-manager-pptp-gnome -y  
apt install python-software-properties libkf5globalaccel-bin libfreerdp-plugins-standard network-manager-applet -y  
add-apt-repository ppa:graphics-drivers/ppa -y  
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Setup Profile Sync Daemon https://github.com/graysky2/profile-sync-daemon&amp;#34;&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#https://github.com/graysky2/profile-sync-daemon  &lt;/span&gt;
sudo apt install profile-sync-daemon  
systemctl --user enable psd.service  
systemctl --user start psd.service  
apt update  
apt upgrade -y  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, I install a bunch of stuff that I want on any machine I use.  For instance, &lt;em&gt;why isn&amp;rsquo;t traceroute included in everything?&lt;/em&gt;  Other common pieces include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Networking and Security tools like nmap, htop, filezilla, and wireshark.  Gigolo for mounting drives.&lt;/li&gt;
&lt;li&gt;VPN support (that&amp;rsquo;s the network-manager stuff)&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;m agnostic on packaging, so I install support for snaps and flatpaks&lt;/li&gt;
&lt;li&gt;and finally some applications I really like (hugo, pithos, vlc, pdfshuffler, and &lt;a href=&#34;https://www.nextpertise.net/201210_flameshot&#34;&gt;flameshot&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notice that I break the installs into groups - this makes it easier to track down problems if they occur.  The &amp;ldquo;-y&amp;rdquo; at the end answers &amp;ldquo;yes&amp;rdquo; and allows the command to continue without waiting for a response from me.  Some of the things I install are already present, but they&amp;rsquo;re not present on &lt;em&gt;all&lt;/em&gt; distros so specifying the tools I want just makes sure that they&amp;rsquo;re there (if they&amp;rsquo;re already installed, apt just skips them).  A special word about Profile Sync Daemon, since not many folks have heard of it.  This puts the browser profile into a ram disk and speeds up the browser.&lt;/p&gt;
&lt;h2 id=&#34;fixing-the-terminal&#34;&gt;Fixing the Terminal&lt;/h2&gt;
&lt;p&gt;I wrote about the &lt;a href=&#34;https://www.nextpertise.net/201130_Powerline-Windows&#34;&gt;Powerline shell&lt;/a&gt; a while back.  Since I started using it, I hate to be without it.  Powerline depends on having an appropriate font and I use JetBrainsMono.  Finally, I prefer &lt;a href=&#34;https://www.nextpertise.net/201125_tilix&#34;&gt;Tilix&lt;/a&gt; to the default terminal.  This sections makes all those things happen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fix terminal ====================================================&amp;#34;&lt;/span&gt;  
pip3 install powerline-shell  
wget https://download.jetbrains.com/fonts/JetBrainsMono-2.225.zip  
unzip JetBrainsMono-2.225.zip  
cp -R fonts /usr/share/ -r  
fc-cache -f -v  
apt install tilix -y  
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;function _update_ps1() {  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    PS1=$(powerline-shell $?)  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;if [[ $TERM != linux &amp;amp;&amp;amp; ! $PROMPT_COMMAND =~ _update_ps1 ]]; then  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    PROMPT_COMMAND=&amp;#34;_update_ps1; $PROMPT_COMMAND&amp;#34;  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;fi&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /home/brent/.bashrc  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that I&amp;rsquo;m using an echo to give some feedback about where we are in the process. I download the font, move it to the correct directory, and update the font cache so it&amp;rsquo;s usable.  The rest of this downloads Powerline and sets it up, plus grabs Tilix.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cleaning up................&amp;#34;&lt;/span&gt;  
rm JetBrainsMono* -f  
rm -rf fonts  
&lt;span style=&#34;color:#ae81ff&#34;&gt;\#&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Reminders  &lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Set JetBrains Mono as terminal font&amp;#34;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/neofetch.png#floatsmallright&#34; alt=&#34;Neofetch&#34;&gt;&lt;/p&gt;
&lt;p&gt;At the end of the script, I have a clean up section and remove the Font files that were left in the install directory.  I don&amp;rsquo;t know how to programmatically tell Tilix to use JetBrains Mono in it&amp;rsquo;s default profile (help!), so I just remind myself to do that.&lt;/p&gt;
&lt;h2 id=&#34;option-stuff&#34;&gt;Option stuff&lt;/h2&gt;
&lt;p&gt;I have a series of sections for handling optional components.  The first three optional sections are almost always turned on: the Firewall, Neofetch, SSH and NFS.&lt;/p&gt;
&lt;p&gt;The structure of these loops is a for statement terminated by done.  Since the conditions of the for are empty, it will loop continually until told to break.  Pressing a &amp;ldquo;y&amp;rdquo; or &amp;ldquo;n&amp;rdquo; executes some logic and breaks, any other key causes it to loop again.  I&amp;rsquo;m not sure this is the best way to do it, but it works.  In Bash, watch the spacing around the brackets and parentheses because it is required!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt; ; ; &lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;  
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Would you like to enable the firewall (y/n)?  &amp;#34;&lt;/span&gt;  
Read VAR  
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $VAR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;  
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Enable Firewall&amp;#34;&lt;/span&gt;  
ufw enable  
break  
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $VAR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;  
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;skipping.............&amp;#34;&lt;/span&gt;  
break  
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;  
Done  
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt; ; ; &lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;  
read VAR  
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $VAR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;  
add-apt-repository ppa:dawidd0811/neofetch -y  
apt-update  
apt install neofetch -y  
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neofetch&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /home/brent/.bashrc  
break  
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;  
If &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $VAR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;  
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;skipping.............&amp;#34;&lt;/span&gt;  
break  
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt; ; ; &lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;  
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Would you like to install SSH and NFS (y/n)?  &amp;#34;&lt;/span&gt;  
read VAR  
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $VAR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;  
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Setup SSH and nfs ===========================================&amp;#34;&lt;/span&gt;  
apt install openssh-server sshfs fail2ban nfs-kernel-server nfs-common -y  
systemctl start fail2ban  
systemctl enable fail2van  
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/[sshd]  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;enabled = true  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;port = 22  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;filter = sshd  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;logpath = /var/log/auth.log  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;maxretry = 3&amp;#34;&lt;/span&gt; &amp;gt;  /etc/fail2ban/jail.local  
break  
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $VAR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;  
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;skipping.............&amp;#34;&lt;/span&gt;  
break  
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;  
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/calibre.png#floatright&#34; alt=&#34;Calibre&#34;&gt;
The next sections are things that I would usually want, but not always.  One example is KDE Connect - on Gnome I use the &lt;em&gt;Gnome Connect&lt;/em&gt; extension and don&amp;rsquo;t need to load it.  Other critical tools that I present as an option to myself include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GNS3&lt;/li&gt;
&lt;li&gt;X2Go&lt;/li&gt;
&lt;li&gt;Remina&lt;/li&gt;
&lt;li&gt;Foliate&lt;/li&gt;
&lt;li&gt;VSCode&lt;/li&gt;
&lt;li&gt;Chromium&lt;/li&gt;
&lt;li&gt;Node-Red&lt;/li&gt;
&lt;li&gt;Signal&lt;/li&gt;
&lt;li&gt;Printer drivers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This isn&amp;rsquo;t a perfect script, but the structure allows me to re-run it as many times as I need to and skip the sections that are already installed.  The biggest issue is that new versions (like 21.04 when it comes out in a few months) typically aren&amp;rsquo;t represented in PPAs.  The fix is to specify an older version to pull from, but that&amp;rsquo;s not automated.  Still, this speeds up the process and takes less of my time.&lt;/p&gt;
&lt;h2 id=&#34;drive-mapping&#34;&gt;Drive Mapping&lt;/h2&gt;
&lt;p&gt;Another major piece missing here is drive mapping.  I typically &lt;a href=&#34;https://www.nextpertise.net/200813_Using_SSH3&#34;&gt;mount foreign drives&lt;/a&gt; using either NFS or SSH.  Although my script pulls in SSH and NFS utilities, it doesn&amp;rsquo;t actually connect shares.  I&amp;rsquo;ve chosen to leave that out and create a separate file for doing that.  This is easier to maintain, and there are cases where I want to rerun the mappping file without all the other installs.&lt;/p&gt;
&lt;p&gt;One of the things that makes it &lt;em&gt;so&lt;/em&gt; easy for me to stand up new machines or to distro-hop is that all my files are saved onto a central server.  I have an Ubuntu Mate install that just acts like a big file share.  This also simplifies backup, since I can concentrate on one server.  The files on the workstations are all transient.&lt;/p&gt;
&lt;h2 id=&#34;so---&#34;&gt;So . . .&lt;/h2&gt;
&lt;p&gt;That&amp;rsquo;s the deal.  I can run this script, make a few selections, and be up and running on a new machine pretty quickly with minimal effort.  I&amp;rsquo;m tried to show some examples of different kinds of installations, including web downloads and apt-based.  The basic structure is 1) Must Haves, then 2) Optional components encased in loops for easy selection, and 3) a clean-up section.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d love to include VSCode extensions, Gnome extensions, and auto-checking for PPA support into the script.  If anyone has a good refence, I&amp;rsquo;d appreciate it.  In the meantime, this automates 90%.  Good luck creating a similar project!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deskreen</title>
      <link>https://www.nextpertise.net/posts/210201-deskreen/</link>
      <pubDate>Mon, 01 Feb 2021 13:43:09 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210201-deskreen/</guid>
      <description>&lt;p&gt;Deskreen is an open-source utility that allows you to send your Windows, Mac, or Linux desktop onto another screen, including another computer, a tablet, or even a phone.  It can duplicate an application, duplicate an entire display, or extend the desktop and treat the other computer as an additional monitor.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://deskreen.com/img/plugs/hdmi.jpg#floatsmallleft&#34; alt=&#34;HDMI Plug&#34;&gt;
Deskreen outputs your display to a webpage with an embedded video.  Running the application prompts you to choose an application, existing display, or new display.  It then displays the produced webpage in text and with a 2D barcode.  The page, when opened on a separate device, allows you to play the video stream.&lt;/p&gt;
&lt;h2 id=&#34;testing-deskreen&#34;&gt;Testing Deskreen&lt;/h2&gt;
&lt;p&gt;An easy scenario to imagine would be using a tablet as a second screen for a laptop sitting in a coffee shop.  I tested exactly this setup using PopOS! on a 3rd Gen i7 and a Fire HD 10 9th gen tablet.  I downloaded Deskreen from Github as a DEB and installed it.  In order to fool my laptop into thinking it should produce a second screen, I bought &lt;a href=&#34;https://www.amazon.com/gp/product/B07C4TWZRM/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&amp;amp;psc=1&#34;&gt;HDMI dummy plugs&lt;/a&gt;.  I used Deskreen version 1.02 and 1.03 while testing.&lt;/p&gt;
&lt;p&gt;Once running, Deskreen produced a barcode that I was able to scan from the tablet and use to connect to a webpage.  You can manually type in the link, but it&amp;rsquo;s long and it&amp;rsquo;s randomly generated each time the app start sharing.  I clicked a button on the web page to register.  Back to the PC, where I accepted the connection and chose the output.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/210201_Deskreen.jpg#floatsmallright&#34; alt=&#34;My Setup&#34;&gt;
The new display was initially set to the same as my main screen - 1920x1080.  The video was down-converted, but everything was too small to be usable.  I used the display options in PopOS! to adjust the size to 1280x720 and this created a very usable display.  The new screen is responsive, with maybe barely a touch of latency similar to using a low-refresh-rate monitor.  I imagine that the quality and usage of wifi will impact this, but I wasn&amp;rsquo;t able to test that scenario.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/210201_Deskreen2.jpg#floatsmallleft&#34; alt=&#34;Phone&#34;&gt;
Just for fun, I sent the settings app to my phone at the same time.  Running two displays didn&amp;rsquo;t seem to bother the PC.  I left the webpage running on the tablet for hours and battery life on the tablet seemed surprisingly good.  I think I could run it for a full day (or more) without having to charge the tablet.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I could imagine a variety of cases where this could be useful.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extra screens&lt;/li&gt;
&lt;li&gt;sharing screens for troubleshooting&lt;/li&gt;
&lt;li&gt;connecting to smart TVs or displays&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The developer, Pavlo Buidenkov, has an excellent set of directions about using Deskreen at deskreen.com.  He also mentions that he&amp;rsquo;s hoping to find developers to collaborate with, so check it out!&lt;/p&gt;
&lt;p&gt;For me, this utility works well and fills a niche in my toolset.  It will be a part of my standard build from here on out!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Diagrams on Linux</title>
      <link>https://www.nextpertise.net/posts/210113_gns3_diagram/</link>
      <pubDate>Thu, 21 Jan 2021 17:42:48 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/210113_gns3_diagram/</guid>
      <description>&lt;p&gt;The articles I post generally start out as a way to share something I&amp;rsquo;ve learned through years of experience.  Less often, they are a way to share something that I&amp;rsquo;m researching currently.  This one started out as a way to share with you how much I rely on Lucidchart and to recommend it, but in the course of reviewing options it became a way to share what I&amp;rsquo;ve learned.&lt;/p&gt;
&lt;p&gt;I thought that options for creating diagrams on Linux were few and most of them were poor.  What I found is that now (2021!) there are several &lt;em&gt;good&lt;/em&gt; options and that all the tools have matured.  I reviewed Creately, Dia, Draw.io, GNS3, LibreOffice Draw, Lucidchart, Pencil, SmartDraw, Visio, and yEd.   About half are desktop applications and the other half web applications.&lt;/p&gt;
&lt;h2 id=&#34;diagramming-software&#34;&gt;Diagramming Software&lt;/h2&gt;
&lt;p&gt;Diagrams are an essential part of IT.  IT teams suffer with poor and out-of-date documentation and the biggest impediment to compiling it are usually the effort required to write and maintain.  It&amp;rsquo;s also true that not everyone in IT enjoys writing.&lt;/p&gt;
&lt;p&gt;Diagramming software solves this by allowing complex architectures to be summarized visually.  Diagrams can pack a lot of detail, can be quickly understood, and relevant information is easily accessible.  In short, being able to produce a clean diagram is a job requirement.&lt;/p&gt;
&lt;p&gt;Diagramming software is different from &amp;ldquo;drawing&amp;rdquo; applications like GIMP because it includes icons that can be quickly placed on a page and connected, along with basic shapes and annotations.  These shapes are layered, so you can bring one into the foreground, and the connecting lines are anchored to shapes so that the line endpoints move as shapes move. This workflow allows the production of well produced pictures with a minimal amount of effort.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;de facto&lt;/em&gt; standard here is Visio.  Many of us have to exchange diagrams in a team, and for those folks, being able to import and export in Visio format is critical in the same way that any word processor should be able to work with *.DOC files.&lt;/p&gt;
&lt;h2 id=&#34;evaluation-criteria&#34;&gt;Evaluation Criteria&lt;/h2&gt;
&lt;p&gt;My most typical use of this software is to produce network diagrams.  Other common diagrams for me include flowcharts, swim lanes, and org charts.  For purposes of this review, I&amp;rsquo;m focusing on network diagrams.&lt;/p&gt;
&lt;p&gt;Each program was evaluated based on the following criteria.  These are listed in  order of importance.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visio Import/Export&lt;/li&gt;
&lt;li&gt;Stencils available and easily expandable&lt;/li&gt;
&lt;li&gt;Output to PDF, HTML, and standard graphics formats&lt;/li&gt;
&lt;li&gt;Easy annotation and supported hyperlinks&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;desktop-applications&#34;&gt;Desktop Applications&lt;/h2&gt;
&lt;p&gt;This group includes Dia, GNS3, LibreOffice Draw, Pencil, Visio on WINE, and yEd. The default answer for many of us is Visio, but this recent review shows progress in the open-source competitors.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/2021-01-13_GNS3_Home.png#floatsmallleft&#34; alt=&#34;GNS3 Diagramming&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;visio&#34;&gt;Visio&lt;/h3&gt;
&lt;p&gt;Visio is the standard, but it&amp;rsquo;s not made for Linux.  I&amp;rsquo;ve been able to run 2010 using WINE without issues and 2013 with a little finessing.  The current version (2019) is a little too automated for my taste - it keeps trying to guess what I want and gets in my way.&lt;/p&gt;
&lt;p&gt;Visio checks all the boxes.  It is compatible with Visio, obviously (with the cavaet that the new VSDX format is not supported).  It has plenty of available stencils and most manufacturers produce their own additions.  Visio will output to a ton of formats, including PDF and HTML.  It is easy to annotate and you can create hyperlinks straight from icons (I have created links so that clicking a router opened a PuTTY session).&lt;/p&gt;
&lt;p&gt;Cons for Visio are 1) it&amp;rsquo;s running under WINE, 2) you can&amp;rsquo;t run the later versions (but the 2010 and 2013 are plenty good), and 3) it&amp;rsquo;s expensive.  Currently $270 from &lt;a href=&#34;https://www.amazon.com/Microsoft-D86-05555-Visio-Standard-2016/dp/B012F7PC3U/ref=sr_1_3?dchild=1&amp;amp;keywords=visio&amp;amp;qid=1610591015&amp;amp;sr=8-3c&#34;&gt;Amazon&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;gns3httpsgns3org&#34;&gt;&lt;a href=&#34;https://gns3.org&#34;&gt;GNS3&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I included this as a lark because I recently wrote about creating hyperlinks in GNS3 and realized it &lt;em&gt;could&lt;/em&gt; be used for this purpose.  If you want to try this out, take a look at &lt;a href=&#34;210113_GNS3_Links&#34;&gt;GNS3 HyperLinks&lt;/a&gt;.  This is free and there are some good diagram primitives you can use, but it doesn&amp;rsquo;t work with Visio.  Annotation and linking is fairly easy.  Not great for this purpose, but it does work in a pinch!&lt;/p&gt;
&lt;p&gt;For me, this can work very well for my home network.  I&amp;rsquo;m not interested in exchanging it with other users, and it allows me to build a &amp;ldquo;live&amp;rdquo; image of the physical network outside the virtual GNS3 world.  The two networks meet sometimes when I connect to the Internet or use a service like syslog.&lt;/p&gt;
&lt;p&gt;Diagramming isn&amp;rsquo;t really what GNS3 is designed for and this probably isn&amp;rsquo;t the tool you&amp;rsquo;re loooking for.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/2021-01-19_LibreOfficeDraw.png#floatsmallright&#34; alt=&#34;LibreOffice Draw&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;libreoffice-drawhttpswwwlibreofficeorgdiscoverdraw&#34;&gt;&lt;a href=&#34;https://www.libreoffice.org/discover/draw/&#34;&gt;LibreOffice Draw&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;LibreOffice can import Visio files, but can&amp;rsquo;t export.  The importing sometimes has errors - items that aren&amp;rsquo;t placed correctly or dimensions that are changed.  In my opinion, this is an okay way to view and print more than a serious tool for creating.  Even in the case of importing a picture into a text file, I&amp;rsquo;d export a PNG from something else to import into LibreOffice before trying to mess with Draw.&lt;/p&gt;
&lt;h3 id=&#34;pencilhttpspencilevolusvn&#34;&gt;&lt;a href=&#34;https://pencil.evolus.vn/&#34;&gt;Pencil&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Pencil project was something I used a few years ago and it showed a lot of promise.  I remembered it and tried to include it in this review.  If you are interested, grab executables from &lt;a href=&#34;https://github.com/prikhi/pencil/releases&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I messed around with compiling and tried the executable, but had issues with it running.  It now starts, but never displays a window.  It looks like there is active development, so I probably just tested at the wrong point.  Nonetheless, I got tired of messing with it and never did get a chance to try it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/2021-01-18_yEd.png#floatsmallleft&#34; alt=&#34;yEd&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;yedhttpswwwyworkscomproductsyed&#34;&gt;&lt;a href=&#34;https://www.yworks.com/products/yed&#34;&gt;yEd&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;yEd exists as several editions - there&amp;rsquo;s a desktop version, a web version, and one designed to work with Confluence (Graphity).  yEd is offered free, except in the Confluence tie-in model.
This is a powerful and easy-to-use Java-based tool.  The biggest knock on yEd is it&amp;rsquo;s inability to use Visio drawings or stencils.  You can export to PDF and HTML though.  I haven&amp;rsquo;t figured out a way to do Hyperlinking and you have to deal with a limited set of graphics primitives.&lt;/p&gt;
&lt;p&gt;However, if you have simple diagramming needs this is an awesome tool.  yWorks has provided a real service to the community by making this available for free.  I&amp;rsquo;ve used it over the years and it&amp;rsquo;s always been solid.&lt;/p&gt;
&lt;p&gt;From my perspective, it&amp;rsquo;s not as mature as other options but the price is right and it&amp;rsquo;s worth considering.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://dia-installer.de/en/images/dia_screenshot.png#floatsmallright&#34; alt=&#34;Dia&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;dia-httpdia-installerde&#34;&gt;Dia (&lt;a href=&#34;http://dia-installer.de/&#34;&gt;http://dia-installer.de/&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;I haven&amp;rsquo;t used Dia as much - the last time I looked at it I was disappointed.  Since then it&amp;rsquo;s added some support for Visio VDX files and a wealth of new templates.  The interface has a much more solid feel and it is much easier to use.&lt;/p&gt;
&lt;p&gt;I was able to quickly put together good-looking diagrams and came away impressed and appreciative about what the team has produced.  That said, I had trouble importing and exporting Visio files when I tested.  Annotation was less developed than Visio or Lucidchart - text couldn&amp;rsquo;t be rotated, icons couldn&amp;rsquo;t be labeled.  I couldn&amp;rsquo;t create hyperlinks and I couldn&amp;rsquo;t import stencils.&lt;/p&gt;
&lt;p&gt;This is a much improved project and it&amp;rsquo;s obvious they&amp;rsquo;re on the right track.  For professional use, I don&amp;rsquo;t think it&amp;rsquo;s on the Visio or Lucidchart level.  As a free application that is native to Linux, it seems great for more casual usage and bears further watching.&lt;/p&gt;
&lt;h2 id=&#34;web-applications&#34;&gt;Web Applications&lt;/h2&gt;
&lt;p&gt;This group includes LucidChart, Draw.io, Creately and SmartDraw. Like the desktop category, significant work has been done here and there are new and exciting options.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/2021-01-18_lucidchart.png#floatsmallright&#34; alt=&#34;Lucidchart&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;lucidcharthttpslucidchartcom&#34;&gt;&lt;a href=&#34;https://lucidchart.com&#34;&gt;Lucidchart&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Lucidchart is a web service, using HTML5 and Javascript.  Although it&amp;rsquo;s not technically written for Linux, it works well with most browsers.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve had very good success with Lucidchart and I think it is on-par or better than Visio.  It can import and export Visio files and stencils and can work with a variety of formats.  It has superior features for annotation and you can easily create hyperlinks.  There are a ton of stencils and templates.  Lucidchart sends out an email each month that walks through example uses - I&amp;rsquo;ve picked up a lot of ideas from reviewing these emails.&lt;/p&gt;
&lt;p&gt;You can use it for personal use for free.  The individual plan includes a gigabyte of storage, includes tags and grouping, and unlimited objects.  There are also team plans with more storage and a few more features.  Lucidchart is a little cheaper than buying Visio and upgrading it every few years if you subscribe to an individual plan.&lt;/p&gt;
&lt;p&gt;After a year of using it, I have come to appreciate Lucidchart &lt;em&gt;more&lt;/em&gt; than Visio.  I&amp;rsquo;ve even come to enjoy that it&amp;rsquo;s online, because this makes it easy to access my diagrams wherever I am.  I particularly like the database/flat-file import option and find the annotation tools more flexible than Visio.  The website is responsive, even over moderate links.&lt;/p&gt;
&lt;p&gt;The con here is that you have to be online and it&amp;rsquo;s running in a browser, but ubiquitous access can also be a plus.  Lucidchart has a free option, but an individual account is $9.95/mo or $108 per year.&lt;/p&gt;
&lt;h3 id=&#34;drawiohttpsappdiagramsnet&#34;&gt;&lt;a href=&#34;https://app.diagrams.net&#34;&gt;Draw.io&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Draw.io, like Lucidchart, is a webapp.  It was another surprise in this recap.  Since the last time I tested it, they&amp;rsquo;ve improved the Visio support so that it&amp;rsquo;s now possible to import and export!  It&amp;rsquo;s a little rough because connections don&amp;rsquo;t flow smoothly and the layout is not precise, but it&amp;rsquo;s close and a very valuable addition.&lt;/p&gt;
&lt;p&gt;Draw.io is responsive online and it supports real-tiome collaboration.  You can save your work to a cloud provider or you can download it locally.  The Visio support is a work in progress, so you can&amp;rsquo;t import stencils, but I could imagine working around that by importing a page with all my objects on it.  The built-in stencils are horrible.&lt;/p&gt;
&lt;p&gt;Draw.io allows hyperlinking to objects and annotation is easy to add and format.  On the whole, it&amp;rsquo;s a rougher but similar experience to Lucidchart.&lt;/p&gt;
&lt;p&gt;If you do occassional diagrams and don&amp;rsquo;t want to spend money, Draw.io is a very solid choice.  Be prepared to do a little extra work, but it is sufficient.&lt;/p&gt;
&lt;h3 id=&#34;createlycreatelycom-and-smartdrawsmartdrawcom&#34;&gt;&lt;a href=&#34;creately.com&#34;&gt;Creately&lt;/a&gt; and &lt;a href=&#34;smartdraw.com&#34;&gt;Smartdraw&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Creately and SmartDraw are web SaaS packages.  Both have free trail accounts available.  Smartdraw personal accounts run $9.95 and Creately is $4.95 per month.  Creately seems more limited in file formats, but interestingly has a desktop version available for Windows, Mac, and Linux.  SmartDraw has the ability to import and export to major formats, including Visio.  Both include stencil sets that are comprehensive and SmartDraw has a facility to import Visio stencils.&lt;/p&gt;
&lt;p&gt;I tested Creately online and it&amp;rsquo;s quite good.  The connectors worked really well and flowed in a visually attractive way.  There was a full set of built in stencils, but I didn&amp;rsquo;t find any import features.  The lack of Visio import and export is a big deal.  I&amp;rsquo;m curious if that is resolved in the paid or desktop versions, but I was unable to verify that from the website.&lt;/p&gt;
&lt;p&gt;I used SmartDraw for some sample diagrams.  It seems well-built and easy to use, but I had trouble getting the connectors to work.  It supports hyperlinking to objects and annotation was easy, but less flexible than Lucidchart.&lt;/p&gt;
&lt;p&gt;My impression of SmartDraw was that it was responsive and fully featured, and I&amp;rsquo;m open to using it more.  It felt a little less capable than Lucidchart, but that may just be that I&amp;rsquo;m much more familiar with Lucidchart.  Worth checking out.&lt;/p&gt;
&lt;p&gt;As for Creately, I was also impressed and some features seemed more developed than SmartDraw, but the lack of import/export features would limit my use.&lt;/p&gt;
&lt;h2 id=&#34;conclusion---lucidchart&#34;&gt;Conclusion - Lucidchart&lt;/h2&gt;
&lt;p&gt;If you are producing diagrams as part of your job, I would opt for Lucidchart.  It seems to be the most mature option and it uses being a SaaS product to it&amp;rsquo;s advantage to make this information available across platforms and for collaboration within a team.  It started as a Visio clone, but it&amp;rsquo;s mature enough to start forming an identity of it&amp;rsquo;s own and I prefer it.  On Linux, this is an obvious option.&lt;/p&gt;
&lt;p&gt;If you need to create diagrams, but you don&amp;rsquo;t need to share them (except as PNGs or such) then consider Dia.  This is especially true if you want to use FOSS or want to use a local application.  There are a lot of honorable mentions here - SmartDraw and Creately are at an analogous stage, Draw.io and yEd are free.&lt;/p&gt;
&lt;p&gt;All told I&amp;rsquo;m very encouraged by my findings.  This has gone from a sparse set of options that involved compromise to a rich group of choices that are starting to differentiate themselves.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSH Crypto</title>
      <link>https://www.nextpertise.net/posts/201229_ssh-crypto/</link>
      <pubDate>Tue, 29 Dec 2020 13:01:35 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/201229_ssh-crypto/</guid>
      <description>&lt;h1 id=&#34;cleaning-up-crypto&#34;&gt;Cleaning up Crypto&lt;/h1&gt;
&lt;p&gt;A previous article - &lt;a href=&#34;https://www.nextpertise.net/ssh-admin&#34;&gt;SSH Admin&lt;/a&gt; - went through understanding who was logging into a Linux server using SSH or SFTP.  To continue that thought, let&amp;rsquo;s suppose that we are required to make sure that only cypher suites recommended in the CIS benchmarks are in use on a server.  Before we disable old options, we need to check and make sure that no one is using them!&lt;/p&gt;
&lt;h2 id=&#34;understanding-local-crypto&#34;&gt;Understanding local crypto&lt;/h2&gt;
&lt;p&gt;From a client, we can see which cipher elements are supported.  Each of these commands outputs a range of protocols.  When connecting to a server, the client transmits protocols that it supports and the server reciprocates.  They then agree to use the first option from the client&amp;rsquo;s list that is supported on the server (or the connection fails).  The table below lists commands used to see the protocols supported on a client.  The examples were chosen because they were well known and establish context, and not as a recommendation.&lt;/p&gt;




     
    
    
     







&lt;table class=&#34;table table-responsive table-hover&#34;&gt;
&lt;caption&gt;Table: SSH options&lt;/caption&gt;
&lt;thead class=&#34;table-info&#34;&gt;
&lt;tr&gt;
&lt;th&gt;Element&lt;/th&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Example options&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Cipher&lt;/td&gt;
&lt;td&gt;ssh -Q cipher&lt;/td&gt;
&lt;td&gt;3des-cbc, aes256-cbc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MAC&lt;/td&gt;
&lt;td&gt;ssh -Q mac&lt;/td&gt;
&lt;td&gt;hmac-md5, hmac-sh2-256&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Key&lt;/td&gt;
&lt;td&gt;ssh -Q key&lt;/td&gt;
&lt;td&gt;ssh-rsa, ecdsa-sha2-nistp256&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kex&lt;/td&gt;
&lt;td&gt;ssh -Q kex&lt;/td&gt;
&lt;td&gt;diffie-hellman-group1-sha1, curve25519-sha256&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Setting up an SSH connection goes through some basic phases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kex (key-exchange) is used to complete an asymmetrically encrypted initial key exchange.&lt;/li&gt;
&lt;li&gt;Keys are exchange.  The key list is types of keys supported.&lt;/li&gt;
&lt;li&gt;The body of the communication is encrypted symmetricly.&lt;/li&gt;
&lt;li&gt;MAC or &amp;ldquo;message authentication code&amp;rdquo; is a hash that verifies the integrity of transmissions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;understanding-remote-clients-crypto&#34;&gt;Understanding remote clients crypto&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s surprising that there isn&amp;rsquo;t a command to show which cipher suites are in use by particular clients.  To build a tool, I went into /etc/ssh/sshd_config and set the logging level to grab everything.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# Logging&lt;br&gt;
SyslogFacility AUTH&lt;br&gt;
LogLevel DEBUG3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This can then be reviewed using &lt;strong&gt;journalctl -u ssh&lt;/strong&gt; to display entries related to the sshd unit.  I noticed that the relevant lines were at DEBUG1 level and that each sequence completed with the &amp;ldquo;password accepted&amp;rdquo; line.  Based on this pattern, I wrote a utility in Python to create a report.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dec 28 15:56:44 pop-os sshd[701591]: debug1: kex: algorithm: curve25519-sha256 [preauth]&lt;br&gt;
Dec 28 15:56:44 pop-os sshd[701591]: debug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]&lt;br&gt;
Dec 28 15:56:44 pop-os sshd[701591]: debug1: kex: client-&amp;gt;server cipher: &lt;a href=&#34;mailto:chacha20-poly1305@openssh.com&#34;&gt;chacha20-poly1305@openssh.com&lt;/a&gt; MAC: &lt;!-- raw HTML omitted --&gt; compression: none [preauth]&lt;br&gt;
Dec 28 15:56:44 pop-os sshd[701591]: debug1: kex: server-&amp;gt;client cipher: &lt;a href=&#34;mailto:chacha20-poly1305@openssh.com&#34;&gt;chacha20-poly1305@openssh.com&lt;/a&gt; MAC: &lt;!-- raw HTML omitted --&gt; compression: none [preauth]&lt;br&gt;
Dec 28 15:56:46 pop-os sshd[701591]: debug1: PAM: password authentication accepted for pop&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/brentstewart/ssh-crypto&#34;&gt;&lt;strong&gt;ssh-crypto&lt;/strong&gt;&lt;/a&gt; is a Python3 program to read ssh debugging and identify who has logged in and what settings were used.  It expects a file name, which is a text file that contains ssh logging output.  First make sure that sshd is logging at least at DEBUG1.  Restart the SSH service for the new logging setting to take effect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo service sshd restart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Keep in mind that the crypto fields won&amp;rsquo;t be populated for logins before the loggin change takes effect.  To create the text file for analysis, export from journalctl.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;journalctl -u ssh &amp;gt; ~/ssh.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Again, __ssh-crypto assumes that the system has Python3, uses Systemd, has debugging setup.&lt;/p&gt;
&lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt; pop  pop-os  ~  $  ~/git/ssh-crypto/ssh-crypto.py ~/ssh.txt
-------------------------------------------------------------------------------------------------------------------
| # |       User        |       IP       |     Algorithm      |        Host        |            Cipher            |
-------------------------------------------------------------------------------------------------------------------
|  0|pop                |192.168.25.2    |undefined           |undefined           |undefined                     |
|  1|pop                |192.168.25.72   |undefined           |undefined           |undefined                     |
|  2|pop                |192.168.25.81   |undefined           |undefined           |undefined                     |
|  3|pop                |192.168.25.81   |undefined           |undefined           |undefined                     |
|  4|pop                |192.168.25.81   |undefined           |undefined           |undefined                     |
|  5|pop                |192.168.25.81   |curve25519-sha256   |ecdsa-sha2-nistp256 |chacha20-poly1305@openssh.com |
|  6|pop                |192.168.25.81   |curve25519-sha256   |ecdsa-sha2-nistp256 |chacha20-poly1305@openssh.com |
-------------------------------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;removing-weak-ciphers&#34;&gt;Removing Weak Ciphers&lt;/h2&gt;
&lt;p&gt;Per the CIS Ubuntu 20.04 Standard (5.2.12), FIPS compliant ciphers include aes256-ctr, aes192-ctr, aes128-ctr.  FIPS compliant MACs include hmac-sha2-256 and 512.  FIPS allows a pretty broad range of key exchange protocols, including ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521, diffie-hellman-group-exchange-sha256, diffie-hellman-group16-sha512, diffie-hellman-group18-sha512, and diffie-hellman-group14-sha256.
To limit the server to only accept these options, edit /etc/ssh/sshd_config.  Here are the ones I&amp;rsquo;ve chosen to support.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes256-ctr&lt;br&gt;
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256&lt;br&gt;
KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Using ssh-crypto will allow review of recent client connections and unused ciphers can be weeded out.  After communicating the change to users, specific recalcitrant users can be identified for follow-up with the utility before ultimately removing the old protocols.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSH Administrative Trivia</title>
      <link>https://www.nextpertise.net/posts/201223_ssh-admin/</link>
      <pubDate>Wed, 23 Dec 2020 18:47:30 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/201223_ssh-admin/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s consider an interesting case: we&amp;rsquo;d like to identify remote ssh users.  Remember that SFTP is a part of SSH, so these commands will also identify SSH users.  There are a variety of ways to do this and some are even fairly obviouis.&lt;/p&gt;
&lt;h2 id=&#34;who-or-w&#34;&gt;Who or w&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Who&lt;/strong&gt; is a utility to display logged in users.  The man page can walk you through the various switches, but the two I find most valuable are &lt;em&gt;-a&lt;/em&gt; to show all and &lt;em&gt;-H&lt;/em&gt; to show headings.  The &lt;em&gt;all&lt;/em&gt; option includes the time that the session has been active, how it&amp;rsquo;s attached, and where it&amp;rsquo;s coming from.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;who -aH
    NAME       LINE         TIME             IDLE          PID COMMENT  EXIT  
               system boot  2020-12-02 05:47  
               run-level &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;  2020-12-02 05:47  
    pop      ? :1           2020-12-02 08:08   ?          &lt;span style=&#34;color:#ae81ff&#34;&gt;3663&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;:1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
    pop      + pts/2        2020-12-23 18:14  old       &lt;span style=&#34;color:#ae81ff&#34;&gt;570072&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;192.168.1.72&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
    pop      + pts/6        2020-12-27 15:36 00:01      &lt;span style=&#34;color:#ae81ff&#34;&gt;665161&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;192.168.1.81&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first column - Name - is the local name that these users are logged in as.  In this example, I&amp;rsquo;m logged in as &amp;ldquo;brent&amp;rdquo; on 192.168.1.81 but my ssh session to this computer uses the username &amp;ldquo;pop&amp;rdquo;.  The LINE identifies connection - &lt;em&gt;pts&lt;/em&gt; stands for psuedo terminal slave, or a sub  process of &lt;em&gt;pty&lt;/em&gt; (psuedo-tty).  You may be more familiar with &lt;em&gt;tty&lt;/em&gt; connections - those are direct connections like a local terminal.  Notice that there&amp;rsquo;s a local connection and two remote connections in this example.&lt;/p&gt;
&lt;p&gt;If &lt;strong&gt;who&lt;/strong&gt; is too much typing for you, try &lt;strong&gt;w&lt;/strong&gt;.  It provides very similar output, no switches required&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;w
     16:22:45 up &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; days, 10:35,  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; users,  load average: 1.90, 1.70, 1.53  
    USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
    pop      :1       :1               02Dec20 ?xdm?  12days  0.00s /usr/libexec/gdm-x-session --run-sc
    pop      pts/2    192.168.1.72    Wed18    3days  0.09s  0.09s -bash
    pop      pts/6    192.168.1.81    15:36   46:35   0.02s  0.02s -bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also derive this information from &lt;strong&gt;ps&lt;/strong&gt;.  This command lists active processes and includes active ssh sessions.  Note that you can pipe to &lt;strong&gt;grep&lt;/strong&gt; to limit it to lines that include &amp;lsquo;pts&amp;rsquo; or &amp;lsquo;ssh&amp;rsquo;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ps  ax&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;last&#34;&gt;Last&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Last&lt;/strong&gt; looks through /var/log/wtmp and shows login activity.  You can specify a username to see when that user logged in and out.  Note that a psuedo-user named &lt;em&gt;reboot&lt;/em&gt; logs in when the system reboots, so &lt;strong&gt;last reboot&lt;/strong&gt; will show a list of all reboots.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;last
    pop      pts/6        192.168.1.81    Sun Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:36   still logged in  
    pop      pts/2        192.168.1.72    Wed Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; 18:14   still logged in  
    pop      pts/2        192.168.1.2     Wed Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; 18:11 - 18:11  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;00:00&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
    pop      :1           :1               Wed Dec  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 08:08   still logged in  
    reboot   system boot  5.8.0-7630-gener Wed Dec  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 05:47   still running  
    pop      :1           :1               Wed Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; 18:02 - down  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;6+11:44&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
    reboot   system boot  5.8.0-7630-gener Wed Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; 17:56 - 05:46 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;6+11:50&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
    pop      :1           :1               Mon Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; 08:31 - down  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2+09:24&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
    reboot   system boot  5.8.0-7630-gener Mon Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; 08:29 - 17:56 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2+09:26&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
    pop      :1           :1               Sat Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:40 - down  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8+14:47&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
    reboot   system boot  5.8.0-7625-gener Sat Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:39 - 08:28 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8+14:48&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Last&lt;/strong&gt; shows similar information to &lt;strong&gt;who&lt;/strong&gt;, but shows activity over time instead of just current activity.  On a busy server, &lt;strong&gt;w&lt;/strong&gt; might do a better job of concisely showing current users.  A related utility is &lt;strong&gt;lastb&lt;/strong&gt; which shows &lt;em&gt;bad&lt;/em&gt; login attempts.  In the previous example I mentioned that my account is &amp;ldquo;brent&amp;rdquo; on 192.168.1.81.  I forgot that there was a different user on this machine and you can see here the failed login attempts.  Notice that this command requires elevated priviledges.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo lastb  
brent    ssh:notty    192.168.1.81    Sun Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:35 - 15:35  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;00:00&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
brent    ssh:notty    192.168.1.81    Sun Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:35 - 15:35  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;00:00&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
brent    ssh:notty    192.168.1.81    Sun Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:35 - 15:35  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;00:00&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Paranoid users may want to review failed logins every time they open a terminal.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sudo lastb&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /home/user/.bashrc  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A similar command is &lt;strong&gt;journalctl -u ssh&lt;/strong&gt;.  This shows the systemd journal, so obviously it&amp;rsquo;s only of use on systemd-based systems.  Modern Fedora/RHEL and Ubuntu are on that list.  The switch &lt;em&gt;-u&lt;/em&gt; limits output to certain units, in this case &lt;em&gt;ssh&lt;/em&gt;.  Note that some systems will require the unit to be listed as &amp;ldquo;sshd&amp;rdquo;.   Notice that this shows socket information and failed attempts and is organized chronologically.  This might be useful if you&amp;rsquo;re trying to match events in troubleshooting.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;journalctl -u ssh  
-- Logs begin at Sat 2020-11-14 17:39:49 EST, end at Sun 2020-12-27 18:10:11 EST. --  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; 18:11:37 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;569656&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: Accepted password &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; pop from 192.168.1.2 port &lt;span style=&#34;color:#ae81ff&#34;&gt;52778&lt;/span&gt; ssh2  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; 18:11:37 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;569656&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: pam_unix&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sshd:session&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: session opened &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; user pop by &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; 18:14:55 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;570072&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: Accepted password &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; pop from 192.168.25.72 port &lt;span style=&#34;color:#ae81ff&#34;&gt;23639&lt;/span&gt; ssh2  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; 18:14:55 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;570072&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: pam_unix&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sshd:session&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: session opened &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; user pop by &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:35:39 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;665153&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: Invalid user brent from 192.168.25.81 port &lt;span style=&#34;color:#ae81ff&#34;&gt;54850&lt;/span&gt;  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:35:41 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;665153&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: pam_unix&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sshd:auth&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: check pass; user unknown  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:35:41 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;665153&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: pam_unix&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sshd:auth&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: authentication failure; logname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; eu&amp;gt;  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:35:43 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;665153&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: Failed password &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; invalid user brent from 192.168.25.81 port&amp;gt;  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:35:48 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;665153&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: pam_unix&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sshd:auth&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: check pass; user unknown  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:35:51 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;665153&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: Failed password &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; invalid user brent from 192.168.25.81 port&amp;gt;  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:35:57 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;665153&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: Connection closed by invalid user brent 192.168.25.81 port 548&amp;gt;  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:35:57 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;665153&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: PAM &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; more authentication failure; logname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; euid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; tty&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;s&amp;gt;  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:36:07 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;665161&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: Accepted password &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; pop from 192.168.25.81 port &lt;span style=&#34;color:#ae81ff&#34;&gt;54862&lt;/span&gt; ssh2  
Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:36:07 pop-os sshd&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;665161&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: pam_unix&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sshd:session&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: session opened &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; user pop by &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;network-commands&#34;&gt;Network commands&lt;/h2&gt;
&lt;p&gt;Finally, there are also a few ways to look at this from a network perspective.  You can show socket statistics with _&lt;em&gt;ss&lt;/em&gt;.  This can be interesting for associating unknown traffic to a process id.  The following example is truncated to give a sense of the output, but the full dump is long.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ss | more
    Netid State Recv-Q  Send-Q  Local Address:Port         Peer Address:Port    Process
    u_seq ESTAB      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   @00031 &lt;span style=&#34;color:#ae81ff&#34;&gt;4813785&lt;/span&gt;                 *                &lt;span style=&#34;color:#ae81ff&#34;&gt;4813786&lt;/span&gt;        
    u_seq ESTAB      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   @00041 &lt;span style=&#34;color:#ae81ff&#34;&gt;8426824&lt;/span&gt;                 *                &lt;span style=&#34;color:#ae81ff&#34;&gt;8426825&lt;/span&gt;        
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Netstat&lt;/strong&gt; provides another network perspective, this time organized as conversations.  The tabular form of netstat is a little easier to digest.  The version shown uses switches for numeric output, processes info, and all.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;netstat -npa  
&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Not all processes could be identified, non-owned process info  
 will not be shown, you would have to be root to see it all.&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
Active Internet connections &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;servers and established&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name      
tcp        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 192.168.25.2:22         192.168.25.81:54862     ESTABLISHED -  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;These networking commands give you a different view into what&amp;rsquo;s happening on your server, but for our original purpose they&amp;rsquo;re abstract.  I&amp;rsquo;d recommend trying all these techniques to gain wider familiarity with your server, but I find the most common commands I use are &lt;strong&gt;w&lt;/strong&gt;, &lt;strong&gt;lastb&lt;/strong&gt;, and &lt;strong&gt;journalctl -u ssh&lt;/strong&gt; (depending on what I&amp;rsquo;m trying to troubleshoot).&lt;/p&gt;
&lt;p&gt;Future articles will continue to review some of the administrative issues with maintaining an SSH/SFTP server, such as understanding encryption in use and limiting it to &amp;ldquo;modern&amp;rdquo; protocols.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Love Letter to Flameshot</title>
      <link>https://www.nextpertise.net/posts/201210_flameshot/</link>
      <pubDate>Thu, 10 Dec 2020 14:28:39 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/201210_flameshot/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://flameshot.org/media/animatedUsage.gif#floatright&#34; alt=&#34;Flameshot&#34;&gt; My friend Jared always extols the Unix philosophy that programs should &amp;ldquo;do one thing and do it well&amp;rdquo;.  One program that fits that description is &lt;em&gt;flameshot&lt;/em&gt;.  Flameshot makes great screenshots and allows you to easily annotate them.&lt;/p&gt;
&lt;p&gt;A few years ago I was put in a position where I had to produce monthly reports that included screenshots from our tools.  The default gnome-screenshot application is difficult to work with.  It has to be re-invoked for each capture and it doesn&amp;rsquo;t allow you to easily adjust the parameters or annotate the picture.  As a result, I&amp;rsquo;d take a bunch of screenshots and each one involved a try or two to capture the right section, then opening in Gimp to edit.  It took &lt;em&gt;forever&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Flameshot made this an easy process.  Since then, I very commonly want to take a screenshot for this blog or for an email.  Usually I&amp;rsquo;m trying to demonstrate a function or show what a screen looks like.  This program allows me to quickly grab the section of the screen I need, highlight, draw, and even obfuscate sensitive portions (like credentials).&lt;/p&gt;
&lt;p&gt;Flameshot can be downloaded from Github, but most distros have it in their archives.  It&amp;rsquo;s available as a flatpak, snap, AppImage, rpm, or deb.  It&amp;rsquo;s even available for Windows.  On Ubuntu, it can be pulled down using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install flameshot  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For snap:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo install snap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For flatpak:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;flatpak install https://github.com/flameshot-org/flameshot/releases/download/v0.8.0/org.flameshot.flameshot_0.8.0_x86_64.flatpak  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or grab the AppImage version from the website.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s a lot of gnashing of teeth about which of these formats is better.  Personally, grabbing the DEB means that I update it with the rest of my applications and I haven&amp;rsquo;t had issues with DEB.  I&amp;rsquo;ve used all three of the portable formats and found them to be fungible.  Appimage is both the most portable and the easiest to forget updates with.&lt;/p&gt;
&lt;h2 id=&#34;invoking-flameshot&#34;&gt;Invoking Flameshot&lt;/h2&gt;
&lt;p&gt;Flameshot can be launched from the menu.  It will also install an icon on the bar - on Gnome you need the &lt;a href=&#34;https://extensions.gnome.org/extension/1031/topicons/&#34;&gt;TopIcons&lt;/a&gt; extension to see it.&lt;br&gt;
It also works well to map a keybinding to it, such as PrintScreen.  Link the keypress to the command: &lt;strong&gt;flameshot gui&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;using-flameshot&#34;&gt;Using Flameshot&lt;/h2&gt;
&lt;p&gt;Once you start Flameshot, the screen immediately dims and you are prompted to drag a box around the area of the screen you want to snip.  Once the box is defined, a series of circular option buttons surround the selection to allow editing.&lt;/p&gt;
&lt;p&gt;The animated graphic above does a good job showing this action.  Some of the features I most commonly use are arrows, lines and boxes,and the &amp;ldquo;smear&amp;rdquo; tool to hide sensative parts.  Once done, click the disk icon and save your file.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;As I said, Flameshot takes great screen captures.  Since I titled this a &amp;ldquo;love letter&amp;rdquo;, it&amp;rsquo;s obviously a program that I find valuable.  It makes it easy to annotate them.  It&amp;rsquo;s easy to adjust the capture and it&amp;rsquo;s easy to re-invoke if needed.&lt;/p&gt;
&lt;p&gt;Flameshot has become a part of my standard install - frankly I&amp;rsquo;m not clear why it&amp;rsquo;s not included standard with most distributions.  It does one thing really well.  I encourage you to give it a try!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SMAG (command line graphing)</title>
      <link>https://www.nextpertise.net/posts/201201_smag/</link>
      <pubDate>Tue, 01 Dec 2020 20:35:56 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/201201_smag/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a neat tool to try out - &amp;ldquo;Show Me a Graph&amp;rdquo; or SMAG.  SMAG is available on Github and is a command line tool to produce live character-based graphs on the command line.&lt;/p&gt;
&lt;p&gt;There are all kinds of situations with modern cloud environments where we are working via SSH and a desktop and graphical tools aren&amp;rsquo;t available.  We still need to troubleshoot and a quick graph is a great way to get a sense of the situation.  Smag takes any command that produces a numeric output and turns that into a graph.&lt;/p&gt;
&lt;p&gt;To use smag, either clone the repository or grab the latest release from Github.  The example from the site monitors the number of processes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./smag &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ps aux | grep ssh | wc -l&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ps aux | grep bash | wc -l&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The output needs to produce a number.  I accomplished that with other commands by using &lt;em&gt;grep&lt;/em&gt; to isolate a line in the output and &lt;em&gt;cut&lt;/em&gt; to pick out the number that I want.  I&amp;rsquo;m sure there are a lot of different ways to accomplish a similar result. Here are some sample scenarios that I tried.&lt;/p&gt;
&lt;h1 id=&#34;graph-ping-response-times&#34;&gt;Graph ping response times&lt;/h1&gt;
&lt;p&gt;This example pings Google DNS and graphs the round trip time.  I need ping to exit and return a number, so I set the count to one.  That command is then looped thorugh to create the graph.  Awk is pulling the seventh field - I think I could skip this and cut from the raw row, but this works.
&lt;img src=&#34;https://www.nextpertise.net/smag-ping.png#floatcenter&#34; alt=&#34;Ping&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./smag &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ping -c 1 -R 8.8.8.8 | grep time= | awk &amp;#39;{print \$7}&amp;#39; | cut -c 6-7&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;graph-cpu-temperatures&#34;&gt;Graph CPU temperatures&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/smag-sensor.png#floatright&#34; alt=&#34;Temp&#34;&gt;&lt;/p&gt;
&lt;p&gt;For this, you&amp;rsquo;ll need to grab some packages to monitor system parameters.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install lm-sensors  
sudo apt install hddtemp  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then monitor CPU temperature using the following command.  Note that sensors returns a lot of information, such as temperature per core.  I&amp;rsquo;m arbitrarily grabbing the summary.  You could certainly adjust this to pull the the value that&amp;rsquo;s most relevant to you.  Notice that I have enclosed quotes, so I use the single quote for grep and double quotes for smag.  The two types of quotes do the same thing, but we need to help bash recognize that we have one set inside another.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./smag &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sensors | grep &amp;#39;id 0:&amp;#39; | cut -c 17-20&amp;#34;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;graph-ethernet-packets-received&#34;&gt;Graph Ethernet packets received&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/smag-eth.png#floatright&#34; alt=&#34;RX Packets&#34;&gt;
You can graph just about anything, but here&amp;rsquo;s a third example to demonstrate the case.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./smag &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ifconfig enp0s31f6 | grep &amp;#39;RX packets&amp;#39;|cut -c 20-26&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SMAG is a valuable tool, but trying to remember the library of commands to draw out the values might be an issue over time.  If you have some particular values that you need to access consistently, this might be a good place for an &lt;em&gt;alias&lt;/em&gt;.  Alias allows us to substitute a command for another (usually more complicated) one.  Let&amp;rsquo;s say I want to call up this Ethernet graph pretty often.  I can make this easier to remember:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;alias smag-eth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./smag \&amp;#34;ifconfig enp0s31f6 | grep &amp;#39;RX packets&amp;#39;|cut -c 20-26\&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we have enclosed quotes inside enclosed quotes!  Let&amp;rsquo;s parse this out.  The inner-most quotes are used by grep.  I&amp;rsquo;ve used single quotes to distinguish this from the outer quotes.  The next layer of quotes are used by SMAG, but they are inside another layer of quotes.  I&amp;rsquo;m using the backslash to tell alias to treat these quotes as literal characters, which allows them to be enclosed.  Finally, there are double quotes around the aliased command.  Now I can call up this graph by just typing:  &lt;strong&gt;smag-eth&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Thumbs-up.  If this is a problem you need to solve, it&amp;rsquo;s a neat tool to have in your toolbag.  If I had a particular need for this, my recommendation would be to make Smag and a common alias part of my standard build.  A little prep work like that will make things easier if stuff hits the fan.&lt;/p&gt;
&lt;p&gt;I want to mention that I had a question and posted an issue on Github.  &amp;ldquo;Aantn&amp;rdquo;, the developer of Smag, reached out to me and pointed out the error in the command I was using.  I appreciate the work they&amp;rsquo;ve put in to Smag and the impetus to share it with the world, and I especially appreciate the time they took with me.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pop! OS</title>
      <link>https://www.nextpertise.net/posts/201126_pop-os/</link>
      <pubDate>Thu, 26 Nov 2020 10:17:03 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/201126_pop-os/</guid>
      <description>&lt;p&gt;I recently wrote about my experiences with &lt;a href=&#34;https://www.nextpertise.net/ubuntu2010&#34;&gt;Ubuntu 20.10&lt;/a&gt;.  In that article, I mentioned that I previously found Gnome laggy and the app picker to be annoyingly unsorted.  That article got into Gnome 3.38, which seems to answer my issues by being perkier and providing a way to organize applications.  I also mentioend how much I appreciated Material Design, a tiling extension for Gnome.  That setup - Ubuntu 20.10 with Gnome 3.38 and Material Design - has worked really well on my laptop and a month later I remain enthusiastic about the way it organizes my work.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pop.system76.com/_nuxt/img/623f266-700.png#floatright&#34; alt=&#34;Pop OS&#34;&gt;
But . . . it doesn&amp;rsquo;t work so well on my desktop setup.  The desktop is an i7 with 64GB of memory (perfect for GNS3!) and a 2K and 4K display.  The Material Design extension didn&amp;rsquo;t adapt well to the dual displays.  Gnome was still great, so I started hunting for a different tiling extension but the others didn&amp;rsquo;t install on 3.38.  I had tried &lt;em&gt;Pop! OS&lt;/em&gt; six months ago and really liked where System 76 was headed with auto-tiling, but had been frustrated by Gnome.  I decided to give the distribution another chance.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pop! OS&lt;/em&gt; is an opinionated re-distribution of stock (Gnome) Ubuntu.  System 76 is a long time manufacturer of Linux computers.  They have a great reputation in the community and have been a big promoter and sponsor within the community.  A couple years ago, they decided to customize Ubuntu to optimize the experience for their hardware.  They labeled the result &lt;em&gt;Pop! OS&lt;/em&gt; and made it available for anyone to use.  &lt;em&gt;Pop! OS&lt;/em&gt; 20.10 came out shortly after Ubuntu 20.10 in seperate releases for computers with NVidia cards and those with AMD.&lt;/p&gt;
&lt;p&gt;The most obvious differnce between stock Ubuntu and &lt;em&gt;Pop! OS&lt;/em&gt; is the Gnome setup and skin.  Ubuntu has a very specific user experience and they have their own take on Gnome.  This isn&amp;rsquo;t a criticism.  System 76 has built a different experience, with a more &amp;ldquo;standard&amp;rdquo; Gnome setup but with their Auto-tiling extension.  There is also a relentlessly upbeat feel to the skinning and backgrounds.  It&amp;rsquo;s a peppiness that belies how darn useful the OS is.  Ubuntu is also moving very heavily toward snaps and &lt;em&gt;Pop! OS&lt;/em&gt; supports snaps but is built more along &lt;strong&gt;apt&lt;/strong&gt; lines.&lt;/p&gt;
&lt;p&gt;My experience is that 20.10 improves on 19.10, as one would expect.  The lagginess I saw before is now gone, which may be attributable to updated Gnome desktop.  All the things that I loved about Auto-Tiling are still present, they just work better.  On big displays, I really don&amp;rsquo;t see why you wouldn&amp;rsquo;t want this experience.  Opening a new window automatically divides the display either vertically or horizontally.  Gnome supports multiple workspaces, and I have been setting up desktops for specific workflows (like one for blogging that I&amp;rsquo;m using now).  I don&amp;rsquo;t like the workspace switcher that ships with &lt;em&gt;Pop! OS&lt;/em&gt;, so I installed Workspace Matrix.  I also added &lt;em&gt;Dash to Dock&lt;/em&gt; to give a dock and put the application button in a better location.&lt;/p&gt;
&lt;p&gt;I first experimented with Tiling using i3 and later Regolith.  Regolith in particular has a lot going for it and really opened my eyes to the possibilities, but I found both to be a lot of trouble to setup and work inside.  i3 is very keyboard heavy and the folks who enjoy it the most are very keyboard oriented.  &lt;em&gt;Pop! OS&lt;/em&gt; provides a similar experience, but it&amp;rsquo;s less laborious in a number of ways.  Tiling happens automatically, but if you don&amp;rsquo;t like the arrangement you can drag windows around to adjust the tiling.  It&amp;rsquo;s easier to setup exceptions (pop-up windows, like my password database, that should float and not re-tile the screen).  Keyboard shortcuts are supported, if you are oriented that way, but I rarely have used them in my testing.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pop! OS&lt;/em&gt; also has a conventional Gnome app picker.  Here I have a quibble - I would still prefer a heirarchical menu.  If anyone can suggest a good &lt;em&gt;Dash to Dock&lt;/em&gt; or Gnome extension in the comments, I&amp;rsquo;d appreciate it!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/Peek_Pop!_OS.webp#floatright&#34; alt=&#34;Brent playing with Tiling&#34;&gt;
The animated GIF here is me playing around.  I have two displays - a horizontal 4k on the right and a vertical 2k on the left.  There&amp;rsquo;s a gray area above the 4k because of the way the resolutions match up.  You can see Tilix and GNS3 open on the 4k, and Wireshark and an additional Tilix window open and automatically Tile.  Then I open the application picker on and fonts on the other display.  You can see &lt;em&gt;Dash to Dock&lt;/em&gt; and get a sense of how the system works.  You can also see that Gnome 3.38 now supports grouping applications, like Android, which I find a big improvement.&lt;/p&gt;
&lt;p&gt;There are other differences besides tiling between &lt;em&gt;Pop! OS&lt;/em&gt; and Ubuntu.  There are different application &amp;ldquo;stores&amp;rdquo; and update interfaces, but both accomplish the same things in similar ways.  There are different packaged apps, but you can install anything you need from PPA or snap on either system so this doesn&amp;rsquo;t strike me as worth cataloging.  I used my standard Ubuntu post-install script when I setup &lt;em&gt;Pop! OS&lt;/em&gt; and everything worked.&lt;/p&gt;
&lt;p&gt;So, why not just install the &lt;em&gt;Pop! OS&lt;/em&gt; extension on Ubuntu?  Well, it can be done.  System 76 publishes it to their Github.  They&amp;rsquo;ve packaged it for Fedora, but not yet for Ubuntu, so it would have to be built.  That&amp;rsquo;s not a mountain to climb, but I was ready for a clean install anyway and opted for the full &lt;em&gt;Pop! OS&lt;/em&gt; experience.&lt;/p&gt;
&lt;p&gt;I can&amp;rsquo;t say how much I appreciate what System 76 has done.  They&amp;rsquo;ve created a slightly different take on Ubuntu that looks great on their hardware and they&amp;rsquo;ve made all the parts - from a full OS install to the &amp;ldquo;secret sauce&amp;rdquo; extension easily accessible to the community.  I find &lt;em&gt;Pop! OS&lt;/em&gt; enjoyable and useful and plan on keeping it installed on this machine.&lt;/p&gt;
&lt;p&gt;My laptop is running fine using Ubuntu 20.10 with the Material Design extension, and there&amp;rsquo;s not enough of a difference to make me re-install it.   Besides, I&amp;rsquo;d like to see where each tiler goes.  There&amp;rsquo;s a lot in Material Design to recommend it and it&amp;rsquo;s still early days for that extension.  Frankly, &lt;em&gt;Pop! OS&lt;/em&gt; wasn&amp;rsquo;t quite baked at that stage either.  I intend to keep &lt;em&gt;Pop! OS&lt;/em&gt; on the Desktop. The current &lt;em&gt;Pop! OS&lt;/em&gt; 20.10 feels sharp, responsive, and really well done and I look forward to seeing where System 76 takes this idea next.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tilix</title>
      <link>https://www.nextpertise.net/posts/201125_tilix/</link>
      <pubDate>Wed, 25 Nov 2020 07:50:59 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/201125_tilix/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://gnunn1.github.io/tilix-web/src/images/gallery/tilix-screenshot-3.png#floatright&#34; alt=&#34;Tilix&#34;&gt; Tilix is a terminal application for Linux that I recommend as a replacement for the stock program (like gnome-terminal) shipped with your distribution.  This article will walk through some of the reasons I like Tilix and will show you how to use it with GNS3.&lt;/p&gt;
&lt;p&gt;The basic pitch of Tilix is that it is a tiling terminal.  New terminals exist in sessions.  Within a session, terminals can split the window horizontally or veritcally.&lt;/p&gt;
&lt;p&gt;Think of a session like a desktop.  You could create a poor-man&amp;rsquo;s IDE by grouping three sessions on a desktop, with one showing a directory, a second running &lt;strong&gt;nano&lt;/strong&gt;, and the third ready to receive a command.  Another session could be used for networking, with terminals open to a firewall and switch.  You manage sessions with the drop-down menu on the right.&lt;/p&gt;
&lt;p&gt;Sessions can be divided up into terminals.  New terminals split the screen.  You create a new terminal using the &amp;ldquo;horizontal split&amp;rdquo; button or the &amp;ldquo;vertical split&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;There are a lot of additional features, such as a search function (particularly useful when scrolling through thousands of lines of syslog output), but the tiling features are what makes this program so darn useful to me.  As I have moved to larger displays (I typically work on a 40&amp;quot; 4K display these days), managing windows is more of a chore and I prefer things that help organize the desktop.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/b0862287feb56d682f22cfa67bc43f5cfa2fd5b59fc291533be741015c6766af/68747470733a2f2f7261772e6769746875622e636f6d2f622d7279616e2f706f7765726c696e652d7368656c6c2f6d61737465722f626173682d706f7765726c696e652d73637265656e73686f742e706e67#floatleft&#34; alt=&#34;Powerline&#34;&gt;Tilix supports any customization that a normal terminal application allows.  I&amp;rsquo;ll dig a little into this aspect in a seperate article, but I&amp;rsquo;ve included links for some of the ways I make my terminal easy to read.  I use the &lt;strong&gt;powerline-shell&lt;/strong&gt; prompt.  I use either JetBrains Mono font or Fira Mono, which both support programming ligatures.  There&amp;rsquo;s a variety of other monospace fonts with ligature support at the Powerline Git Repo.&lt;/p&gt;
&lt;h2 id=&#34;using-tilix-with-gns3&#34;&gt;Using Tilix with GNS3&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/Tilix_in_GNS3.png#floatright&#34; alt=&#34;Tilix with GNS3&#34;&gt;
GNS3 allows you to set the terminal application it uses under &lt;em&gt;edit &amp;gt; preferences&lt;/em&gt;.  The drop-down for console sets GNS3 to work with some of the most common applications, such as &lt;em&gt;gnome-terminal&lt;/em&gt; or &lt;em&gt;PuTTY&lt;/em&gt;.  Tilix isn&amp;rsquo;t defined, but it works &lt;em&gt;really&lt;/em&gt; well in this scenario because GNS3 users typically have several terminal sessions on-going and need to easily move between them.&lt;/p&gt;
&lt;p&gt;To configure GNS3 to work with Tilix, choose &amp;ldquo;custom&amp;rdquo; and &lt;strong&gt;edit&lt;/strong&gt;.  Here&amp;rsquo;s the command that is needed:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;tilix -a session-add-right -t &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;telnet %h %p&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This setup uses Tilix and opens new terminals to the right of the existing one.  Other options set the title and tell Tilix how to connect to the GNS3 device.  The variables are defined in GNS3 and are visible in the &lt;strong&gt;edit&lt;/strong&gt; screen - %d is the tile, %h is the IP and %p is the port. Tilix has a man page if you want to investigate other options.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kali Linux 2020.4</title>
      <link>https://www.nextpertise.net/posts/201120_kali_linux_2020_4/</link>
      <pubDate>Fri, 20 Nov 2020 10:30:00 +0000</pubDate>
      
      <guid>https://www.nextpertise.net/posts/201120_kali_linux_2020_4/</guid>
      <description>&lt;p&gt;My favourite Operating System (Kali Linux) has a new release: 2020.4.&lt;/p&gt;
&lt;p&gt;The changes in this version include, but not limited to: ZSH is now Kali’s new default shell on desktop images and cloud, Bash remains the default shell for other platforms (ARM, containers, NetHunter, WSL) for the time being. Users can, of course, use that which they prefer, but be aware that, visually, Bash has been made to look more like ZSH.
Upon logging into a Kali terminal or console, users may be presented with a &lt;strong&gt;message from Kali developers&lt;/strong&gt; that will point them to more information about that specific installation, in case they need it for troubleshooting&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/kali.PNG#center&#34; alt=&#34;KL&#34;&gt;&lt;/p&gt;
&lt;p&gt;The most interesting part is that, Kali Linux 2020.4 now comes with a number of new tools to play with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Metasploit Framework v6 (a tool for developing and executing exploits against remote target machines)&lt;/li&gt;
&lt;li&gt;CertGraph (a tool to crawl the graph of certificate Alternate Names)&lt;/li&gt;
&lt;li&gt;Apple bleee (a tool for getting info about nearby iPhones – device name, OS version, phone number, etc. – by sniffing Bluetooth traffic)&lt;/li&gt;
&lt;li&gt;dnscat2 (a tool for creating an encrypted C&amp;amp;C channel over DNS)&lt;/li&gt;
&lt;li&gt;FinalRecon (an automatic web reconnaissance tool)&lt;/li&gt;
&lt;li&gt;goDoH (a Command and Control framework that uses DNS-over-HTTPS)&lt;/li&gt;
&lt;li&gt;hostapd-mana (a rogue access point)&lt;/li&gt;
&lt;li&gt;Whatmask (a program that helps with network settings)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kali NetHunter, the distro’s mobile pentesting platform, has a new settings menu for easier back up and restore of configuration files, and a module that ensures persistence of the Magisk Android rooting system.&lt;/p&gt;
&lt;p&gt;Win-KeX 2.5, which provides a Kali Desktop Experience for Windows Subsystem for Linux, comes with a new Enhanced Session Mode for ARM devices and a few other tweaks.&lt;/p&gt;
&lt;p&gt;For additional information, you can check out the release notes at: &lt;a href=&#34;https://www.kali.org/news/kali-linux-2020-4-release/&#34;&gt;https://www.kali.org/news/kali-linux-2020-4-release/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Winapps</title>
      <link>https://www.nextpertise.net/posts/201110_winapps/</link>
      <pubDate>Tue, 10 Nov 2020 08:24:53 -0500</pubDate>
      
      <guid>https://www.nextpertise.net/posts/201110_winapps/</guid>
      <description>&lt;p&gt;Winapps is a project that allows running Windows applications as if they were a part of a Linux Desktop. It&amp;rsquo;s a sleight of hand - the apps run in a VM and an RDP window is created for just that application. However, it integrates with the Linux environment and even let&amp;rsquo;s you use &amp;ldquo;open with&amp;rdquo; types of functionality.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/brentstewart/winapps/develop/demo/demo.gif#floatright&#34; alt=&#34;WinApps&#34;&gt;&lt;/p&gt;
&lt;p&gt;To give it a try, clone the code from &lt;a href=&#34;https://github.com/Fmstrat/winapps&#34;&gt;GitHub&lt;/a&gt;. Remember that it&amp;rsquo;s running programs that are installed on a VM. If you don&amp;rsquo;t have a Windows VM, the project includes an empty KVM machine that Windows and applications can be installed within. You can use an existing Windows VM (or even physical machine) if you have one. Windows doesn&amp;rsquo;t have to be a VM on your local machine - I set this up to run with a copy of Windows I&amp;rsquo;m running on my ESXi server downstairs. Theoretically, you could use your laptop or a remote computer to be the &amp;ldquo;Windows source&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Create a text file at _~/.config/winapps/winapps.conf that looks like this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;RDP_USER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MyWindowsUser&amp;#34;&lt;/span&gt;  
RDP_PASS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MyWindowsPassword&amp;#34;&lt;/span&gt;  
&lt;span style=&#34;color:#75715e&#34;&gt;#RDP_IP=&amp;#34;192.168.123.111&amp;#34;  &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#DEBUG=&amp;#34;true&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The IP is only required if Windows is remote. The Debug command tells it to create a log and is optional.&lt;/p&gt;
&lt;p&gt;Finally, run the &lt;strong&gt;install.sh&lt;/strong&gt; script. This script will use the variables defined in the config file and login and scan Windows. If it finds a file it knows, it will setup the link, put an icon and entry in the local application menu, and link the appropriate mime-types.&lt;/p&gt;
&lt;p&gt;When I tested this, I ran into a couple issues running the install script. The script would timeout. Looking at the script, I saw that it was trying to use xfreerdp to login to Windows. I ran that command from the command line and saw that it wasn&amp;rsquo;t connecting. Troubleshooting on Windows revealed that I needed to enable remote desktop under settings&amp;gt;system&amp;gt;remote desktop. Doh! Re-testing with xfreerdp revealed that I needed to accept a certificate.&lt;/p&gt;
&lt;p&gt;With the RDP part confirmed working, I re-ran the script and &lt;em&gt;voila!&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A lot of folks will be interested in running Office and those apps are defined, but I use my Windows VM mostly for things that can&amp;rsquo;t be done on Linux like running the Kindle application. Look in the repository under &lt;em&gt;apps&lt;/em&gt; and you&amp;rsquo;ll see that various programs are defined, each to a directory. In the directory is a definition file that includes mime-types consumed and a path to the application in Windows. There&amp;rsquo;s also an icon in the directory. This is what the install script references when it runs.&lt;/p&gt;
&lt;p&gt;I was able to create a Kindle definition file. I grabbed an SVG icon from Google Images and created an &lt;em&gt;info&lt;/em&gt; file that contained the following.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# GNOME shortcut name  &lt;/span&gt;
NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Kindle&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Used for descriptions and window class  &lt;/span&gt;
FULL_NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Amazon Kindle&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# The executable inside windows  &lt;/span&gt;
WIN_EXECUTABLE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c:\users\brent\appdata\local\amazon\kindle\application\kindle.exe&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# GNOME categories  &lt;/span&gt;
CATEGORIES&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Education&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# GNOME mimetypes  &lt;/span&gt;
MIME_TYPES&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://microfilums.files.wordpress.com/2010/01/2260894625_ea1feecb2a.jpg#floatleft&#34; alt=&#34;Big Brains&#34;&gt;
I wanted to add the work I&amp;rsquo;d done back to the project, so I forked the &lt;em&gt;develop&lt;/em&gt; branch, added the files, and submitted a Pull Request back to &amp;ldquo;fmstrat&amp;rdquo;. I also added some troubleshooting suggestions for them based on my experience.&lt;/p&gt;
&lt;p&gt;This was a neat adventure to write up because it combines a lot of the things we&amp;rsquo;ve been discussing in this blog. The implementation is a lot like running an X application on a remote machine, which we discussed in &lt;a href=&#34;https://www.nextpertise.net/Using_SSH5&#34;&gt;Remotely Possible&lt;/a&gt;. Of course we talk a lot about Linux and using Linux in a Windows world, and we talk about Git.&lt;/p&gt;
&lt;p&gt;But this is another chance to hit on a favorite theme of mine. You don&amp;rsquo;t need to be gods-gift-to-programming to make meaningful and appreciated contributions to the open source community. In the day I took to play with this and contribute the Kindle definition, several other people also submitted apps and the library is quickly growing. Similar to defining GNS3 appliances, there&amp;rsquo;s a lot of ways to give back. There&amp;rsquo;s a real satisfaction to contributing in this way that I hope you have a chance to experience.&lt;/p&gt;
&lt;p&gt;As far as Winapps, as I mentioned at the beginning, it&amp;rsquo;s interesting and definitely looks cool. I&amp;rsquo;m not complete sold that it&amp;rsquo;s that much more useful than just pulling up a Windows VM, but it&amp;rsquo;s close enough that it will fit the work styles of some folks really well. It&amp;rsquo;s worth a look!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to write an event to Windows and Linux logs</title>
      <link>https://www.nextpertise.net/posts/201025_how_to_write_an_event_to_windows_event/</link>
      <pubDate>Sun, 25 Oct 2020 16:29:57 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/201025_how_to_write_an_event_to_windows_event/</guid>
      <description>&lt;p&gt;Anyone who has trouble sleeping should discover the joys of reviewing Syslog data.  System logging contains a wealth of information that can assist in troubleshooting, security, and incident handling.  The hard part is wading through all the data to put together a useful and actionable story.  There are a wealth of tools to help us correlate and make sense these days, such as SIEM, but there are still times when we need to get into the data.&lt;/p&gt;
&lt;p&gt;One of the first problems we encounter in understanding syslog is figuring out where to start in the stream of events.  It would be nice if there were a bookmark that we could reference.  This article is about inserting that bookmark into either Windows Event logs or Linux Journals.&lt;/p&gt;
&lt;h2 id=&#34;powershell-sudo&#34;&gt;PowerShell sudo&lt;/h2&gt;
&lt;p&gt;A brief aside: The dichotomy of an admin PowerShell session and a regular PowerShell session is annoying.  One specific but near-to-my-heart example is the built-in terminal in Visual Studio Code (or VSCodium) for Windows, which uses a &amp;ldquo;non-admin&amp;rdquo; session.&lt;/p&gt;
&lt;p&gt;Linux systems have sudo.  Sudo allows a single command to run in an elevated state and sudo commands can be intermingled with un-priviledged commands.  The following script uses &lt;em&gt;scoop&lt;/em&gt; to grab a &amp;ldquo;sudo&amp;rdquo; application for Powershell.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;iex (new-object net.webclient).downloadstring(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://get.scoop.sh&amp;#39;&lt;/span&gt;)
set-executionpolicy unrestricted -s cu &lt;span style=&#34;color:#f92672&#34;&gt;-f&lt;/span&gt;  
scoop install sudo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-to-write-an-event-to-windows-event-log&#34;&gt;How to write an Event to Windows Event Log&lt;/h2&gt;
&lt;p&gt;This technique allows you to place comments into the Windows event logs, for instance to mark the beginning or completion of a change window.  We could also build this into certain scripts so that they left an entry when they ran.  It could even be automated into systems so that the markings took place without a person having to remember.&lt;/p&gt;
&lt;p&gt;The general process is to create an information &amp;ldquo;source&amp;rdquo; to write into (if it doesn&amp;rsquo;t already exist) and then to write the event.&lt;/p&gt;
&lt;h3 id=&#34;creating-a-log-source&#34;&gt;Creating a log source&lt;/h3&gt;
&lt;p&gt;Since we&amp;rsquo;re creating log events for comments, let&amp;rsquo;s create a log source that matches our username.  If there are several admins, it may be a good idea to use a format like &amp;ldquo;admin-username&amp;rdquo; so that we can later search logs for &amp;ldquo;admin*&amp;rdquo;.  Creating a new source requires PowerShell to run with Administrator priviledges.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;New-eventlog -logname application -source &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brent&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that you can use the environment variable &lt;em&gt;$env:username&lt;/em&gt;.  You can build this into a script - if the source already exists, the command will return an error to that effect.&lt;/p&gt;
&lt;h2 id=&#34;logging-an-entry&#34;&gt;Logging an entry&lt;/h2&gt;
&lt;p&gt;To create a log entry use the &amp;ldquo;write-eventlog&amp;rdquo; cmdlet.  Specify the log (like Application or Security), the source that we defined, and the message.  The EventID isn&amp;rsquo;t significant, so you could also use this numeric field if you had something suitable (like a ticket number).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Write-EventLog -LogName Application -Source &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brent&amp;#34;&lt;/span&gt; -EntryType Information -Message &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sample text&amp;#34;&lt;/span&gt; -EventID 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It is also possible to write an entry on a remote computer. The example below assumes that the source &amp;ldquo;bstewart&amp;rdquo; exists on the remote computer.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Write-EventLog -computername &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server&amp;#34;&lt;/span&gt; -LogName Application -Source &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bstewart&amp;#34;&lt;/span&gt; -EntryType Information -Message &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sample text&amp;#34;&lt;/span&gt; -EventID 1__  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;scripting&#34;&gt;Scripting&lt;/h2&gt;
&lt;p&gt;This can all be simplified in a script, saved as &amp;ldquo;log.ps1&amp;rdquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;  
{  
        sudo New-eventlog -logname application -source $env:username  
}  
&lt;span style=&#34;color:#66d9ef&#34;&gt;Catch&lt;/span&gt;  
{  
    Write-Output &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Log source already exists&amp;#34;&lt;/span&gt;  
}  
Write-eventlog -logname application -source $env:username -entrytype information -message $args[0] -eventid 1  
write-host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The following was written to the Application log using the source $env:username for that log.&amp;#34;&lt;/span&gt;  
write-host $args[0]  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then run the command from powershell to write a string.  It will try to create a source based on your username.  If one exists, it will use it and keep moving.  The argument is passed through as the message.  You could easily extend this script to have a second argument to pass the eventid as well.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&amp;gt; .\log.ps1 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Something happened&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;linux-much-easier&#34;&gt;Linux (much easier)&lt;/h1&gt;
&lt;p&gt;Writing to the Linux journal is pretty straight-forward.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Sample text&amp;#39;&lt;/span&gt; | Systemd-cat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To take a look at this, just use &lt;strong&gt;journalctl -f&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll talk about logging to syslog another time, or maybe I can talk Myron into delving in because he has great experience with pulling things out of SIEMs.  Whether you use this in the scope of a SIEM or just for local logging, I&amp;rsquo;m sure you&amp;rsquo;ll find this idea useful.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 20.10</title>
      <link>https://www.nextpertise.net/posts/201024_ubuntu2010/</link>
      <pubDate>Sat, 24 Oct 2020 18:40:56 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/201024_ubuntu2010/</guid>
      <description>&lt;p&gt;I had a chance to download Ubuntu 20.10 and install it on a gen 8 i5 laptop.  I typically use Cinnamon for a desktop environment, which I have long found to be mature, usable, and stable.  In the past, I&amp;rsquo;ve found Gnome to be laggy but I&amp;rsquo;ve heard good things about 3.38.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve become enamored of tiling windows as well.  I&amp;rsquo;ve tried i3, Pop OS!, and others.  So another thing I wanted to look into was the Material Design extension.&lt;/p&gt;
&lt;h2 id=&#34;about-ubuntu-2010&#34;&gt;About Ubuntu 20.10&lt;/h2&gt;
&lt;p&gt;Ubuntu releases a Long Term Support (LTS) release biannually.  LTS versions, like 20.04,  are supported for five years and are appropriate for business servers.  Interim releases like 20.10 are supported for nine months.  These releases are kept current and represent the most up-to-date implementation of Ubuntu&amp;rsquo;s vision for the Linux desktop.  Ubuntu supports a variety of DEs including KDE, Budgie, MATE and others. There are unsupported versions for Cinnamon and Deepin as well.  I&amp;rsquo;ve used the MATE version for VMs in the past and it&amp;rsquo;s performed very well, but this time I wanted to check out Gnome.&lt;/p&gt;
&lt;p&gt;The first two things that jumped out at me have to do with login.  First, there&amp;rsquo;s now a built in choice to authenticate via Active Directory.  I have several workstations and servers and the idea of being able to easily centralize authentication is &lt;em&gt;very&lt;/em&gt; appealing.  I haven&amp;rsquo;t had time to build that part out, but I will be looking into that process in the months ahead.  I&amp;rsquo;m hoping I can make it work with FreeIPA.&lt;/p&gt;
&lt;p&gt;The other thing - and this sounds minor - is the responsiveness of the login screen.  It&amp;rsquo;s been my past opinion that Gnome was slow, but logging in is breezy.  I use Windows 10 at work and the Ubuntu lock screen is especially quick comparted to that.&lt;/p&gt;
&lt;p&gt;The default Gnome experience has an &lt;em&gt;application grid&lt;/em&gt; like Android (all the apps in alphabetical order).  This was always annoying to me - partly because I&amp;rsquo;m a heirarchical organizer and partly because I could never remember the name of the app I wanted.  The new 3.38 allows you to organize your apps in whatever order makes sense to you and to pull icons into folders.  This is a big win for me.&lt;/p&gt;
&lt;p&gt;Ubuntu is still running Gnome on X.  X Windows is stable and mature and has better support for NVidia video cards, but the next generation Wayland is coming and Ubuntu hasn&amp;rsquo;t pushed that envelope yet.&lt;/p&gt;
&lt;p&gt;Ubuntu 20.10 includes Linux kernel 5.8.0.25.  This was billed as the &amp;ldquo;biggest release of all time&amp;rdquo; by Linux Torvalds.  Most of the improvements are around drivers and the Spectre patch.  According to Phoronix, there&amp;rsquo;s good benefit for ATI graphics.  Otherwise, from a desktop perspective, this won&amp;rsquo;t be a big deal.&lt;/p&gt;
&lt;p&gt;Applications, such as LibreOffice (7.0), Firefox (82), and Thunderbird (78.3.2), have been updated to latest versions.&lt;/p&gt;
&lt;p&gt;To me, the biggest difference between Gnome and Mate or Cinnamon is app selection.  At the end of the day, despite the improved performance, it&amp;rsquo;s not enough to make me want to switch.&lt;/p&gt;
&lt;h2 id=&#34;tiling-with-material-design&#34;&gt;Tiling with Material Design&lt;/h2&gt;
&lt;p&gt;As I mentioned before, the window tiling paradigm really makes sense to me.  I&amp;rsquo;ve tried i3 and Regolith, which I like, but they suffer from the same problem as Gnome - having an easy way to browse available applications.  Pop OS! has a tiling extension for Gnome that&amp;rsquo;s well thought out, but I abandoned it because it made Gnome &lt;em&gt;less&lt;/em&gt; responsive.  Still, the Pop OS! experience came the closest to what I imagined tiling could be.&lt;/p&gt;
&lt;p&gt;Recently I was introduced to &lt;strong&gt;Material Design&lt;/strong&gt;.  I decided to install it on my new Ubuntu 20.10 installation and try to &amp;ldquo;live in it&amp;rdquo; for a better test.  &lt;strong&gt;Material Design&lt;/strong&gt; is a gnome extension that provides a few really specific tiling options.&lt;/p&gt;
&lt;p&gt;To install Material Design in Ubuntu 20.10, go to &lt;a href=&#34;https://extensions.gnome.org&#34;&gt;https://extensions.gnome.org&lt;/a&gt; and add the extension.  Unfortunately, Ubuntu doesn&amp;rsquo;t support the Gnome add-in page out of the box.  At the Gnome page, load the firefox extension.  You&amp;rsquo;ll also need to install some supporting pieces for it to run properly.  Note that the chrome-gnome-shell is used by both Firefox and Chrome.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt-get install libproxy1-plugin-networkmanager gnome-shell-extension-system-monitor  
sudo apt-get install chrome-gnome-shell  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Windows are on desktops, with the taskbar across the top showing you what&amp;rsquo;s on the current desktop.  Desktops are shown on the side bar, so you can think of the two bars as showing a grid of apps X desktops. The version of Material design at Gnome supports four windowing modes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Single Window - each application takes up the full window and you can use the taskbar to move easily between them.&lt;/li&gt;
&lt;li&gt;Split - each application takes up either the left or right half of the screen.  The app order is shown on the taskbar, and you can drag to rearrange.  Many times I&amp;rsquo;m typing in one window with another for reference, so this mode sets up exactly what I&amp;rsquo;m looking for.&lt;/li&gt;
&lt;li&gt;Half - the first application occupies the left half of the screen.  Subsequent apps stack to the right.  You can drag windows or rearrange the taskbar to change which applications go in each spot.&lt;/li&gt;
&lt;li&gt;Free - this is the &amp;ldquo;normal&amp;rdquo; Gnome experience, with tiling turned off.
&lt;img src=&#34;https://raw.githubusercontent.com/material-shell/material-shell/master/documentation/tiling_showcase.gif#floatright&#34; alt=&#34;Material Design&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In my testing, I found that I could set different modes for each desktop.  Right now, the desktop I&amp;rsquo;m typing on has Codium on one side and a browser on the other in &amp;ldquo;Split&amp;rdquo; mode.  My other desktop use &amp;ldquo;Half&amp;rdquo; with a big browser on the right and a terminal, Enpass, and settings stacked on the right.&lt;/p&gt;
&lt;p&gt;I also installed the &lt;strong&gt;Gnome menu&lt;/strong&gt; so that I&amp;rsquo;d have the heirarchical app picking experience I like.  Material shell has a button for the gnome app grid but I want something different.  I&amp;rsquo;m unimpressed with &lt;strong&gt;Gnome Menu&lt;/strong&gt;.  Anyone want to recommend a menu extension?  Gnome Menu hits the minimum reqs - it&amp;rsquo;s an organized menu.  On the other hand, you can&amp;rsquo;t type to search, it doesn&amp;rsquo;t open sub-menus automatically, and it doesn&amp;rsquo;t a place where frequently used apps or files can be quickly found.&lt;/p&gt;
&lt;p&gt;In the end though, the beauty of Linux is that the machine is &lt;em&gt;yours&lt;/em&gt;.  In a half hour I installed a new distro with a new DE, updated it and installed some critical apps, customized the desktop for tiling and changed the application selection process.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m going to keep Ubuntu 20.10 and Material Design on this machine for a while.  It works well on the 1920x1080 17&amp;quot; display.  I&amp;rsquo;m also curious how the combination will work on my desktop with it&amp;rsquo;s two 4k displays, but I&amp;rsquo;ll take a little time before making that decision.&lt;/p&gt;
&lt;p&gt;Ubuntu 20.10 has answered my objections to the laggy experience of Gnome and given me a &amp;ldquo;standard&amp;rdquo; desktop experience I can customize to my interests.  I&amp;rsquo;m curious about your impressions - write to me and let me know!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSHFS Automount</title>
      <link>https://www.nextpertise.net/posts/201017_sshfs_automount/</link>
      <pubDate>Sat, 17 Oct 2020 12:13:01 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/201017_sshfs_automount/</guid>
      <description>&lt;p&gt;I described using SSHFS as an alternative to NFS back in &lt;a href=&#34;https://www.nextpertise.net/using_ssh3&#34;&gt;Using SSH3&lt;/a&gt;. I&amp;rsquo;ve been using SSHFS as a standard way to mount since then, partly because I can use the same technique on a variety of OS and partly because it seems to work cleaner for me than straight NFS. However, I&amp;rsquo;ve been using a batch file to mount drives and that&amp;rsquo;s getting old. I&amp;rsquo;d like to just add the SSHFS targets into &lt;em&gt;/etc/fstab&lt;/em&gt; and get them to automount.
As a general rule, the Arch Wiki is a great place to find all things Linux. Even though I&amp;rsquo;m running an Ubuntu variant, the Arch Wiki set me straight. For this to work there are a number of things that have to be set.
First, as described in &lt;a href=&#34;using_ssh2&#34;&gt;Using SSH2&lt;/a&gt; I need to make sure that logging into my target is done with keys so that an interactive password is not required. See the previous article for a more detailed walk through, but the basic process is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh-keygen  
ssh-copy-id brent@192.168.1.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;test&#34;&gt;test&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh brent@192.168.1.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Second, edit &lt;em&gt;/etc/fuse.conf&lt;/em&gt; to allow non-root users to access drives when they&amp;rsquo;re mounted with the &lt;em&gt;allowother&lt;/em&gt; option.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo nano /etc/fuse.conf
&lt;span style=&#34;color:#75715e&#34;&gt;# add or uncomment the following line&lt;/span&gt;
user_allow_other
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Find out your user id and group id. This is easy: there&amp;rsquo;s an &lt;strong&gt;id&lt;/strong&gt; &lt;em&gt;username&lt;/em&gt; command. Note that the ellipsis below just indicate that I&amp;rsquo;m in other groups and I&amp;rsquo;ve edited those out.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;➜ id brent
uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1000&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;brent&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; gid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1000&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;brent&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;** ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, add the targets to your &lt;em&gt;etc/fstab&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo nano /etc/fstab  
sshfs#brent@192.168.1.1:/home /home/remote fuse user,_netdev,
 reconnect,uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;UID,gid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;GID,idmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;user,allow_other &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When you exit nano the remote directory should be mounted and active! It will also be there automatically each time you log back in. Hope this is helpful!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using SSH (Part 5) - Remotely Possible</title>
      <link>https://www.nextpertise.net/posts/200922_using_ssh5/</link>
      <pubDate>Tue, 22 Sep 2020 14:47:47 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/200922_using_ssh5/</guid>
      <description>&lt;p&gt;I confess that I never meant for this to be an SSH blog. It was an easy topic to write about when we started, but friends keep suggesting new things I should cover. The takeaway then is that SSH is a heck of a tool and can be used to accomplish a lot of different things.&lt;/p&gt;
&lt;p&gt;Today&amp;rsquo;s topic is running a GUI program on a remote computer and displaying the output locally. Pretty cool, right? This is suprisingly easy to do.&lt;/p&gt;
&lt;p&gt;Why would we want to do this? I already covered that under &amp;ldquo;pretty cool&amp;rdquo;, but I suppose I could say something about using your netbook to run a big program that needs lots of RAM and CPU.&lt;/p&gt;
&lt;p&gt;To demonstrate, I&amp;rsquo;m going to run the text editor from my server on my desktop.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh -X brent@192.168.1.1 &lt;span style=&#34;color:#75715e&#34;&gt;# -X or -Y work  &lt;/span&gt;
pluma
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/XRemote.png#center&#34; alt=&#34;Displaying a remote program&#34;&gt;&lt;/p&gt;
&lt;p&gt;Simply SSH into a remote host using either the -X or -Y switch. From the remote prompt, enter the command to run the graphical program of your choosing and the window will be displayed locally. Using &amp;ldquo;-X&amp;rdquo; (as shown in the code) allows this to work but keeps the X11 Security extension restrictions. Using &amp;ldquo;-Y&amp;rdquo; like I did in the screen capture bypasses those restrictions. From an operative point of view, they act identically.&lt;/p&gt;
&lt;p&gt;This has been the most straightforward of the series. If you&amp;rsquo;re interested in SSH, check out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nextpertise.net/using_ssh1&#34;&gt;SSH - Part 1 Basics and Banners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nextpertise.net/using_ssh2&#34;&gt;SSH - Part 2 Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nextpertise.net/using_ssh3&#34;&gt;SSH - Part 3 File Shares&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nextpertise.net/using_ssh4&#34;&gt;SSH - Part 1 Port Forwarding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Git (and run) a File!</title>
      <link>https://www.nextpertise.net/posts/200910_git_a_file/</link>
      <pubDate>Thu, 10 Sep 2020 11:03:09 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/200910_git_a_file/</guid>
      <description>&lt;p&gt;I maintain a private Github repository for my Linux install scripts.  My install scripts setup PPAs, install programs that I typically use, and setup my system the way I want it.  The repository has scripts for Ubuntu and Red Hat variants, plus secondary scripts that perform other admin tasks.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/githubpriv1.png#floatsmallright&#34; alt=&#34;GitHub Repository Settings&#34;&gt;&lt;/p&gt;
&lt;p&gt;These scripts aren&amp;rsquo;t supposed to have personal information in them, but things like IP addresses, paths, and security measures could sneak in.  I don&amp;rsquo;t want to have to worry about revealing something that opens me to attack, so the repos are private.
&lt;img src=&#34;https://www.nextpertise.net/githubpriv2.png#floatright&#34; alt=&#34;GitHub Repository Settings&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;creating-a-github-private-repository&#34;&gt;Creating a GitHub Private Repository&lt;/h2&gt;
&lt;p&gt;Github allows free accounts to host private repositories.  Initialize a repo on Github.  To make it private, go under &lt;em&gt;Settings&lt;/em&gt; and choose &lt;em&gt;options&lt;/em&gt;.  Scroll down to the bottom to the section labeled &amp;ldquo;Danger Zone&amp;rdquo; and helpfully outlined in red.  The first option is to &lt;em&gt;Change repository visibility&lt;/em&gt;.  Click here will give you the option to move this repository to private.&lt;/p&gt;
&lt;p&gt;Private repositories operate just like public ones in my experience.  The only difference is that access is limited.&lt;/p&gt;
&lt;h2 id=&#34;using-a-linux-install-script&#34;&gt;Using a Linux install script&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s a snippet of the Ubuntu script to give you an idea of what I&amp;rsquo;m doing.  This section sets up fail2ban (an SSH security measure) and installs VSCodium.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo setup fail2ban
systemctl start fail2ban
systemctl enable fail2ban
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/[sshd]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;enabled = true
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;port = 22
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;filter = sshd
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;logpath = /var/log/auth.log
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;maxretry = 3&amp;#34;&lt;/span&gt; &amp;gt;  /etc/fail2ban/jail.local
&lt;span style=&#34;color:#75715e&#34;&gt;##VSCodium&lt;/span&gt;
wget -qO - https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg | sudo apt-key add -
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;deb https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/repos/debs/ vscodium main&amp;#39;&lt;/span&gt; | sudo tee --append /etc/apt/sources.list.d/vscodium.list
sudo apt update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt install codium
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I build and tear down a lot of Linux machines (mostly VMs and EC2 instances).  The initial install lacks some of the tools I expect, and I don&amp;rsquo;t want to go through a process to build the environment.  The script automates this setup, saves me time and makes sure that I don&amp;rsquo;t forget anything!&lt;/p&gt;
&lt;p&gt;Up until recently my process was to install Linux, grab git, then clone the repository.  From there, I could move into the repository and run the scripts I wanted.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install git
mkdir git/linuxinstall
cd git/linuxinstall
git clone__ https://github.com/brentstewart/Private_linuxinstall.git  
chmod +x myscript.sh
./myscript.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/githubsettings.png#floatright&#34; alt=&#34;Github Settings&#34;&gt;&lt;/p&gt;
&lt;p&gt;This works, but it&amp;rsquo;s a bunch to type.  It also downloads more than the one file I need and leaves a repository on the drive.  None of these are problems, but Linux is for the lazy and it feels like there&amp;rsquo;s a better way to do this.&lt;/p&gt;
&lt;h2 id=&#34;an-easier-way&#34;&gt;An easier way&lt;/h2&gt;
&lt;p&gt;I don&amp;rsquo;t want a multi-step process and I don&amp;rsquo;t want to download my whole repository.  The method I&amp;rsquo;ve developed to achieve this is to do all this in one line.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -s --header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Authorization: token aaabbbcccdddeeefff1112223334445556667778&amp;#39;&lt;/span&gt; 
--header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Accept: application/vnd.github.v3.raw&amp;#39;&lt;/span&gt; --remote-name --location 
https://api.github.com/repos/brentstewart/Private_linuxinstall/contents/hw.sh
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod +x hw.sh &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; bash hw.sh &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm hw.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That a lot, so let&amp;rsquo;s break down each piece.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -s --header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Authorization: token aaabbbcccdddeeefff1112223334445556667778&amp;#39;&lt;/span&gt; --header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Accept: application/vnd.github.v3.raw&amp;#39;&lt;/span&gt; --remote-name --location__ https://api.github.com/repos/brentstewart/Private_linuxinstall/contents/hw.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Curl&lt;/strong&gt; is used to transfer data via various protocols, including https.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-s&lt;/strong&gt; puts &lt;strong&gt;curl&lt;/strong&gt; in silent mode&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/githubpat.png#floatright&#34; alt=&#34;Github Token&#34;&gt;
&lt;strong&gt;- - header &amp;lsquo;Authorization: token X&amp;rsquo;&lt;/strong&gt; is used to authenticate to Github.  You&amp;rsquo;ll need to create a token for your account, so choose settings under your account (upper right).  Choose &lt;em&gt;Developer Options&lt;/em&gt; and &lt;em&gt;Personal Access Tokens&lt;/em&gt;.  Create a new token and copy it to your script.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;ndash;header &amp;lsquo;Accept: application/vnd.github.v3.raw&amp;rsquo; &amp;ndash;remote-name&lt;/strong&gt;  are options that are documented by github as required.  Don&amp;rsquo;t change these parts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- - location&lt;/strong&gt; &lt;a href=&#34;https://api.github.com/repos/brentstewart/Private_linuxinstall/contents/hw.sh&#34;&gt;https://api.github.com/repos/brentstewart/Private_linuxinstall/contents/hw.sh&lt;/a&gt; is the part that took an &lt;em&gt;embarrassingly&lt;/em&gt; long time to get right.  I read a lot of blog posts and api docs and tried a lot of things that didn&amp;rsquo;t work.  I gather that the working examples I found online were from a previous iteration of github and the methods have been deprecated.  This, however, works!  The parts you&amp;rsquo;ll need to change here are your Github username and the name of repository.  &lt;em&gt;Contents&lt;/em&gt; stays on the path unchanged, but you&amp;rsquo;ll need to add in the file you are looking for on the end.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t want to run my install script over and over, so the referenced file just has &lt;strong&gt;echo Hello World&lt;/strong&gt; in it (thus hw.sh).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;amp;&amp;amp;&lt;/strong&gt; is used to join multiple commands on a single line.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;chmod +x hw.sh&lt;/strong&gt; makes the file that was just downloaded executable&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bash hw.sh&lt;/strong&gt; runs the script&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rm hw.sh&lt;/strong&gt; deletes the file so that the new environment is clean&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This approach has some interesting benefits.  First, the slug of a command is the kind of thing that can be cut and paste into new machines.&lt;/p&gt;
&lt;p&gt;Second, this approach is open to automation because it removes the login to Github (replaced by the token) and allows the process to complete unsupervised.  As such, this would be the kind of thing that could be used to start up EC2 instances.  In that case, you could easily automate a standard EC2 startup to pull a script from Github.  Then you could maintain the current script and improve it over time without having to go into Cloudformation or EC2 to change processes.&lt;/p&gt;
&lt;p&gt;A bonus conclusion as well - the result didn&amp;rsquo;t end up looking like I expected.  I spent a lot of time trying to pipe commands together, and never developed that approach to a usable point.  It&amp;rsquo;s important to have a good understanding of different approaches to a problem so that you can deal with the &amp;ldquo;expected unexpected&amp;rdquo; and keep moving.&lt;/p&gt;
&lt;p&gt;I hope this discussion helps you!  If you have other approaches to this problem, I&amp;rsquo;d love to hear about them in the comments below.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fonts on Linux</title>
      <link>https://www.nextpertise.net/posts/200909_fonts_on_linux/</link>
      <pubDate>Wed, 09 Sep 2020 16:42:10 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/200909_fonts_on_linux/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a little bit of a font nerd.  In the early 90s, someone who knew computers and had a laser printer had an easy opportunity to get into graphic design.  I knew computers and the college had a laser printer, so I got a copy of &lt;strong&gt;Looking Good in Print&lt;/strong&gt; and dabbled.  I&amp;rsquo;ve written about this earlier in describing my love of &lt;a href=&#34;https://www.nextpertise.net/FunwithPostscript&#34;&gt;Postscript&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;d like to have some font options on Linux, there are some great places to get high-quality fonts that work well with Linux applications.  This is a minor, but hopefully useful tip!&lt;/p&gt;
&lt;h2 id=&#34;formats&#34;&gt;Formats&lt;/h2&gt;
&lt;p&gt;Most Linux desktop environments support a variety of formats, but the most common are PostScript, OpenType, and TrueType.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Postscript&lt;/em&gt; is the oldest of the three.  Developed by Adobe in the 1984, they found a home on the Apple LaserWriter and were &lt;em&gt;the&lt;/em&gt; way to print high quality fonts.  They were expensive to license though, so Microsoft and Apple developed TrueType which was a similar vector-based approach to font description.  &lt;em&gt;TrueType&lt;/em&gt; added in the idea of &amp;ldquo;hinting&amp;rdquo; which offered more control over how glyphs were presented.  &lt;em&gt;OpenType&lt;/em&gt; is the evolution of TrueType and allows more complex descriptions of shapes and larger character sets (up to 64K).&lt;/p&gt;
&lt;p&gt;All three formats work in Linux.  Unless you are very detail oriented, I doubt you&amp;rsquo;ll be able to tell which font is TrueType and which is OpenType.  There are a a lot of TrueType fonts available, but I use OpenType if I have a choice.&lt;/p&gt;
&lt;h2 id=&#34;using-apt&#34;&gt;Using Apt&lt;/h2&gt;
&lt;p&gt;One way to get fonts is to use the archive for your distribution.  For Ubuntu, there are a variety of fonts available via PPA.  To list and install them use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;apt search font
sudo apt install fonts-noto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Noto is a Google font that is clean and available in a range of type faces.&lt;/p&gt;
&lt;p&gt;This is an easy way to install new fonts, but there&amp;rsquo;s no preview and this approach may require some effort.&lt;/p&gt;
&lt;h2 id=&#34;from-the-web&#34;&gt;From the Web&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/DownloadGoogleFont.png#center&#34; alt=&#34;Google Fonts&#34;&gt;
Option #2 is to search for fonts online.  One great place to get (free!) quality fonts is from &lt;a href=&#34;https://fonts.google.com&#34;&gt;Google&lt;/a&gt;.  Fonts can be previewed online and are easy to download. Google passes these to you as TrueType (TTF) files in a Zip.  Unzip the file and copy the files to &lt;em&gt;/usr/share/fonts&lt;/em&gt;.  The &lt;strong&gt;fc-cache&lt;/strong&gt; command rebuilds the font cache to include the new files and they should be available in programs afterward.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;unzip font.zip
sudo cp *ttf /usr/share/fonts/truetype
sudo fc-cache -f -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;em&gt;fonts&lt;/em&gt; directory has a set of sub-directories (including &lt;em&gt;postscript&lt;/em&gt;, &lt;em&gt;truetype&lt;/em&gt;, and &lt;em&gt;openscript&lt;/em&gt;) so change the target directory appropriately.  If you downloaded a group of fonts that are sorted into sub-directories, you can grab all the ttf files recursively using &lt;strong&gt;sudo cp *ttf /usr/share/fonts/truetype -r&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This font directory (/usr/share/fonts) makes fonts available to all users.  If you want to install them for just one account, you can install them to &lt;em&gt;~/.fonts&lt;/em&gt;.  I&amp;rsquo;ve never done it that way, since I control my system, but this would be particularly useful if you don&amp;rsquo;t have root privileges.&lt;/p&gt;
&lt;p&gt;The Google site is a great resource, but there are many places to purchase or get open-source fonts &lt;a href=&#34;https://lmgtfy.com/?q=fonts&amp;amp;pp=1&amp;amp;iie=1&#34;&gt;online&lt;/a&gt;.  Hope this helps!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using SSH Part 4 - Port Forwarding</title>
      <link>https://www.nextpertise.net/posts/200830_using_ssh4/</link>
      <pubDate>Sun, 30 Aug 2020 15:12:24 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/200830_using_ssh4/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/SSH-Tunnel.png#floatright&#34; alt=&#34;SSH Tunnel&#34;&gt;&lt;strong&gt;Problem&lt;/strong&gt;: We want to access an internal web page that is behind a firewall.  We have SSH access to a server behind the firewall, and &lt;em&gt;that&lt;/em&gt; server can see the intranet.&lt;/p&gt;
&lt;p&gt;SSH has a solution for this type of problem - tunneling.  Most people use SSH as a telnet replacement &amp;ndash; as just a way to get a terminal session.  SSH is capable of much more than mere terminal access.  There are several ways to accomplish out goal, so let&amp;rsquo;s sort through them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This article demonstrates an obscure and useful way to use a tool, but raises two important points.  First, don&amp;rsquo;t take any part of this to be an example of good design.  I&amp;rsquo;ve constructed a case that allows demonstrating a technique.  Second, using the tool this way may short-circuit your organizations&#39; security design and so security folks may want to mitigate against allowing this use.&lt;/p&gt;
&lt;h2 id=&#34;option-1---ssh-from-the-client&#34;&gt;Option 1 - SSH from the client&lt;/h2&gt;
&lt;p&gt;For this to work, the intermediate host (10.0.0.22 in this case) needs to allow itself to pass ports.  Open the &lt;strong&gt;sshd_config&lt;/strong&gt; file and set GatewayPorts to &lt;em&gt;yes&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo nano /etc/ssh/sshd_config
&lt;span style=&#34;color:#75715e&#34;&gt;# edit line to remove remark and change to yes&lt;/span&gt;
GatewayPorts yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, ssh from the external device to the intermediate device and link a local port to an address and port reachable from the ssh target.  In the example below, we connect into 2.2.2.2 (&amp;ldquo;server&amp;rdquo;) and then we map &lt;em&gt;local (on the external device)&lt;/em&gt; port 8080 to a target reachable from the server - webserver port 80.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh -L 8080:10.0.0.80:80 2.2.2.2
&lt;span style=&#34;color:#75715e&#34;&gt;# -L maps a local port&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 8080:10.0.0.80:80 ties port 8080 to a remote destination of 10.0.0.80:80&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 2.2.2.2 is the ssh target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After running this command, you&amp;rsquo;ll be asked to log into the ssh server normally.  Once logged in, open a web browser on the external client to http://localhost:8080 and the remote internal webpage will be visible.&lt;/p&gt;
&lt;h2 id=&#34;option-2---ssh-from-the-inside-reverse-tunnel&#34;&gt;Option 2 - SSH from the inside (Reverse Tunnel)&lt;/h2&gt;
&lt;p&gt;Another option is to make a port available to a remote computer.  In this case, we start ssh from the server and connect to the remote client (which we&amp;rsquo;ll imagine is me.myself.com).  Again, the command prompts us to login to the remote machine.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh -R 8080:10.0.0.80:80 me.myself.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At this point the remote user can open a browser to http://localhost:8080 and see the internal page.  In fact, the firewall may allow ssh traffic to originate from the webserver.  In that case the reverse tunnel could be established from the webserver without having to use an intermediate host.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh -R 8080:localhost:80 me.myself.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;option-3---http-from-the-outside&#34;&gt;Option 3 - HTTP from the outside&lt;/h2&gt;
&lt;p&gt;The final scenario to consider is to allow the server to listen on a port and forward traffic to the intranet server.  Obviously this would require the firewall configuration to allow some port in addition to tcp/22 (SSH) into the server.  In this case, we&amp;rsquo;ll ask the server to listen on port 8001 and forward that traffic to the internal web server.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh -R 8001:10.0.0.80:80 localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The client can now browse to http://2.2.2.2:8001 to see the webpage.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;SSH port forwarding and reverse SSH connections are powerful tools that can circumvent network policy.  Being familiar with this use may be helpful in troubleshooting, and may be important to you when considering how ssh servers are deployed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Most Commonly Used Linux Commands</title>
      <link>https://www.nextpertise.net/posts/200817_mostcommonlinuxcommand/</link>
      <pubDate>Mon, 17 Aug 2020 12:47:16 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/200817_mostcommonlinuxcommand/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve seen some articles recently on &amp;ldquo;Linux commands frequently used by admins&amp;rdquo;  or &amp;ldquo;15 commonly used Linux commands&amp;rdquo;, which got me thinking . . . what commands do I use most frequently?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;history&lt;/strong&gt; shows us a list of recent commands starting with a sequence number (example below).  But I just want the command!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&amp;gt; brent@MintyTwenty:__~$ history__  
    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  mkdir git  
    &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  cd git  
    &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  git clone https://github.com/brentstewart/Mint-install.git  
    . . .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Piping this output into &lt;strong&gt;awk&lt;/strong&gt; allows me to filter this down to the first word.  &lt;strong&gt;Awk&lt;/strong&gt; can pull a field out; in this case the sequence number is field 1 and the command is field 2.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&amp;gt;  brent@MintyTwenty:~$ __history | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;__  
    mkdir  
    cd  
    git  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Getting closer!  I want a frequence count of which commands are used, so let&amp;rsquo;s pipe this to &lt;strong&gt;uniq -c&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&amp;gt; brent@MintyTwenty:~$ __history | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; | uniq -c__  
      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; mkdir  
      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; cd  
      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; git  
      &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; sudo  
      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; exit  
      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; git  
      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; ls  
      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; cd  
      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; git  
      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; cd   
      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; ls  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice that it&amp;rsquo;s showing &lt;strong&gt;cd&lt;/strong&gt; counted in multiple groups.  I &lt;em&gt;think&lt;/em&gt; this is because of the way &lt;strong&gt;uniq&lt;/strong&gt; is grouping, so let&amp;rsquo;s help it out by piping that output to sort before asking &lt;strong&gt;uniq&lt;/strong&gt; to group and count.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;brent@MintyTwenty:~$ __history | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; | sort | uniq -c__  
      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      3 alias  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      4 awk  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      4 ./basic.sh  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      1 cat  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;     31 cd  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      3 chmod  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      . . .  
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At this point it is easy to find that my top commands are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;history&lt;/strong&gt; (probably from working through this example)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cd&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ls&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sudo&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Using SSH - Part 3 (File Shares)</title>
      <link>https://www.nextpertise.net/posts/200813_using_ssh3/</link>
      <pubDate>Thu, 13 Aug 2020 11:15:42 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/200813_using_ssh3/</guid>
      <description>&lt;p&gt;One of the basic things you want to do on a network is share files.  At one point, everyone had a Windows PC and this involved shared directories and Network Neighborhood.  It had a lot of issues, but it worked.  However, today we have a variety of clients and CIFS isn&amp;rsquo;t an easy (or appropriate) fit for all of them.  This article focuses on home users, but enterprise users face some of the same challenges.  There are a lot of ways you &lt;em&gt;could&lt;/em&gt; do this; I&amp;rsquo;m going to share how I&amp;rsquo;m currently doing it.  My environment includes several versions of Linux, Windows 10, a Mac, Chromebooks, and Android Phones.&lt;/p&gt;
&lt;p&gt;I should start by saying that I&amp;rsquo;m &lt;em&gt;not&lt;/em&gt; using Microsoft sharing &amp;ndash; what has been variously termed SMB (Server Message Blocks) or CIFS (Common Internet File System).  My experience with SAMBA (SMB on Linux) has been uneven and I&amp;rsquo;ve never wanted to invest the time.  Your mileage may vary, but trying to sort out access and permissions and deal with the impact of software updates was a drag.&lt;/p&gt;
&lt;h2 id=&#34;sftp-filezillafilezillapngfloatright&#34;&gt;SFTP &lt;img src=&#34;https://www.nextpertise.net/Filezilla.png#floatright&#34; alt=&#34;Filezilla&#34;&gt;&lt;/h2&gt;
&lt;p&gt;SFTP is a Secure File Transfer Protocol built on top of SSH, and the two are usually bundled together since they are complementary.  One of the easiest ways to use SFTP to transfer files on all platforms is to use &lt;em&gt;Filezilla&lt;/em&gt;.  Filezilla presents a left/right here/there file manager that allows easy drag and drop between locations.  It works most places SSH works.  Login using your SSH credentials and set the port to 22.  If you use Filezilla often, the first button on the left is the Site Manager and remembers common destinations.  Filezilla works, but there&amp;rsquo;s no way to open a file in an application from the other disk.  It must be copied locally and this creates multiple file versions and is onerous to use.  So - Filezilla if nothing else works.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/caja.png#floatleft&#34; alt=&#34;Caja&#34;&gt;Linux file managers like &lt;em&gt;Caja&lt;/em&gt; and Finder on the Mac allow you to attach to an arbitrary destination in an ad-hoc fashion (Windows does not).  For Linux and Mac, just use existing SSH credentials.  This method also supports FTP, CIFS, and WebDav.  I don&amp;rsquo;t recommend FTP because it&amp;rsquo;s not secure and it&amp;rsquo;s a very old protocol and can be difficult to handle on firewalls.  WebDav is slow and involves some Apache setup.  It can be secure, but most folks setting up a quick file share won&amp;rsquo;t take the time to make it so.  I recommend SSH/SFTP.  File managers generally allow bookmarking, but don&amp;rsquo;t automatically reconnect.  I&amp;rsquo;ll walk through a technique that builds the connection at startup later in the article.&lt;/p&gt;
&lt;p&gt;On Android, I&amp;rsquo;m using &lt;em&gt;Cx File Explorer&lt;/em&gt;.  This application allows me to connect to SFTP resources and bookmark them.  Cx integrates with the rest of Android, so I can do things like type an email and use Cx to attach a file from the server.  Cx has the same requirements SSH does - a network path to the server and credentials. For me, a common use is to grab a PDF from the server and transfer them to my Kindle.&lt;/p&gt;
&lt;h2 id=&#34;aside---nfs&#34;&gt;Aside - NFS&lt;/h2&gt;
&lt;p&gt;Network File System (NFS) is a dream for devices that support it.  It lacks the ad hoc browsing you might do on a Windows network, but at home I want all the files on the servers and if I have to do horizontal file sharing I can figure it out.  Setting up NFS on the server involves getting the NFS server, setting up the &lt;em&gt;/etc/fstab&lt;/em&gt; configuration file, and publishing the share using &lt;strong&gt;exportfs&lt;/strong&gt;.  The example below publishes my user directory from the server.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install nfs-kernel-server nfs-common
sudo nano /etc/exports
add lines similar to this one
/home/brent 192.168.1.0/255.255.255.0&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;rw,anonuid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1000,anongid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1000,sync&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;save file and . . .&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;exportfs -avf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On the client, I&amp;rsquo;ll map this share to a folder so it sits in my directory tree.  In this case, I want my server user directory to fit under my local user directory as the &lt;em&gt;server&lt;/em&gt; sub-directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkdir ~/server
sudo nano /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;add lines similar to this one&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;192.168.1.1:/home/brent /home/brent/server nfs default &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;save file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mount ~/server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It should just work, but you may need to use &lt;strong&gt;mount&lt;/strong&gt; to kick it in the rear.  Because this is setup in your &lt;em&gt;fstab&lt;/em&gt; file, it will automatically reconnect when you restart.  My personal workflow is to save all my work products to the server because that&amp;rsquo;s what is being backed up.  I use the local folders for scratch files, downloads, etc.  I like to try new things and end up re-installing my OS on my desktop about three times a year.  I can throw my Ventoy USB stick in the PC, pick a distro, and be back up with no lost data in minutes!&lt;/p&gt;
&lt;p&gt;NFS works great for Linux to Linux filesharing.  I didn&amp;rsquo;t have great success with Windows.  There is a process that includes using &lt;em&gt;Services for NFS&lt;/em&gt;, but I won&amp;rsquo;t even link to it.  It was difficult to get working and didn&amp;rsquo;t &amp;ldquo;just work&amp;rdquo; in the way that I wanted for my wife&amp;rsquo;s PC.  I haven&amp;rsquo;t seen a way to use this with Android and haven&amp;rsquo;t attempted with Chrome.  On the Mac, this works fine and is supported by Finder.  The procedure is just:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;showmount -e 192.168.1.1 &lt;span style=&#34;color:#75715e&#34;&gt;#view available shares&lt;/span&gt;
sudo mkdir /server-files &lt;span style=&#34;color:#75715e&#34;&gt;#depending on where you put it, you may not need sudo&lt;/span&gt;
sudo mount -o rw -t nfs 192.168.1.1:/home/brent /server-files__
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;NFS can be secure.  NFSv4 encrypts traffic in-transit and v2/3 allow you to limit promiscuous connections using a mask.  In the enterprise or if your traffic crosses a public network you &lt;em&gt;really&lt;/em&gt; need to use v4.
&lt;img src=&#34;https://raw.githubusercontent.com/billziss-gh/sshfs-win/master/cap.gif#floatsmallright&#34; alt=&#34;SSHFS Win&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sshfs&#34;&gt;SSHFS&lt;/h2&gt;
&lt;p&gt;SSHFS is a file system using SFTP.  Since SFTP is built on top of SSH, SSHFS inherits all the goodness of SSH.  SSHFS  works for everything I&amp;rsquo;ve tested so far - I haven&amp;rsquo;t gotten to the Chromebooks yet, but I &lt;em&gt;have&lt;/em&gt; used it in Windows, Mac, Linux, Haiku, BSD, and others.  SSHFS requires installing the sshfs package and installing the SSH server daemon.  File permissions are communicated based on how you login.&lt;/p&gt;
&lt;p&gt;On Linux, the command to mount a directory using SSHFS looks like this (the server is 192.168.1.1).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install sshfs
mkdir ~/server &lt;span style=&#34;color:#75715e&#34;&gt;#if it doesn&amp;#39;t already exist_  &lt;/span&gt;
sudo sshfs -o allow_other,default_permissions brent@192.168.1.1:/home/brent /home/brent/server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can add this to fstab if you want it to be automatic.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo nano /etc/fstab
&lt;span style=&#34;color:#75715e&#34;&gt;# add this line&lt;/span&gt;
sshfs#brent@192.168.1.1:/home/brent /home/brent/server fuse.sshfs _netdev,idmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;user,uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1001,gid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1002,allow_other,default_permissions &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For Windows, I&amp;rsquo;m using a stack of WinFsp, SSHFS-Win, and SSHFS-Win-Manager (links in notes).  Here&amp;rsquo;s the procedure:&lt;img src=&#34;https://www.nextpertise.net/SSHFS-Win-Manager.png#floatleft&#34; alt=&#34;SSHFS-WIn-Manager&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;em&gt;WinFsp&lt;/em&gt; from Github - there&amp;rsquo;s an MSI attached to the latest release (I tested with winfsp-1.7.20172.msi)&lt;/li&gt;
&lt;li&gt;Install &lt;em&gt;SSHFS-Win&lt;/em&gt; from Github - again using an MSI (I tested with SSHFS-Win-3.5.20024-x64.msi).  At this point you can map drives using the UNC \sshfs\user@server.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/SSHFS-Win-Manager-Add.png#floatright&#34; alt=&#34;SSH-Win-Manager Adding a Conneciton&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is aimed at the family members who &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; want to futz around with computers all day, so install &lt;em&gt;SSHFS-Win Manager&lt;/em&gt; from Github (I tested with sshfs-win-manager-setup-v1.0.1.exe).  Once installed, click &amp;ldquo;add connection&amp;rdquo;.  The connection information is standard SSH information.  To attach my remote user directory to my local one as in the earlier example, I would specify a Remote path of &lt;em&gt;/home/brent&lt;/em&gt; and a Local Path of &lt;em&gt;/home/brent/server&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using SSH - Part 2 (Authentication)</title>
      <link>https://www.nextpertise.net/posts/200812_using_ssh2/</link>
      <pubDate>Wed, 12 Aug 2020 11:36:12 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/200812_using_ssh2/</guid>
      <description>&lt;p&gt;This aricle makes up part two of the series on SSH.  If you&amp;rsquo;re interested in the basics or how to setup a banner, refer to the first article.  As with the first article, I&amp;rsquo;ve tested all of this on Ubuntu Linux and exact commands may vary as you get farther from there.&lt;/p&gt;
&lt;h2 id=&#34;secure-authentication-with-passwords&#34;&gt;Secure Authentication with Passwords&lt;/h2&gt;
&lt;p&gt;By default, SSH authenticates users via a password.  Passwords are transmitted in a secure manner, but can be prone to brute force guessing attacks.&lt;/p&gt;
&lt;p&gt;One way to secure the ssh interface is to limit the devices allowed to access your server.  This can be done at different places - on your network firewall, in the OS firewall, or in the ssh process.   SSH uses TCP port 22, so blocking that at the firewall is one way to mitigate against maliciousness.  Since this article is about using SSH, we&amp;rsquo;ll focus on the latter.  Go into sshd_config and add a line for AllowUsers.  The example below allows anyone to login from the 192.168.1.0/24 network. Remember to restart the ssh service after changing sshd_config: &lt;strong&gt;sudo systemctl restart ssh&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo nano /etc/sshd_config  
allowUsers &lt;span style=&#34;color:#ae81ff&#34;&gt;\*&lt;/span&gt;@192.168.1.*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Blocking source addresses only works up to a point.  Bad actors from within can still attack, and outside actors can use another host as a jump server (SSH to there, then start a new SSH session from the inside box).  Picking a good password helps make brute-force attacks take longer, but we need to prevent opportunities to work through every combination of letters.  Fail2ban is a service that blocks IP addresses that exhibit suspicious behavior.  Install it using &lt;strong&gt;sudo apt install fail2ban&lt;/strong&gt;.  Below is a script that will setup fail2ban to block IPs that fail three consecutive login attempts.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo setup fail2ban
systemctl start fail2ban
systemctl enable fail2ban
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/[sshd]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;enabled = true
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;port = 22
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;filter = sshd
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;logpath = /var/log/auth.log
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;maxretry = 3&amp;#34;&lt;/span&gt; &amp;gt;  /etc/fail2ban/jail.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;authentication-with-keys&#34;&gt;Authentication with keys&lt;/h2&gt;
&lt;p&gt;Another way to login is using keys.  A key pair - public and private - can be generated on a client and authenticates the client to the server.  Since the keys are stored in the &lt;em&gt;user&lt;/em&gt; account, they also in theory are associated with identity.  There are two advantages of using keys.  First, it can eliminate remembering and typing a knuckle-busting password and supports automation.  Second, keys are more secure than passwords &lt;em&gt;on the assumption that the key file is secure&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To use public-key authentication, you first need to generate a key pair using the command &lt;strong&gt;ssh-keygen&lt;/strong&gt;.  You can optionally enter a passphrase to use to unlock the key.  By default, the public key is saved as &lt;em&gt;~/.ssh/id_rsa&lt;/em&gt; and the private key as &lt;em&gt;~/.ssh/id_rsa.pub&lt;/em&gt;.  This process is shown below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;brent@inspiron:~$ ssh-keygen
Generating public/private rsa key pair.  
Enter file in which to save the key &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;/home/brent/.ssh/id_rsa&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:   
Enter passphrase &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;empty &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; no passphrase&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:   
Enter same passphrase again:   
Your identification has been saved in /home/brent/.ssh/id_rsa  
Your public key has been saved in /home/brent/.ssh/id_rsa.pub  
The key fingerprint is:  
SHA256:A5RBWIxVGMCAQbzAfenno9hlwQAeafZgnCPJCylrnz8 brent@inspiron  
The key&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;s randomart image is:  
+---&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;RSA 3072&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;----+  
|*&lt;span style=&#34;color:#f92672&#34;&gt;====&lt;/span&gt;OO*.        |  
|**.@&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;+          |  
|+.B.* +          |  
|.+   o &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;         |  
|. . . o S        |  
|   o   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; .       |  
|    + + .        |  
|   . G           |  
|      .          |  
+----&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;SHA256&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;-----+  
brent@inspiron:~$   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I don&amp;rsquo;t want to publish my keys to the world, so I just re-ran &lt;strong&gt;ssh-keygen&lt;/strong&gt; and accepted the prompt to overwrite the old set.&lt;/p&gt;
&lt;p&gt;Once a key pair is generated, the public key needs to be copied to the host that you want to login to.  To do this, you need password access to the host and this process doesn&amp;rsquo;t disable password access.  Unless you opt to turn that off, you still need to secure the password access using ACLs and fail2ban as previously discussed.  That said, ssh includes a utility to push your public key to a target device - &lt;strong&gt;ssh-copy-id&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;brent@MintyTwenty:~$ ssh-copy-id brent@192.168.1.1   
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, to filter out any that are already installed  
/usr/bin/ssh-copy-id: INFO: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; key&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; remain to be installed -- &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you are prompted now it is to install the new keys  
brent@192.168.1.1&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;s password:   
 
Number of key&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; added: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now try logging into the machine, with:   &amp;ldquo;ssh &amp;lsquo;&lt;a href=&#34;mailto:brent@192.168.1.1&#34;&gt;brent@192.168.1.1&lt;/a&gt;&amp;rsquo;&amp;rdquo;  and check to make sure that only the key(s) you wanted were added.&lt;/p&gt;
&lt;p&gt;Now I should be able to just type &lt;strong&gt;ssh brent@192.168.1.1&lt;/strong&gt; and be attached to the server without a password prompt!  Easier administration and easier to script.&lt;/p&gt;
&lt;h2 id=&#34;authentication-with-totp&#34;&gt;Authentication with TOTP&lt;/h2&gt;
&lt;p&gt;TOTP is for the &lt;em&gt;really&lt;/em&gt; paranoid and for those uber-geeks that want to impress their friends.  Digital Ocean has a really nice write up on this, and that was my primary source for learning.  I&amp;rsquo;ve referenced it in the notes.  Their procedure is written for Ubuntu 16.04 but I&amp;rsquo;ve personally used it up through 20.04 without a problem.&lt;/p&gt;
&lt;p&gt;Ideally authentication involves something you &lt;em&gt;know&lt;/em&gt; and something you &lt;em&gt;have&lt;/em&gt;.  Time-based One Time Passwords are six-digit codes that change periodically.  Hopefully, you already use this to secure critical online resources like your email.  TOTP utilities generate a 3D barcode that can be read by the camera on a phone, and use that to set a unique nugget that can be combined with the time to give random number strings.  Google authenticator is the &amp;ldquo;go-to&amp;rdquo; app on the phone for entering and holding these authenticators.  I use &lt;em&gt;Enpass&lt;/em&gt;, which does a similarly good job.&lt;/p&gt;
&lt;p&gt;Before you begin, you&amp;rsquo;ll need the authenticator app loaded on your phone and you&amp;rsquo;ll need to be physically in front of the server.  On the server, install the authenticator module and initiate the settings.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install libpam-google-authenticator  
google-authenticator -t -d -f -r &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; -R &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; -W   &lt;span style=&#34;color:#75715e&#34;&gt;# NOTE: using cmd w/o flags will walk you through prompts  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;strong&gt;google-authenticator&lt;/strong&gt; command will show you a 3D barcode and your first code.  Scan that in on your phone and verify the code.  The output will also include five &amp;ldquo;emergency scratch codes&amp;rdquo;.  These would be used if you lose your phone.  Write them down somewhere for emergencies before continuing.&lt;/p&gt;
&lt;p&gt;Next, add a line to &lt;em&gt;/etc/pam.d/sshd&lt;/em&gt; for authentication and edit a line in &lt;em&gt;sshd_config&lt;/em&gt; for Challenges.  Restart the service and you&amp;rsquo;ll be ready to test.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo nano /etc/pam.d/sshd
&lt;span style=&#34;color:#75715e&#34;&gt;#_add this line, then close the file&lt;/span&gt;
auth required pam_google_authenticator.so nullok
 
sudo nano /etc/.ssh/sshd_config
&lt;span style=&#34;color:#75715e&#34;&gt;#_find and change this line, then close the file&lt;/span&gt;
ChallengeResponseAuthentication yes

&lt;span style=&#34;color:#75715e&#34;&gt;#_restart sshd&lt;/span&gt;
sudo systemctl restart sshd.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At this point, try connecting to this server using ssh.  It should &lt;em&gt;either&lt;/em&gt; use a key or prompt you for your password and then for the current TOTP code.  If you want it to require TOTP when using a key, you&amp;rsquo;ll need to edit sshd_config and restart the process again.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo nano /etc/.ssh/sshd_config
&lt;span style=&#34;color:#75715e&#34;&gt;#_add this line&lt;/span&gt;
AuthenticationMethods publickey,password publickey,keyboard-interactive
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;recommendations&#34;&gt;Recommendations&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve presented a lot of ideas here, so I want to conclude by giving you my recommendations for personal machines.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install SSH server by default&lt;/li&gt;
&lt;li&gt;Use a banner in .bashrc to make clear which device you are currently logged into&lt;/li&gt;
&lt;li&gt;Limit SSH to local IPs unless there&amp;rsquo;s a specific requirement otherwise.  If you can&amp;rsquo;t limit by IP, use TOTP.&lt;/li&gt;
&lt;li&gt;Use fail2ban&lt;/li&gt;
&lt;li&gt;Use keys.  Don&amp;rsquo;t try to use the same keys on all devices, just generate new ones every time you re-install or get a new PC.  At least for me, this cuts down on the risk of keys falling into outside hands.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Using SSH - Part 1 (Basics and Banners)</title>
      <link>https://www.nextpertise.net/posts/200811_using_ssh1/</link>
      <pubDate>Tue, 11 Aug 2020 12:36:12 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/200811_using_ssh1/</guid>
      <description>&lt;p&gt;SSH is a pretty well known protocol that&amp;rsquo;s used for a lot of different things.  Most of us are familiar with the basics and a trick or two.  This article is to try to consolidate a lot of the uses I have for SSH and share them.  The article is a quick review of basic terminal access and banners.  This is the first in a series, so more advanced topics are covered in succeeding posts.&lt;/p&gt;
&lt;h2 id=&#34;the-basics&#34;&gt;The Basics&lt;/h2&gt;
&lt;p&gt;SSH is included in modern operating systems.  Apparently it can now also be installed on Windows (I&amp;rsquo;ve included a link).  If you use Windows, the standard client suggested is PuTTY (I really like Solar-PuTTY as well). I have not used Windows as a client or server in my testing, so hopefully my comments will be helpful but I suspect server setup is going to be different.&lt;/p&gt;
&lt;p&gt;My walk through assumes you are using a command-line client.  Note that the ssh &lt;em&gt;client&lt;/em&gt; is typically installed in the *nix world.  If you want your box to be the server then you&amp;rsquo;ll need to add it via &lt;strong&gt;sudo apt install openssh-server&lt;/strong&gt; (Debian/Ubuntu).&lt;/p&gt;
&lt;p&gt;Most of us encounter SSH as a secure replacement for telnet.  SSH allows us to connect to a remote terminal from the command line.  Assuming that I wanted to connect to my firewall by it&amp;rsquo;s IP address and that there was an account named &amp;ldquo;brent&amp;rdquo; there, I can connect using _&lt;em&gt;ssh &lt;em&gt;username&lt;/em&gt;@&lt;em&gt;Destination&lt;/em&gt;&lt;/em&gt;.  If this is the first time you&amp;rsquo;ve connected, you&amp;rsquo;ll be asked to confirm the fingerprint.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;brent@MintyTwenty:~$ ssh brent@192.168.24.230  
The authenticity of host &amp;#39;192.168.24.230 (192.168.24.230)&amp;#39; can&amp;#39;t be established.  
ECDSA key fingerprint is SHA256:1XYZ12MBd5Sb345ABOBhoKx42D+STU56szGR/d3LkGs.  
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes  
Warning: Permanently added &amp;#39;192.168.24.230&amp;#39; (ECDSA) to the list of known hosts.  
brent@192.168.24.230&amp;#39;s password:  
brent@inspiron:~$  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The fingerprint is to protect against a man-in-the-middle attack, where your traffic is being re-directed to a malicious third party.  Before you type in (and reveal) your password, best to make sure that this is a trusted server!  So, where do we find the fingerprint to match it to?  The easiest way to get it is to go to your server and use ssh to connect to itself: &lt;strong&gt;ssh &lt;em&gt;username&lt;/em&gt;@127.0.0.1&lt;/strong&gt;.  This will show the local fingerprint.  If someone has already used this trick and accepted the fingerprint, you can delete ~/.ssh/knownhosts (&lt;em&gt;not recommended&lt;/em&gt;) or use ssh-keygen to examine the local public key.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;brent@MintyTwenty:~$ __ssh-keygen -lf .ssh/id_rsa.pub  
4096 SHA256:cjyCsHXYZ12dESNo+12AB/oGGaxY1JHSTU%1p3Aeouw brent@X (RSA)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;banners&#34;&gt;Banners&lt;/h2&gt;
&lt;p&gt;SSH banners are specified in the ssh daemon configuration (&lt;em&gt;/etc/sshd_config&lt;/em&gt;),  To specify a banner, find the line reads &amp;ldquo;#banner none&amp;rdquo; and edit it to specify a file.  The contents of this file will be displayed &lt;em&gt;before&lt;/em&gt; the password prompt.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;sudo nano /etc/sshd_config  
banner /etc/banner.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/neofetch.png#floatsmallright&#34; alt=&#34;neofetch&#34;&gt;&lt;/p&gt;
&lt;p&gt;After authentication the prompt displays the server hostname.  You can display a banner &lt;em&gt;after&lt;/em&gt; authentication by editing &lt;em&gt;~/.bashrc&lt;/em&gt;.  This has a side benefit - the terminal, when connected to locally or remotely, processes &lt;em&gt;~/.bashrc&lt;/em&gt; before it produces a prompt.  Go to the end of that file and add whatever you like - that output will be displayed before a prompt is produced.  I&amp;rsquo;ve listed some cool ideas to build a dynamic banner below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;neofetech&lt;/strong&gt; is a popular script that summarizes system information.  There&amp;rsquo;s a ppa available to add this from apt.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo add-apt-repository ppa:dawidd0811/neofetch  
sudo apt install neofetch  
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neofetch&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /home/brent/.bashrc  &lt;span style=&#34;color:#75715e&#34;&gt;# Add the command to the end of .bashrc  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/figlet.png#floatright&#34; alt=&#34;figlet&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Figlet&lt;/strong&gt; - draws letters in ASCII for a nice banner and any command can be piped through it (echo &amp;ldquo;for example&amp;rdquo; | figlet).  It&amp;rsquo;s available in the standard Ubuntu repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Curl&lt;/strong&gt; - pull in data from the web.  Try &lt;strong&gt;curl v2.wttr.in/Hickory+NC&lt;/strong&gt;.  A more practical example might be:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl wttr.in/Hickory+NC?format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# check out the github page for lots more options&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Server stats&lt;/strong&gt; - display information about the server such as IP (&lt;strong&gt;hostname -I)&lt;/strong&gt; or temperature (&lt;strong&gt;sensors&lt;/strong&gt;).  This snippet will display just the main temperature.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;sensors | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id 0:&amp;#34;&lt;/span&gt; | cut -c16-23&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;#sensors displays a lot of data.&lt;/span&gt;
                            &lt;span style=&#34;color:#75715e&#34;&gt;# Grep just grabs the one line, and cut pulls temp out.  &lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CPU Temp:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;data&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Part two of this series will cover secure authentication options.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux Home Cloud Backup</title>
      <link>https://www.nextpertise.net/posts/200804_homebackup/</link>
      <pubDate>Tue, 04 Aug 2020 09:12:52 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/posts/200804_homebackup/</guid>
      <description>&lt;p&gt;At one point, I was taught to divide tasks by priority A, B, C.  As I&amp;rsquo;ve gotten older, I&amp;rsquo;ve converted that scale into &amp;ldquo;things that will immediately get me fired or divorced&amp;rdquo;, &amp;ldquo;things that will eventually get me fired or divorced&amp;rdquo;, and &amp;ldquo;things I&amp;rsquo;d like to do if I have time&amp;rdquo;.  One of the &amp;ldquo;A&amp;rdquo; tasks on this scale is making sure that we don&amp;rsquo;t lose our family digital pictures!&lt;/p&gt;
&lt;p&gt;Our home file server is an Ubuntu VM.  Over the years, I&amp;rsquo;ve used a variety of strategies to maintain personal backups.  Recently, I felt the time was right to move to cloud based backup - both for the convenience and the security of having things off-site.  I considered AWS S3, but Backblaze offers a similar and less-expensive service.  A former employer used Backblaze for laptop backups and I administered that system, and I always felt they did a good job and were reasonable to work with.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/BB_bucket_setup.png#floatright&#34; alt=&#34;Backblaze Dashboard&#34;&gt;  I settled on using Duplicati for the backkup software.  Duplicati runs on everything (Linux + various less secure OS), has a DEB, and is FOSS.  Duplicati has built in support for cloud backup, including Backblaze and S3.  I have a friend that uses Duplicati and it&amp;rsquo;s discussed on Jupiter Broadcasting, so I wanted to give it a try.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s start with Backblaze.  I setup an account and configured it for 2FA.  Then I created an ID and application key at the Backblaze dashboard and setup a bucket.  You can specify the bucket policy, and I recommend keeping older copies to protect against crypto-locking malware.  I setup my bucket to retain older copies for 180 days.&lt;/p&gt;
&lt;p&gt;Setting up Duplicati is as easy as installing the DEB and enabling the app to autostart.  My server runs Mate, so I opened the Control Center (alt&amp;ndash;f2, &amp;ldquo;mate-control-center&amp;rdquo;) and added Duplicati to the autoruns (at the bottom of the control center window).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/Mate-autorun-Duplicati.png#floatleft&#34; alt=&#34;Mate Autorun&#34;&gt; Once running, Duplicati shows a menu-bar applet. The application is administered from a web page on port 8200.  This webpage can be accessible from other machines and I usually manage the backups from my desktop.  Duplicati has excellent documentation on their website, but I was able to get it up and running quickly without investing a lot of time.&lt;/p&gt;
&lt;p&gt;From the initial Duplicati page choose &amp;ldquo;Add backup&amp;rdquo; and a wizard will walk you through specifying the details.  Make sure you keep track of the passphrase used by the backup!  Here&amp;rsquo;s a quick rundown on the selections I used:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;General - AES-256 Encryption.  Other options are no encryption and GNU Privacy Guard.  I don&amp;rsquo;t protect nuclear secrets, but I get itchy not encrypting data at rest, so I definitely don&amp;rsquo;t recommend that option.  I don&amp;rsquo;t know much about GNU PG, but AES-256 is considered a solid and well researched encryption so I used it.&lt;/li&gt;
&lt;li&gt;Backup destination - this is where you&amp;rsquo;ll plug in the ID and Key you generated at Backblaze earlier.&lt;/li&gt;
&lt;li&gt;Source data - gives you a file tree to select what you&amp;rsquo;d like to backup.  I&amp;rsquo;m cheap, so I separated out the non-private stuff into another directory (like installation ISOs) so I didn&amp;rsquo;t pay to back them up.&lt;/li&gt;
&lt;li&gt;Schedule - We&amp;rsquo;ll get into a discussion of RTO and RPO another time perhaps.  Basically, think about your cost to transfer files (with Backblaze, there is no incremental cost) and how much data you are willing to lose between backups.  I setup my schedule to run every night - with Backblaze there&amp;rsquo;s not really a reason &lt;em&gt;not to&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Options - Duplicati allows you to set the remote volume size.  I kept this at the recommended 50Mb.  Basically, it chunks your data so that it&amp;rsquo;s easier to restore and so that an adversary can&amp;rsquo;t identify individual file sizes, which could be a way that you&amp;rsquo;d leak information.  I also chose to keep all backups, again to protect against crypto-lockers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/Duplicati_Wiz.png#floatright&#34; alt=&#34;Duplicati Wizard&#34;&gt; After all that, just let it run!  My biggest knock on the combination of Duplicati and Backblaze is that there&amp;rsquo;s not an easy way to confirm backups are happening.  Backblaze has a 10 day trial and I didn&amp;rsquo;t initially put in a credit card.  To be clear, kudos to them for letting you try it and being easy to work with.  But . . . I forgot and the trial ran out and my backups stopped for several days.  Worse, I was clueless.&lt;/p&gt;
&lt;p&gt;Duplicati has options to setup a confirmation email after backups, which I recommend.  You&amp;rsquo;ll know there&amp;rsquo;s a problem when you &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; get an email.  Unless you are more clever than me, that&amp;rsquo;s suboptimal but it is something.  Backblaze doesn&amp;rsquo;t have an alerting option for things that don&amp;rsquo;t happen.  I&amp;rsquo;m thinking that I could setup a Lambda to check via API, then send an SNS, but that&amp;rsquo;s for another day.&lt;/p&gt;
&lt;p&gt;Overall, I&amp;rsquo;m please with the setup and the results I&amp;rsquo;m getting and would recommend either component to someone trying to solve a similar home problem.  I don&amp;rsquo;t see a reason this wouldn&amp;rsquo;t be good for a work environment, but I&amp;rsquo;ll need to use it for a while before I feel comfortable making that a recommendation.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
