<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Nextpertise</title>
    <link>https://www.nextpertise.net/tags/git/</link>
    <description>Recent content in Git on Nextpertise</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Sep 2020 08:41:13 -0400</lastBuildDate>
    
        <atom:link href="https://www.nextpertise.net/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Updating a GNS3 Appliance File</title>
      <link>https://www.nextpertise.net/updatinggns3appliances/</link>
      <pubDate>Wed, 02 Sep 2020 08:41:13 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/updatinggns3appliances/</guid>
      <description>&lt;p&gt;This is a long post, but most of it is file contents.  Keep reading!&lt;/p&gt;
&lt;p&gt;GNS3 appliance files are descriptions of virtual machines used in network simulations.  The appliance files have suffixes of &lt;em&gt;.gns3a&lt;/em&gt; and are included with the GNS3 download.  You can update the files and create new ones.  The goal of this article is to walk through the process of working with appliance files and contributing them back to the community.&lt;/p&gt;
&lt;p&gt;On a personal note, submitting a new GNS3 appliance was the first time I contributed to an open-source project.  I&amp;rsquo;m still learning, but a few years ago I knew &lt;em&gt;nothing&lt;/em&gt;.  Jeremy Grossman, with GNS3, was patient and helped me understand the process of using Git.  Contributing - even in this minor way - was a real high for me and I&amp;rsquo;d love for you to be able to share that feeling and contribute to this and other projects.  GNS3a was my &amp;ldquo;gateway drug&amp;rdquo; into being a contributor and not just a consumer of open source.&lt;/p&gt;
&lt;p&gt;One of the files I&amp;rsquo;ve contributed is the Security Onion appliance.  Security Onion is a Linux distribution that focuses on security tools.  Below is the current version (9/1/20) of the GNS3A file.  Before we create a new appliance, let&amp;rsquo;s update this one.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;{&lt;br&gt;
&amp;ldquo;name&amp;rdquo;: &amp;ldquo;Security Onion&amp;rdquo;,&lt;br&gt;
&amp;ldquo;category&amp;rdquo;: &amp;ldquo;guest&amp;rdquo;,&lt;br&gt;
&amp;ldquo;description&amp;rdquo;: &amp;ldquo;Security Onion is a Linux distro for intrusion detection, network security monitoring, and log management. Itâ€™s based on Ubuntu and contains Snort, Suricata, Bro, OSSEC, Sguil, Squert, ELSA, Xplico, NetworkMiner, and many other security tools. The easy-to-use Setup wizard allows you to build an army of distributed sensors for your enterprise in minutes!&amp;quot;,&lt;br&gt;
&amp;ldquo;vendor_name&amp;rdquo;: &amp;ldquo;Security Onion Solutions, LLC&amp;rdquo;,&lt;br&gt;
&amp;ldquo;vendor_url&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://securityonion.net/%22,&#34;&gt;https://securityonion.net/&amp;quot;,&lt;/a&gt;&lt;br&gt;
&amp;ldquo;documentation_url&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://github.com/Security-Onion-Solutions/security-onion/wiki%22,&#34;&gt;https://github.com/Security-Onion-Solutions/security-onion/wiki&amp;quot;,&lt;/a&gt;&lt;br&gt;
&amp;ldquo;product_name&amp;rdquo;: &amp;ldquo;Security Onion&amp;rdquo;,&lt;br&gt;
&amp;ldquo;product_url&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://securityonion.net/%22,&#34;&gt;https://securityonion.net/&amp;quot;,&lt;/a&gt;&lt;br&gt;
&amp;ldquo;registry_version&amp;rdquo;: 3,&lt;br&gt;
&amp;ldquo;status&amp;rdquo;: &amp;ldquo;stable&amp;rdquo;,&lt;br&gt;
&amp;ldquo;maintainer&amp;rdquo;: &amp;ldquo;Brent Stewart&amp;rdquo;,&lt;br&gt;
&amp;ldquo;maintainer_email&amp;rdquo;: &amp;ldquo;X@X&amp;rdquo;,&lt;br&gt;
&amp;ldquo;usage&amp;rdquo;: &amp;ldquo;Your default account will have sudo priviledges.  Squil and Squert username and password are configured in the Setup wizard.  MySQL root is set to null.  For more info see &lt;a href=&#34;https://github.com/Security-Onion-Solutions/security-onion/wiki/Passwords.%22,&#34;&gt;https://github.com/Security-Onion-Solutions/security-onion/wiki/Passwords.&amp;quot;,&lt;/a&gt;&lt;br&gt;
&amp;ldquo;symbol&amp;rdquo;: &amp;ldquo;securityonion-logo.png&amp;rdquo;,&lt;br&gt;
&amp;ldquo;qemu&amp;rdquo;:&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;adapter_type&amp;rdquo;: &amp;ldquo;e1000&amp;rdquo;,&lt;br&gt;
&amp;ldquo;adapters&amp;rdquo;: 2,&lt;br&gt;
&amp;ldquo;ram&amp;rdquo;: 3072,&lt;br&gt;
&amp;ldquo;arch&amp;rdquo;: &amp;ldquo;x86_64&amp;rdquo;,&lt;br&gt;
&amp;ldquo;console_type&amp;rdquo;: &amp;ldquo;vnc&amp;rdquo;,&lt;br&gt;
&amp;ldquo;kvm&amp;rdquo;: &amp;ldquo;allow&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
&amp;ldquo;images&amp;rdquo;:&lt;br&gt;
[&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;filename&amp;rdquo;: &amp;ldquo;securityonion-16.04.6.1.iso&amp;rdquo;,&lt;br&gt;
&amp;ldquo;version&amp;rdquo;: &amp;ldquo;16.04.6.1&amp;rdquo;,&lt;br&gt;
&amp;ldquo;md5sum&amp;rdquo;: &amp;ldquo;ca835cef92c2c0daafa16e789c343d1d&amp;rdquo;,&lt;br&gt;
&amp;ldquo;filesize&amp;rdquo;: 2020605952,&lt;br&gt;
&amp;ldquo;download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/&amp;quot;,&lt;br&gt;
&amp;ldquo;direct_download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/download/v16.04.5.3_20181010/securityonion-16.04.6.1.iso&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;filename&amp;rdquo;: &amp;ldquo;securityonion-16.04.5.3.iso&amp;rdquo;,&lt;br&gt;
&amp;ldquo;version&amp;rdquo;: &amp;ldquo;16.04.5.3&amp;rdquo;,&lt;br&gt;
&amp;ldquo;md5sum&amp;rdquo;: &amp;ldquo;886b369548c9c3841bc820cc3ab02bd9&amp;rdquo;,&lt;br&gt;
&amp;ldquo;filesize&amp;rdquo;: 1895825408,&lt;br&gt;
&amp;ldquo;download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/&amp;quot;,
&amp;ldquo;direct_download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/download/v16.04.5.3_20181010/securityonion-16.04.5.3.iso&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;filename&amp;rdquo;: &amp;ldquo;securityonion-14.04.5.4.iso&amp;rdquo;,&lt;br&gt;
&amp;ldquo;version&amp;rdquo;: &amp;ldquo;14.04.5.4&amp;rdquo;,&lt;br&gt;
&amp;ldquo;md5sum&amp;rdquo;: &amp;ldquo;9c7cab756b675beb10de4274a3ad3bc6&amp;rdquo;,&lt;br&gt;
&amp;ldquo;filesize&amp;rdquo;: 1874853888,&lt;br&gt;
&amp;ldquo;download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/&amp;quot;,&lt;br&gt;
&amp;ldquo;direct_download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/download/v14.04.5.4_20171031/securityonion-14.04.5.4.iso&amp;rdquo;&lt;br&gt;
},
{
&amp;ldquo;filename&amp;rdquo;: &amp;ldquo;securityonion-14.04.5.3.iso&amp;rdquo;,&lt;br&gt;
&amp;ldquo;version&amp;rdquo;: &amp;ldquo;14.04.5.3&amp;rdquo;,&lt;br&gt;
&amp;ldquo;md5sum&amp;rdquo;: &amp;ldquo;fb80ccb2d3c0f3f511823fa5858f87d1&amp;rdquo;,&lt;br&gt;
&amp;ldquo;filesize&amp;rdquo;: 1889533952,&lt;br&gt;
&amp;ldquo;download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/&amp;quot;,
&amp;ldquo;direct_download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/download/v14.04.5.4_20171031/securityonion-14.04.5.3.iso&amp;rdquo;&lt;br&gt;
},
{
&amp;ldquo;filename&amp;rdquo;: &amp;ldquo;empty30G.qcow2&amp;rdquo;,&lt;br&gt;
&amp;ldquo;version&amp;rdquo;: &amp;ldquo;1.0&amp;rdquo;,&lt;br&gt;
&amp;ldquo;md5sum&amp;rdquo;: &amp;ldquo;3411a599e822f2ac6be560a26405821a&amp;rdquo;,&lt;br&gt;
&amp;ldquo;filesize&amp;rdquo;: 197120,&lt;br&gt;
&amp;ldquo;download_url&amp;rdquo;: &amp;ldquo;https://sourceforge.net/projects/gns-3/files/Empty%20Qemu%30disk/&amp;quot;,&lt;br&gt;
&amp;ldquo;direct_download_url&amp;rdquo;: &amp;ldquo;https://sourceforge.net/projects/gns-3/files/Empty%20Qemu%20disk/empty30G.qcow2/download&amp;rdquo;&lt;br&gt;
}&lt;br&gt;
],&lt;br&gt;
&amp;ldquo;versions&amp;rdquo;:&lt;br&gt;
[&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;name&amp;rdquo;: &amp;ldquo;16.04.6.1&amp;rdquo;,&lt;br&gt;
&amp;ldquo;images&amp;rdquo;:&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;hda_disk_image&amp;rdquo;: &amp;ldquo;empty30G.qcow2&amp;rdquo;,&lt;br&gt;
&amp;ldquo;cdrom_image&amp;rdquo;: &amp;ldquo;securityonion-16.04.6.1.iso&amp;rdquo;&lt;br&gt;
}&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;name&amp;rdquo;: &amp;ldquo;16.04.5.3&amp;rdquo;,&lt;br&gt;
&amp;ldquo;images&amp;rdquo;:&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;hda_disk_image&amp;rdquo;: &amp;ldquo;empty30G.qcow2&amp;rdquo;,&lt;br&gt;
&amp;ldquo;cdrom_image&amp;rdquo;: &amp;ldquo;securityonion-16.04.5.3.iso&amp;rdquo;&lt;br&gt;
}&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;name&amp;rdquo;: &amp;ldquo;14.04.5.4&amp;rdquo;,&lt;br&gt;
&amp;ldquo;images&amp;rdquo;:&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;hda_disk_image&amp;rdquo;: &amp;ldquo;empty30G.qcow2&amp;rdquo;,&lt;br&gt;
&amp;ldquo;cdrom_image&amp;rdquo;: &amp;ldquo;securityonion-14.04.5.4.iso&amp;rdquo;&lt;br&gt;
}&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;name&amp;rdquo;: &amp;ldquo;14.04.5.3&amp;rdquo;,&lt;br&gt;
&amp;ldquo;images&amp;rdquo;: {&lt;br&gt;
&amp;ldquo;hda_disk_image&amp;rdquo;: &amp;ldquo;empty30G.qcow2&amp;rdquo;,&lt;br&gt;
&amp;ldquo;cdrom_image&amp;rdquo;: &amp;ldquo;securityonion-14.04.5.3.iso&amp;rdquo;&lt;br&gt;
}&lt;br&gt;
} &lt;br&gt;
]&lt;br&gt;
}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Most of this is pretty straight forward.  The structure looks like:&lt;/p&gt;
&lt;p&gt;A descriptive section&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name, Description, usage, vendor and product information can be taken from the source website&lt;/li&gt;
&lt;li&gt;Category can be guest, router, firewall, or multilayer_switch.&lt;/li&gt;
&lt;li&gt;Maintainer is the creator.  Notice I&amp;rsquo;ve replaced my email for publication to the web.&lt;/li&gt;
&lt;li&gt;Symbol should be a SVG file with a maximum height of 70px.  Either reference an existing symbol or add a new one.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next is the Qemu section that describes how the VM environment should be constructed.  This is straightforward as well.  Console types are VNC or telnet.  You may have to try different ethernet adapters to see what works, but I recommend starting with the Intel e1000 because this model is supported by most VMs.  Using a para-virtualized adapter may give better performance, so you may also want to try vmxnet3.  Most architectures will be 64bit and RAM requirements will usually be on the website.&lt;/p&gt;
&lt;p&gt;That leaves two sections - Images and Versions.  There should be a matching entry in both places.  The images section is a list of virtual hard drives and CD-ROM images to use in the VM and includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Filename, version, and download URL&lt;/li&gt;
&lt;li&gt;md5sum - most Linux distributions include the command &lt;strong&gt;md5sum&lt;/strong&gt;.  Download the appliance ISO and use &lt;strong&gt;md5sum myfile.iso&lt;/strong&gt; to generate a checksum.  Most Linux distributions include the checksum on their download page as well, so double check your version.&lt;/li&gt;
&lt;li&gt;filesize is reported on Linux using &lt;strong&gt;ls -l&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;If an empty drive image is needed, GNS3 provides them in different sizes on Github (as referenced above)
The versions section needs to have a name that matches the version number provided in the images section.  That ties the images to the correct version.
Notice that I&amp;rsquo;ve set this up to boot to an empty machine and prompt the user to do the installation.  I could also supply a QCOW2 file with Security Onion pre-installed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;rsquo;s update this file.  There are a lot of old images listed as options.  I&amp;rsquo;ll remove the image and version sections for 14.04.5.3 and add the most recent (16.04.7.1).  That will leave users with the last 14.x and two images in 16.x including the latest.  Whether dealing with a distribution or a commercial image, changes made between versions may introduce new processes or bugs so leaving some older images gives users an easy workaround.  Here&amp;rsquo;s the updated file.  Scroll below the output for a discussion of submitting this back to the project.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;{&lt;br&gt;
&amp;ldquo;name&amp;rdquo;: &amp;ldquo;Security Onion&amp;rdquo;,&lt;br&gt;
&amp;ldquo;category&amp;rdquo;: &amp;ldquo;guest&amp;rdquo;,&lt;br&gt;
&amp;ldquo;description&amp;rdquo;: &amp;ldquo;Security Onion is a Linux distro for intrusion detection, network security monitoring, and log management. Itâ€™s based on Ubuntu and contains Snort, Suricata, Bro, OSSEC, Sguil, Squert, ELSA, Xplico, NetworkMiner, and many other security tools. The easy-to-use Setup wizard allows you to build an army of distributed sensors for your enterprise in minutes!&amp;quot;,&lt;br&gt;
&amp;ldquo;vendor_name&amp;rdquo;: &amp;ldquo;Security Onion Solutions, LLC&amp;rdquo;,&lt;br&gt;
&amp;ldquo;vendor_url&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://securityonion.net/%22,&#34;&gt;https://securityonion.net/&amp;quot;,&lt;/a&gt;&lt;br&gt;
&amp;ldquo;documentation_url&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://github.com/Security-Onion-Solutions/security-onion/wiki%22,&#34;&gt;https://github.com/Security-Onion-Solutions/security-onion/wiki&amp;quot;,&lt;/a&gt;&lt;br&gt;
&amp;ldquo;product_name&amp;rdquo;: &amp;ldquo;Security Onion&amp;rdquo;,&lt;br&gt;
&amp;ldquo;product_url&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://securityonion.net/%22,&#34;&gt;https://securityonion.net/&amp;quot;,&lt;/a&gt;&lt;br&gt;
&amp;ldquo;registry_version&amp;rdquo;: 3,&lt;br&gt;
&amp;ldquo;status&amp;rdquo;: &amp;ldquo;stable&amp;rdquo;,&lt;br&gt;
&amp;ldquo;maintainer&amp;rdquo;: &amp;ldquo;Brent Stewart&amp;rdquo;,&lt;br&gt;
&amp;ldquo;maintainer_email&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;mailto:brent@stewart.tc&#34;&gt;brent@stewart.tc&lt;/a&gt;&amp;rdquo;,&lt;br&gt;
&amp;ldquo;usage&amp;rdquo;: &amp;ldquo;Your default account will have sudo priviledges.  Squil and Squert username and password are configured in the Setup wizard.  MySQL root is set to null.  For more info see &lt;a href=&#34;https://github.com/Security-Onion-Solutions/security-onion/wiki/Passwords.%22,&#34;&gt;https://github.com/Security-Onion-Solutions/security-onion/wiki/Passwords.&amp;quot;,&lt;/a&gt;&lt;br&gt;
&amp;ldquo;symbol&amp;rdquo;: &amp;ldquo;securityonion-logo.png&amp;rdquo;,&lt;br&gt;
&amp;ldquo;qemu&amp;rdquo;: {&lt;br&gt;
&amp;ldquo;adapter_type&amp;rdquo;: &amp;ldquo;e1000&amp;rdquo;,&lt;br&gt;
&amp;ldquo;adapters&amp;rdquo;: 2,&lt;br&gt;
&amp;ldquo;ram&amp;rdquo;: 3072,&lt;br&gt;
&amp;ldquo;arch&amp;rdquo;: &amp;ldquo;x86_64&amp;rdquo;,&lt;br&gt;
&amp;ldquo;console_type&amp;rdquo;: &amp;ldquo;vnc&amp;rdquo;,&lt;br&gt;
&amp;ldquo;kvm&amp;rdquo;: &amp;ldquo;allow&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
&amp;ldquo;images&amp;rdquo;: [&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;filename&amp;rdquo;: &amp;ldquo;securityonion-16.04.7.1.iso&amp;rdquo;,&lt;br&gt;
&amp;ldquo;version&amp;rdquo;: &amp;ldquo;16.04.7.1&amp;rdquo;,&lt;br&gt;
&amp;ldquo;md5sum&amp;rdquo;: &amp;ldquo;6bd811a05c1ec7973b8fca5c34cec13e&amp;rdquo;,&lt;br&gt;
&amp;ldquo;filesize&amp;rdquo;: 2132803584,&lt;br&gt;
&amp;ldquo;download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/&amp;quot;,&lt;br&gt;
&amp;ldquo;direct_download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/download/v16.04.7.1_20181010/securityonion-16.04.7.1.iso&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;filename&amp;rdquo;: &amp;ldquo;securityonion-16.04.6.1.iso&amp;rdquo;,&lt;br&gt;
&amp;ldquo;version&amp;rdquo;: &amp;ldquo;16.04.6.1&amp;rdquo;,&lt;br&gt;
&amp;ldquo;md5sum&amp;rdquo;: &amp;ldquo;ca835cef92c2c0daafa16e789c343d1d&amp;rdquo;,&lt;br&gt;
&amp;ldquo;filesize&amp;rdquo;: 2020605952,&lt;br&gt;
&amp;ldquo;download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/&amp;quot;,&lt;br&gt;
&amp;ldquo;direct_download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/download/v16.04.6.1_20181010/securityonion-16.04.6.1.iso&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;filename&amp;rdquo;: &amp;ldquo;securityonion-14.04.5.4.iso&amp;rdquo;,&lt;br&gt;
&amp;ldquo;version&amp;rdquo;: &amp;ldquo;14.04.5.4&amp;rdquo;,&lt;br&gt;
&amp;ldquo;md5sum&amp;rdquo;: &amp;ldquo;9c7cab756b675beb10de4274a3ad3bc6&amp;rdquo;,&lt;br&gt;
&amp;ldquo;filesize&amp;rdquo;: 1874853888,&lt;br&gt;
&amp;ldquo;download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/&amp;quot;,&lt;br&gt;
&amp;ldquo;direct_download_url&amp;rdquo;: &amp;ldquo;https://github.com/Security-Onion-Solutions/security-onion/releases/download/v14.04.5.4_20171031/securityonion-14.04.5.4.iso&amp;rdquo;&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;filename&amp;rdquo;: &amp;ldquo;empty30G.qcow2&amp;rdquo;,&lt;br&gt;
&amp;ldquo;version&amp;rdquo;: &amp;ldquo;1.0&amp;rdquo;,&lt;br&gt;
&amp;ldquo;md5sum&amp;rdquo;: &amp;ldquo;3411a599e822f2ac6be560a26405821a&amp;rdquo;,&lt;br&gt;
&amp;ldquo;filesize&amp;rdquo;: 197120,&lt;br&gt;
&amp;ldquo;download_url&amp;rdquo;: &amp;ldquo;https://sourceforge.net/projects/gns-3/files/Empty%20Qemu%30disk/&amp;quot;,&lt;br&gt;
&amp;ldquo;direct_download_url&amp;rdquo;: &amp;ldquo;https://sourceforge.net/projects/gns-3/files/Empty%20Qemu%20disk/empty30G.qcow2/download&amp;rdquo;&lt;br&gt;
}&lt;br&gt;
],&lt;br&gt;
&amp;ldquo;versions&amp;rdquo;: [&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;name&amp;rdquo;: &amp;ldquo;16.04.7.1&amp;rdquo;,&lt;br&gt;
&amp;ldquo;images&amp;rdquo;: {&lt;br&gt;
&amp;ldquo;hda_disk_image&amp;rdquo;: &amp;ldquo;empty30G.qcow2&amp;rdquo;,&lt;br&gt;
&amp;ldquo;cdrom_image&amp;rdquo;: &amp;ldquo;securityonion-16.04.7.1.iso&amp;rdquo;&lt;br&gt;
}&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;name&amp;rdquo;: &amp;ldquo;16.04.6.1&amp;rdquo;,&lt;br&gt;
&amp;ldquo;images&amp;rdquo;: {&lt;br&gt;
&amp;ldquo;hda_disk_image&amp;rdquo;: &amp;ldquo;empty30G.qcow2&amp;rdquo;,&lt;br&gt;
&amp;ldquo;cdrom_image&amp;rdquo;: &amp;ldquo;securityonion-16.04.6.1.iso&amp;rdquo;&lt;br&gt;
}&lt;br&gt;
},&lt;br&gt;
{&lt;br&gt;
&amp;ldquo;name&amp;rdquo;: &amp;ldquo;14.04.5.4&amp;rdquo;,&lt;br&gt;
&amp;ldquo;images&amp;rdquo;: {&lt;br&gt;
&amp;ldquo;hda_disk_image&amp;rdquo;: &amp;ldquo;empty30G.qcow2&amp;rdquo;,&lt;br&gt;
&amp;ldquo;cdrom_image&amp;rdquo;: &amp;ldquo;securityonion-14.04.5.4.iso&amp;rdquo;&lt;br&gt;
}&lt;br&gt;
}&lt;br&gt;
]&lt;br&gt;
}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;p&gt;In GNS3, go to File &amp;gt; Import Appliance and make sure that your appliance imports correctly.  GNS3 will provide guidance if there&amp;rsquo;s a formatting error.  Looking at the JSON above, you can imagine that a common mistake is unmatched brackets!&lt;/p&gt;
&lt;p&gt;If the GNS3a file loads, test it by creating an instance.  You need to test at least any new versions you added.  Make sure the appliance boots without error and that expected interfaces are available.&lt;/p&gt;
&lt;h2 id=&#34;submit-a-pull-request&#34;&gt;Submit a Pull Request&lt;/h2&gt;
&lt;p&gt;Once the pieces are working, submit the appliance to the community by cloning the GNS3-registry on Github and adding in your file.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git clone &lt;a href=&#34;https://github.com/GNS3/gns3-registry.git&#34;&gt;https://github.com/GNS3/gns3-registry.git&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you&amp;rsquo;ve &lt;em&gt;already&lt;/em&gt; cloned it, make sure that your branch is up to date.  &lt;em&gt;Upstream&lt;/em&gt; is the original source (in this case the GNS3 copy).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git fetch upstream&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Two Python programs are included in the repo.  Run them both on your copy before continuing.  These are QA processes that look for issues before you submit.  They &lt;em&gt;will&lt;/em&gt; take a little time to run.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pip3 install -r requirements.txt   # this does &lt;strong&gt;pip3 install jsonschma&lt;/strong&gt; and &lt;strong&gt;pip3 install pycurl&lt;/strong&gt;&lt;br&gt;
python3 check.py&lt;br&gt;
python3 check_url.py&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Next push your local copy to your github copy.  In Github terms, &lt;em&gt;origin&lt;/em&gt; is your copy on Github, and &lt;em&gt;master&lt;/em&gt; is the local copy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git add .&lt;br&gt;
git commit -m &amp;ldquo;Updated Security Onion&amp;rdquo;&lt;br&gt;
git push -f origin master&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now we have an up to date local copy of the gns3-registry that includes our updated gns3a appliance and we&amp;rsquo;ve updated our fork on Github.  Next, we offer our update to the project via a &lt;em&gt;Pull Request&lt;/em&gt;.  You are going to be one of the cool kids!
&lt;img src=&#34;https://www.nextpertise.net/PullRequest.png#center&#34; alt=&#34;Pull Request&#34;&gt;
Go to the gns3-registry repository on Github and select the Pull Requests tab and click the big green &lt;strong&gt;New pull request&lt;/strong&gt; button. Under Compare, select the link to &lt;em&gt;compare across forks&lt;/em&gt; (since your copy is a fork) and select your fork.  It should show you the changes to files so take a moment to digest that and make sure this PR is doing what you want.  Finally, submit the Pull Request.  Github will email you when there&amp;rsquo;s an update to the request.  If the GNS3 team has a question, they&amp;rsquo;ll submit a comment on the PR and leave it open for you to resolve.  Otherwise, it will get merged in and all the other GNS3 users will be able to enjoy your hard work!&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Team Documentation Using GitHub and Pandoc</title>
      <link>https://www.nextpertise.net/pandoc/</link>
      <pubDate>Tue, 18 Aug 2020 13:56:30 -0400</pubDate>
      
      <guid>https://www.nextpertise.net/pandoc/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://thumbs.gfycat.com/GargantuanScaryAnura-max-1mb.gif#floatleft&#34; alt=&#34;Dean Wormer&#34;&gt;
Building team documentation is a critical part of IT.  After all, you can&amp;rsquo;t manage what you don&amp;rsquo;t know about.  You can&amp;rsquo;t follow policies you don&amp;rsquo;t know about.  It&amp;rsquo;s common in IT that documentation is divided between shared files and updated copies on individual laptops.  The problem is that it&amp;rsquo;s difficult for any one person to collect all the most recent files.  I&amp;rsquo;ve learned a lot about Git in the last few years and I wanted to explore whether it could be an answer.&lt;/p&gt;
&lt;p&gt;Various attempts have been made to resolve this versioning issue.  One common approach is to ask everyone to contribute their individual documents to a shared folder.  This has the advantage that everyone can be a contributor and the files are accessible and easy to update.  However, different team members may update the file at different times and in different ways and there&amp;rsquo;s no clear editorial process to bring everything back together.  A second approach is to have a strict editorial process &amp;ndash; maybe a dedicated person who &amp;ldquo;checks in&amp;rdquo; so the boss can &amp;ldquo;approve&amp;rdquo;.  There&amp;rsquo;s typically a drop box for proposed documents and then a locked-down directory with a PDF for the final version.  This process can take a while, can occupy a person, and is discouraging to contributors.&lt;/p&gt;
&lt;p&gt;Using Git has a lot of advantages.  Everyone can have an up-to-date copy using &lt;strong&gt;git clone&lt;/strong&gt; and &lt;strong&gt;git fetch&lt;/strong&gt;.  Team members can edit documents and submit them as Pull Requests (PRs).  There&amp;rsquo;s a built in process for the repo owner to accept or reject those changes.  GitHub already has an issues process that would make it easy to note deficiencies and discrepancies.  Finally, Github repos can be marked private, are available even when internal systems are down, and maintain historical versions.&lt;/p&gt;
&lt;p&gt;Having a repository of Word files would be useful, but formatting can be maddening.  All those files will use different fonts, sizes, margins, colors, headings . . . sigh.  Another problem is that you&amp;rsquo;ll have a directory full of files with names like &lt;strong&gt;ITPROC1.docx&lt;/strong&gt;.  As an administrator, I would like to have one place where I can easily browse through documentation and be confident that I&amp;rsquo;m up to date!&lt;/p&gt;
&lt;p&gt;My proposal is to use Markdown files for documentation.  They&amp;rsquo;re easy to create and reasonably readable in a text editor.  As pushes or PRs occur, these files can be combined into a PDF using &lt;strong&gt;pandoc&lt;/strong&gt;.  I&amp;rsquo;ve built a demonstration of this in the referenced Github repository.  There&amp;rsquo;s a Continuous Integration (CI) process built out of Github Actions.  Setting that up adds a &lt;em&gt;.github/workflows/name.yaml&lt;/em&gt; file to your repository.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Be careful!&lt;/strong&gt;  &lt;em&gt;I originally built my repository locally and pushed it to Github, then used the Github actions &amp;ldquo;wizard&amp;rdquo; to setup the CI process.  That builds an initial configuration file for you and puts it into your repository.  The next time I pushed, this directory and file were wiped out!  The result was that the CI process didn&amp;rsquo;t run and it took me a while to understand what I had done.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s my YAML file to handle the CI process.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;name: CI&lt;br&gt;
on:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;push:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;branches: [ master ]&lt;br&gt;
pull_request:&lt;br&gt;
branches: [ master ]&lt;br&gt;
jobs:&lt;br&gt;
build:&lt;br&gt;
runs-on: ubuntu-latest&lt;br&gt;
steps:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;- uses: actions/checkout@v2&lt;br&gt;
- run: echo &amp;ldquo;::set-env name=FILELIST::$(printf &amp;lsquo;%s &#39; *.md)&amp;rdquo;&lt;br&gt;
- uses: docker://pandoc/latex:2.9&lt;br&gt;
with:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;args: &amp;ndash;toc &amp;ndash;output=output/result.pdf ${{env.FILELIST}}&lt;br&gt;
- uses: actions/upload-artifact@master&lt;br&gt;
with:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;name: output&lt;br&gt;
path: output&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://www.nextpertise.net/githubartifact.png#floatright&#34; alt=&#34;Artifact&#34;&gt;
This process will pull all the md files into a PDF, ordering them alphabetically.  It will then add a table of contents to the front, based on headings found in the files.  I&amp;rsquo;ve cribbed this together using the pandoc example on github (referenced below).&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.nextpertise.net/result.pdf&#34;&gt;result&lt;/a&gt; is a zip file named &lt;em&gt;output&lt;/em&gt; that will show up under Actions.  The latest run should be at the top of the screen, and clicking the link should show you the Artifacts produced.  Note that if there are problems with the CI process, you can review those by looking at the &lt;em&gt;build&lt;/em&gt; section.  You could add to the CI process to have the output file emailed to you or stored in a convenient place.  For instance, you could send the PDF directly to your Kindle!  I&amp;rsquo;ve chosen not to bother with that since this is a public repository.  Another idea would be to have this process output HTML files that could be placed on a local web server.  Pandoc can handle PDF, HTML, EPUB, and a lot of other formats.&lt;/p&gt;
&lt;p&gt;My repository is public and you are welcome to clone it and play with this process.  The markdown files currently in place are filled with Lorem Ipsum nonsense but they give you a sense of how it might look as a finished PDF.  I&amp;rsquo;d like to build in an automatic way to add a cover page.  The Pandoc documentation also references using a CSS file to dictate formatting when outputting to EPUB, so I&amp;rsquo;d like to see if I could get that supported in PDF.  PRs are welcome if you have any ideas!&lt;/p&gt;
&lt;p&gt;What do you think?  Would this be a good way for your IT group to maintain documentation?  I&amp;rsquo;d welcome your comments in the section below!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
